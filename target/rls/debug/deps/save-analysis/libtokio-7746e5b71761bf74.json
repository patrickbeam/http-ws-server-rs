{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2","program":"/Users/patrickbeam/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"rt\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","-C","metadata=7746e5b71761bf74","-C","extra-filename=-7746e5b71761bf74","--out-dir","/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps","-L","dependency=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps","--extern","bytes=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libbytes-344cb08e618e1106.rmeta","--extern","libc=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/liblibc-38d9962d75636540.rmeta","--extern","memchr=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libmemchr-f89278d371710ab4.rmeta","--extern","mio=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libmio-249b8d8efac1b693.rmeta","--extern","pin_project_lite=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libpin_project_lite-bc1ff2ea7b4db878.rmeta","--extern","tokio_macros=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libtokio_macros-0af0091487bba43e.dylib","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","/Users/patrickbeam/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libtokio-7746e5b71761bf74.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[952489692440155859,2330417612879591522]},"crate_root":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src","external_crates":[{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2450264148744425324,10050667756610945632]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[5216882650067454300,803391174261596525]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5321725740897068604,14247691274753233016]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15008236376303079999,8121662539630509915]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12920482519877858869,7783732174216732460]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12220061461292827086,10995062625150216334]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4557698817887729143,15105021759844686565]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9270263569388356812,1031064821649785583]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17403927150379973007,17129611224880441426]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8342530726152111216,8633669874212043972]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16317838093811012662,7640540080182738814]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11516351311229957058,6496694232360362766]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15319259245696541708,12758538875610414082]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13027830824513170433,9319164864677654917]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6239108798947591245,16929767405147073453]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[9689407603164028381,5815853528255048552]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","num":17,"id":{"name":"mio","disambiguator":[9039263132287479554,1461210656635789179]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","num":18,"id":{"name":"log","disambiguator":[1163638369942623445,8155073636483162634]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","num":19,"id":{"name":"cfg_if","disambiguator":[3936438787002371380,599542047436953948]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","num":20,"id":{"name":"libc","disambiguator":[14115450235977407651,3558586755545689048]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/seek.rs","num":21,"id":{"name":"pin_project_lite","disambiguator":[11419914542991029966,10992764037491816547]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","num":22,"id":{"name":"bytes","disambiguator":[10273698356506573899,13202361368699560444]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","num":23,"id":{"name":"tokio_macros","disambiguator":[18416363850595630674,10314091483129165857]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_until.rs","num":24,"id":{"name":"memchr","disambiguator":[18396972643416731249,3984552347758791776]}}],"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":0,"byte_end":17552,"line_start":1,"line_end":481,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/support.rs","byte_start":31470,"byte_end":31477,"line_start":2,"line_end":2,"column_start":28,"column_end":35},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/support.rs","byte_start":31518,"byte_end":31528,"line_start":3,"line_end":3,"column_start":40,"column_end":50},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/support.rs","byte_start":31555,"byte_end":31567,"line_start":4,"line_end":4,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":2,"index":12108},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/support.rs","byte_start":31593,"byte_end":31599,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":2,"index":33584},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/support.rs","byte_start":31619,"byte_end":31622,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":2,"index":36186},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/support.rs","byte_start":31643,"byte_end":31647,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/mod.rs","byte_start":31850,"byte_end":31857,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42988,"byte_end":43000,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43045,"byte_end":43054,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43099,"byte_end":43108,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43155,"byte_end":43165,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":363},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43206,"byte_end":43213,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":1,"index":3753},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43383,"byte_end":43388,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":1,"index":10197},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43390,"byte_end":43399,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":1,"index":3751},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43401,"byte_end":43407,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":1,"index":10274},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43409,"byte_end":43417,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":1427},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43511,"byte_end":43519,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":1440},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43521,"byte_end":43526,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":1655},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43798,"byte_end":43805,"line_start":225,"line_end":225,"column_start":35,"column_end":42},"alias_span":null,"name":"AsyncFd","value":"","parent":{"krate":0,"index":1742}},{"kind":"Use","ref_id":{"krate":0,"index":1659},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43807,"byte_end":43824,"line_start":225,"line_end":225,"column_start":44,"column_end":61},"alias_span":null,"name":"AsyncFdReadyGuard","value":"","parent":{"krate":0,"index":1742}},{"kind":"Use","ref_id":{"krate":0,"index":1664},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43826,"byte_end":43846,"line_start":225,"line_end":225,"column_start":63,"column_end":83},"alias_span":null,"name":"AsyncFdReadyMutGuard","value":"","parent":{"krate":0,"index":1742}},{"kind":"Use","ref_id":{"krate":0,"index":1756},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43848,"byte_end":43858,"line_start":225,"line_end":225,"column_start":85,"column_end":95},"alias_span":null,"name":"TryIoError","value":"","parent":{"krate":0,"index":1742}},{"kind":"Use","ref_id":{"krate":0,"index":1964},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44120,"byte_end":44125,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":1958},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44127,"byte_end":44135,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":1961},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44137,"byte_end":44146,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3546},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44228,"byte_end":44232,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3552},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44234,"byte_end":44242,"line_start":249,"line_end":249,"column_start":15,"column_end":23},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":2721},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44244,"byte_end":44250,"line_start":249,"line_end":249,"column_start":25,"column_end":31},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3572},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44252,"byte_end":44257,"line_start":249,"line_end":249,"column_start":33,"column_end":38},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3730},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44259,"byte_end":44265,"line_start":249,"line_end":249,"column_start":40,"column_end":46},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3737},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44267,"byte_end":44271,"line_start":249,"line_end":249,"column_start":48,"column_end":52},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3422},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44273,"byte_end":44288,"line_start":249,"line_end":249,"column_start":54,"column_end":69},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3430},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44290,"byte_end":44302,"line_start":249,"line_end":249,"column_start":71,"column_end":83},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3481},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44304,"byte_end":44316,"line_start":249,"line_end":249,"column_start":85,"column_end":97},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3484},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44318,"byte_end":44331,"line_start":249,"line_end":249,"column_start":99,"column_end":112},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":12675},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44341,"byte_end":44350,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":12644},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44352,"byte_end":44361,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":12598},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44363,"byte_end":44372,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3573},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44374,"byte_end":44386,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3570},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44388,"byte_end":44393,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":12457},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44395,"byte_end":44400,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3731},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44402,"byte_end":44408,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":3735},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44410,"byte_end":44414,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":11094},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44416,"byte_end":44421,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":11054},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":44423,"byte_end":44427,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":157}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81335,"byte_end":81348,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":4570},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81408,"byte_end":81419,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":4579},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","byte_start":9155596,"byte_end":9155604,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3969}},{"kind":"Use","ref_id":{"krate":0,"index":4586},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","byte_start":9155606,"byte_end":9155615,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3969}},{"kind":"Use","ref_id":{"krate":0,"index":4593},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","byte_start":9155658,"byte_end":9155671,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3969}},{"kind":"Use","ref_id":{"krate":0,"index":4597},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","byte_start":9155673,"byte_end":9155687,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3969}},{"kind":"Use","ref_id":{"krate":0,"index":4602},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","byte_start":9155689,"byte_end":9155701,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3969}},{"kind":"Use","ref_id":{"krate":0,"index":4603},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","byte_start":9155689,"byte_end":9155701,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3969}},{"kind":"Use","ref_id":{"krate":0,"index":4575},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81466,"byte_end":81477,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":4577},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81504,"byte_end":81513,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":4608},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81540,"byte_end":81549,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":4610},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81582,"byte_end":81591,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":5156},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275735,"byte_end":9275743,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":5163},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275745,"byte_end":9275754,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":5170},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275797,"byte_end":9275810,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":5174},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275812,"byte_end":9275826,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":5179},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275828,"byte_end":9275840,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":5180},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275828,"byte_end":9275840,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":4921},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275880,"byte_end":9275890,"line_start":14,"line_end":14,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":4922},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275880,"byte_end":9275890,"line_start":14,"line_end":14,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":5187},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275978,"byte_end":9275983,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":4615}},{"kind":"Use","ref_id":{"krate":0,"index":5149},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81666,"byte_end":81678,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":5153},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81708,"byte_end":81720,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":5185},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81748,"byte_end":81758,"line_start":47,"line_end":47,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":405}},{"kind":"Use","ref_id":{"krate":0,"index":6371},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9362485,"byte_end":9362492,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":5290}},{"kind":"Use","ref_id":{"krate":0,"index":6611},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9362617,"byte_end":9362627,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":5290}},{"kind":"Use","ref_id":{"krate":0,"index":6600},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9362629,"byte_end":9362635,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":5290}},{"kind":"Use","ref_id":{"krate":0,"index":8285},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516048,"byte_end":9516055,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8297},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516057,"byte_end":9516074,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":7078},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560512,"byte_end":9560519,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":6941}},{"kind":"Use","ref_id":{"krate":0,"index":7071},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560521,"byte_end":9560527,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":6941}},{"kind":"Use","ref_id":{"krate":0,"index":7075},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560529,"byte_end":9560537,"line_start":76,"line_end":76,"column_start":42,"column_end":50},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":6941}},{"kind":"Use","ref_id":{"krate":0,"index":7068},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560539,"byte_end":9560545,"line_start":76,"line_end":76,"column_start":52,"column_end":58},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":6941}},{"kind":"Use","ref_id":{"krate":0,"index":7421},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560623,"byte_end":9560640,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":6941}},{"kind":"Use","ref_id":{"krate":0,"index":7415},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560642,"byte_end":9560659,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":6941}},{"kind":"Use","ref_id":{"krate":0,"index":7406},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560661,"byte_end":9560676,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":6941}},{"kind":"Use","ref_id":{"krate":0,"index":7513},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516156,"byte_end":9516161,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":7517},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516163,"byte_end":9516173,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8384},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516175,"byte_end":9516187,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":7521},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516189,"byte_end":9516204,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8389},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516255,"byte_end":9516261,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8482},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516352,"byte_end":9516364,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8472},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516366,"byte_end":9516381,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8487},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516428,"byte_end":9516437,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8491},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516439,"byte_end":9516454,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8498},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516456,"byte_end":9516476,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8503},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516517,"byte_end":9516523,"line_start":453,"line_end":453,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8048},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516525,"byte_end":9516540,"line_start":453,"line_end":453,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":8075},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516542,"byte_end":9516558,"line_start":453,"line_end":453,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":6706}},{"kind":"Use","ref_id":{"krate":0,"index":5972},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135294,"byte_end":135303,"line_start":219,"line_end":219,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":899}},{"kind":"Use","ref_id":{"krate":0,"index":5974},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135305,"byte_end":135315,"line_start":219,"line_end":219,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":899}},{"kind":"Use","ref_id":{"krate":0,"index":8801},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135359,"byte_end":135373,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":899}},{"kind":"Use","ref_id":{"krate":0,"index":8804},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135410,"byte_end":135415,"line_start":225,"line_end":225,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":899}},{"kind":"Use","ref_id":{"krate":0,"index":8806},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135536,"byte_end":135545,"line_start":232,"line_end":232,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":899}},{"kind":"Use","ref_id":{"krate":0,"index":8823},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135583,"byte_end":135594,"line_start":235,"line_end":235,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":899}},{"kind":"Use","ref_id":{"krate":0,"index":8814},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135596,"byte_end":135604,"line_start":235,"line_end":235,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":899}},{"kind":"Use","ref_id":{"krate":0,"index":8751},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135652,"byte_end":135660,"line_start":238,"line_end":238,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":899}},{"kind":"Use","ref_id":{"krate":0,"index":8804},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14880,"byte_end":14885,"line_start":398,"line_end":398,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9112},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805510,"byte_end":9805515,"line_start":99,"line_end":99,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9111},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805517,"byte_end":9805528,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9889},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805530,"byte_end":9805535,"line_start":99,"line_end":99,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9527},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805591,"byte_end":9805598,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9326},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805634,"byte_end":9805642,"line_start":107,"line_end":107,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9327},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805644,"byte_end":9805655,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9546},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805657,"byte_end":9805665,"line_start":107,"line_end":107,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9377},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805715,"byte_end":9805722,"line_start":111,"line_end":111,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9379},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805724,"byte_end":9805734,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":9851},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805736,"byte_end":9805743,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":2,"index":36064},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805856,"byte_end":9805864,"line_start":119,"line_end":119,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":8841}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/mod.rs","byte_start":136358,"byte_end":136370,"line_start":37,"line_end":37,"column_start":15,"column_end":27},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":900}},{"kind":"Use","ref_id":{"krate":23,"index":70},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16665,"byte_end":16696,"line_start":451,"line_end":451,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":65},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":17196,"byte_end":17203,"line_start":465,"line_end":465,"column_start":35,"column_end":42},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":23,"index":67},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":17247,"byte_end":17254,"line_start":466,"line_end":466,"column_start":35,"column_end":42},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":0,"byte_end":17552,"line_start":1,"line_end":481,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":91},{"krate":0,"index":157},{"krate":0,"index":405},{"krate":0,"index":499},{"krate":0,"index":748},{"krate":0,"index":877},{"krate":0,"index":5290},{"krate":0,"index":878},{"krate":0,"index":6706},{"krate":0,"index":899},{"krate":0,"index":8838},{"krate":0,"index":8841},{"krate":0,"index":900},{"krate":0,"index":977},{"krate":0,"index":9837},{"krate":0,"index":9840},{"krate":0,"index":9843}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":55,"byte_end":167,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":168,"byte_end":274,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":483,"byte_end":566,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":567,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":571,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":652,"byte_end":724,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":725,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":762,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":766,"byte_end":833,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":834,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":915,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":939,"byte_end":1026,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1027,"byte_end":1100,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1101,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1180,"byte_end":1260,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1261,"byte_end":1311,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1312,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1316,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1377,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1410,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1458,"byte_end":1484,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1485,"byte_end":1506,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1507,"byte_end":1526,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1527,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1557,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1585,"byte_end":1604,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1605,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1635,"byte_end":1681,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1682,"byte_end":1685,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1686,"byte_end":1707,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1712,"byte_end":1791,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1792,"byte_end":1865,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1866,"byte_end":1945,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1946,"byte_end":1961,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1962,"byte_end":1965,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":1966,"byte_end":2038,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2039,"byte_end":2076,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2077,"byte_end":2080,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2081,"byte_end":2092,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2093,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2144,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2152,"byte_end":2155,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2156,"byte_end":2186,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2187,"byte_end":2190,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2191,"byte_end":2272,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2273,"byte_end":2358,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2359,"byte_end":2443,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2444,"byte_end":2474,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2475,"byte_end":2478,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2479,"byte_end":2495,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2496,"byte_end":2499,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2500,"byte_end":2566,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2567,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2583,"byte_end":2633,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2634,"byte_end":2641,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2642,"byte_end":2645,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2646,"byte_end":2673,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2674,"byte_end":2677,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2678,"byte_end":2757,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2758,"byte_end":2840,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2841,"byte_end":2922,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2923,"byte_end":2958,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2959,"byte_end":2962,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2963,"byte_end":2979,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2980,"byte_end":2983,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":2984,"byte_end":3066,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3067,"byte_end":3117,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3118,"byte_end":3121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3122,"byte_end":3133,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3134,"byte_end":3189,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3190,"byte_end":3197,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3198,"byte_end":3201,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3202,"byte_end":3227,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3228,"byte_end":3231,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3232,"byte_end":3308,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3309,"byte_end":3392,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3393,"byte_end":3436,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3437,"byte_end":3440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3441,"byte_end":3520,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3521,"byte_end":3604,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3605,"byte_end":3683,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3684,"byte_end":3703,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3704,"byte_end":3707,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3708,"byte_end":3781,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3782,"byte_end":3797,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3798,"byte_end":3801,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3802,"byte_end":3845,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3846,"byte_end":3878,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3879,"byte_end":3914,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3915,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":3959,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4013,"byte_end":4016,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4017,"byte_end":4095,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4096,"byte_end":4152,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4153,"byte_end":4156,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4157,"byte_end":4230,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4231,"byte_end":4251,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4252,"byte_end":4327,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4328,"byte_end":4340,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4341,"byte_end":4421,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4422,"byte_end":4452,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4453,"byte_end":4456,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4457,"byte_end":4533,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4534,"byte_end":4546,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4547,"byte_end":4550,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4551,"byte_end":4583,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4584,"byte_end":4617,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4618,"byte_end":4655,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4656,"byte_end":4693,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4694,"byte_end":4725,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4726,"byte_end":4759,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4760,"byte_end":4763,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4764,"byte_end":4835,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4836,"byte_end":4916,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":4917,"byte_end":5005,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5006,"byte_end":5030,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5031,"byte_end":5034,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5035,"byte_end":5110,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5111,"byte_end":5114,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5115,"byte_end":5147,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5148,"byte_end":5181,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5182,"byte_end":5221,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5222,"byte_end":5259,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5260,"byte_end":5263,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5264,"byte_end":5342,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5343,"byte_end":5427,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5428,"byte_end":5512,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5513,"byte_end":5606,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5607,"byte_end":5698,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5699,"byte_end":5738,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5739,"byte_end":5742,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5743,"byte_end":5821,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5822,"byte_end":5895,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5896,"byte_end":5968,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":5969,"byte_end":6047,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6048,"byte_end":6118,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6119,"byte_end":6122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6123,"byte_end":6149,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6150,"byte_end":6188,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6189,"byte_end":6229,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6230,"byte_end":6270,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6271,"byte_end":6315,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6316,"byte_end":6376,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6377,"byte_end":6432,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6433,"byte_end":6436,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6437,"byte_end":6477,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6478,"byte_end":6481,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6482,"byte_end":6561,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6562,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6640,"byte_end":6720,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6721,"byte_end":6795,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6796,"byte_end":6875,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6876,"byte_end":6953,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":6954,"byte_end":7027,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7028,"byte_end":7104,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7105,"byte_end":7186,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7187,"byte_end":7257,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7258,"byte_end":7332,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7333,"byte_end":7409,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7410,"byte_end":7487,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7488,"byte_end":7491,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7492,"byte_end":7569,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7570,"byte_end":7573,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7574,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7615,"byte_end":7668,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7669,"byte_end":7740,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7741,"byte_end":7744,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7745,"byte_end":7752,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7753,"byte_end":7771,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7772,"byte_end":7793,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7794,"byte_end":7838,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7839,"byte_end":7842,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7843,"byte_end":7903,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7904,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7957,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8005,"byte_end":8008,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8009,"byte_end":8064,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8065,"byte_end":8140,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8141,"byte_end":8158,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8159,"byte_end":8196,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8197,"byte_end":8202,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8203,"byte_end":8210,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8211,"byte_end":8214,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8215,"byte_end":8293,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8294,"byte_end":8370,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8371,"byte_end":8447,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8448,"byte_end":8472,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8473,"byte_end":8476,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8477,"byte_end":8511,"line_start":211,"line_end":211,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8512,"byte_end":8549,"line_start":212,"line_end":212,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8550,"byte_end":8553,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8554,"byte_end":8576,"line_start":214,"line_end":214,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8577,"byte_end":8580,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8581,"byte_end":8660,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8661,"byte_end":8708,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8709,"byte_end":8712,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8713,"byte_end":8792,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8793,"byte_end":8873,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8874,"byte_end":8954,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":8955,"byte_end":9026,"line_start":222,"line_end":222,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9027,"byte_end":9058,"line_start":223,"line_end":223,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9059,"byte_end":9062,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9063,"byte_end":9143,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9144,"byte_end":9204,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9205,"byte_end":9208,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9209,"byte_end":9288,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9289,"byte_end":9358,"line_start":229,"line_end":229,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9359,"byte_end":9436,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9437,"byte_end":9493,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9494,"byte_end":9574,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9575,"byte_end":9620,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9621,"byte_end":9700,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9701,"byte_end":9735,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9736,"byte_end":9739,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9740,"byte_end":9768,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9769,"byte_end":9808,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9809,"byte_end":9850,"line_start":239,"line_end":239,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9851,"byte_end":9896,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9897,"byte_end":9921,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9922,"byte_end":9952,"line_start":242,"line_end":242,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9953,"byte_end":9979,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":9980,"byte_end":10012,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10013,"byte_end":10040,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10041,"byte_end":10069,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10070,"byte_end":10094,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10095,"byte_end":10131,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10132,"byte_end":10170,"line_start":249,"line_end":249,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10171,"byte_end":10174,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10175,"byte_end":10189,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10190,"byte_end":10193,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10194,"byte_end":10223,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10224,"byte_end":10227,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10228,"byte_end":10241,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10242,"byte_end":10274,"line_start":256,"line_end":256,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10275,"byte_end":10324,"line_start":257,"line_end":257,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10325,"byte_end":10328,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10329,"byte_end":10347,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10348,"byte_end":10411,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10412,"byte_end":10478,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10479,"byte_end":10482,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10483,"byte_end":10497,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10498,"byte_end":10557,"line_start":264,"line_end":264,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10558,"byte_end":10561,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10562,"byte_end":10599,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10600,"byte_end":10640,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10641,"byte_end":10644,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10645,"byte_end":10725,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10726,"byte_end":10748,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10749,"byte_end":10812,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10813,"byte_end":10853,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10854,"byte_end":10904,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10905,"byte_end":10940,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10941,"byte_end":10976,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":10977,"byte_end":11060,"line_start":276,"line_end":276,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11061,"byte_end":11096,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11097,"byte_end":11122,"line_start":278,"line_end":278,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11123,"byte_end":11145,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11146,"byte_end":11149,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11150,"byte_end":11192,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11193,"byte_end":11265,"line_start":282,"line_end":282,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11266,"byte_end":11344,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11345,"byte_end":11376,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11377,"byte_end":11398,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11399,"byte_end":11416,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11417,"byte_end":11432,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11433,"byte_end":11442,"line_start":288,"line_end":288,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11443,"byte_end":11448,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11449,"byte_end":11456,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11457,"byte_end":11460,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11461,"byte_end":11481,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11482,"byte_end":11485,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11486,"byte_end":11567,"line_start":294,"line_end":294,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11568,"byte_end":11646,"line_start":295,"line_end":295,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11647,"byte_end":11727,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11728,"byte_end":11805,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11806,"byte_end":11889,"line_start":298,"line_end":298,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11890,"byte_end":11967,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":11968,"byte_end":12055,"line_start":300,"line_end":300,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12056,"byte_end":12137,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12138,"byte_end":12147,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12148,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12152,"byte_end":12217,"line_start":304,"line_end":304,"column_start":1,"column_end":66}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12218,"byte_end":12291,"line_start":305,"line_end":305,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12292,"byte_end":12332,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12333,"byte_end":12419,"line_start":307,"line_end":307,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12420,"byte_end":12471,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12472,"byte_end":12532,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12533,"byte_end":12623,"line_start":310,"line_end":310,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12624,"byte_end":12680,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12681,"byte_end":12758,"line_start":312,"line_end":312,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12759,"byte_end":12792,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12793,"byte_end":12841,"line_start":314,"line_end":314,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12842,"byte_end":12911,"line_start":315,"line_end":315,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12912,"byte_end":12958,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":12959,"byte_end":13009,"line_start":317,"line_end":317,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13010,"byte_end":13048,"line_start":318,"line_end":318,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13049,"byte_end":13127,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13128,"byte_end":13131,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13132,"byte_end":13214,"line_start":321,"line_end":321,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13215,"byte_end":13237,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13238,"byte_end":13241,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13242,"byte_end":13267,"line_start":324,"line_end":324,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13268,"byte_end":13271,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13272,"byte_end":13340,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13341,"byte_end":13404,"line_start":327,"line_end":327,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13405,"byte_end":13422,"line_start":328,"line_end":328,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13423,"byte_end":13426,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13427,"byte_end":13506,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13507,"byte_end":13584,"line_start":331,"line_end":331,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13585,"byte_end":13618,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13619,"byte_end":13622,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13623,"byte_end":13648,"line_start":334,"line_end":334,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13649,"byte_end":13652,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13653,"byte_end":13738,"line_start":336,"line_end":336,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13739,"byte_end":13823,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13824,"byte_end":13908,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13909,"byte_end":13948,"line_start":339,"line_end":339,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13949,"byte_end":13952,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13953,"byte_end":13993,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13994,"byte_end":13997,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":13998,"byte_end":14095,"line_start":343,"line_end":343,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":978},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":81}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14284,"byte_end":14296,"line_start":349,"line_end":349,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/mod.rs","byte_start":17589,"byte_end":17609,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":997},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32344,"byte_end":32350,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":995},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32309,"byte_end":32339,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32404,"byte_end":32408,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":995},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32361,"byte_end":32399,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32570,"byte_end":32574,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":995},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32427,"byte_end":32493,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32498,"byte_end":32565,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":995},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32280,"byte_end":32289,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32216,"byte_end":32253,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32737,"byte_end":32747,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32692,"byte_end":32729,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":33150,"byte_end":33160,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32866,"byte_end":32951,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32956,"byte_end":33027,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":33032,"byte_end":33105,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":33110,"byte_end":33138,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":33538,"byte_end":33549,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":33417,"byte_end":33484,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":33489,"byte_end":33512,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":33517,"byte_end":33526,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":34783,"byte_end":34789,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":34731,"byte_end":34771,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":34919,"byte_end":34926,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":34840,"byte_end":34911,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8897145,"byte_end":8897150,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8896916,"byte_end":8896957,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8896958,"byte_end":8896961,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8896962,"byte_end":8897039,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8897108,"byte_end":8897133,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":157},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":1074},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1384},{"krate":0,"index":1424},{"krate":0,"index":1621},{"krate":0,"index":1742},{"krate":0,"index":1761},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":1919},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1955}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35440,"byte_end":35517,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35518,"byte_end":35521,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35522,"byte_end":35593,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35594,"byte_end":35674,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35675,"byte_end":35749,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35750,"byte_end":35753,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35754,"byte_end":35784,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35785,"byte_end":35788,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35789,"byte_end":35869,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35870,"byte_end":35947,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":35948,"byte_end":36025,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36026,"byte_end":36106,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36107,"byte_end":36185,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36186,"byte_end":36251,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36252,"byte_end":36255,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36256,"byte_end":36328,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36329,"byte_end":36396,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36397,"byte_end":36476,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36477,"byte_end":36551,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36552,"byte_end":36626,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36627,"byte_end":36644,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36645,"byte_end":36648,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36649,"byte_end":36713,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36714,"byte_end":36789,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36790,"byte_end":36865,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36866,"byte_end":36943,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36944,"byte_end":36947,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":36948,"byte_end":37024,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37025,"byte_end":37100,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37101,"byte_end":37181,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37182,"byte_end":37253,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37254,"byte_end":37323,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37324,"byte_end":37327,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37328,"byte_end":37400,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37401,"byte_end":37481,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37482,"byte_end":37535,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37536,"byte_end":37539,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37540,"byte_end":37553,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37554,"byte_end":37594,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37595,"byte_end":37619,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37620,"byte_end":37623,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37624,"byte_end":37642,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37643,"byte_end":37682,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37683,"byte_end":37732,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37733,"byte_end":37766,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37767,"byte_end":37770,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37771,"byte_end":37801,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37802,"byte_end":37845,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37846,"byte_end":37849,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37850,"byte_end":37900,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37901,"byte_end":37915,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37916,"byte_end":37921,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37922,"byte_end":37929,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37930,"byte_end":37933,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37934,"byte_end":37963,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":37964,"byte_end":38004,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38005,"byte_end":38041,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38042,"byte_end":38083,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38084,"byte_end":38087,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38088,"byte_end":38123,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38124,"byte_end":38127,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38128,"byte_end":38209,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38210,"byte_end":38284,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38285,"byte_end":38363,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38364,"byte_end":38408,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38409,"byte_end":38412,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38413,"byte_end":38483,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38484,"byte_end":38562,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38563,"byte_end":38641,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38642,"byte_end":38719,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38720,"byte_end":38723,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38724,"byte_end":38799,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38800,"byte_end":38838,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38839,"byte_end":38842,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38843,"byte_end":38856,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38857,"byte_end":38911,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38912,"byte_end":38936,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38937,"byte_end":38940,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38941,"byte_end":38959,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":38960,"byte_end":38999,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39000,"byte_end":39045,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39046,"byte_end":39089,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39090,"byte_end":39129,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39130,"byte_end":39133,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39134,"byte_end":39168,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39169,"byte_end":39214,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39215,"byte_end":39218,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39219,"byte_end":39250,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39251,"byte_end":39265,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39266,"byte_end":39271,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39272,"byte_end":39279,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39280,"byte_end":39283,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39284,"byte_end":39365,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39366,"byte_end":39444,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39445,"byte_end":39507,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39508,"byte_end":39511,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39512,"byte_end":39525,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39526,"byte_end":39578,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39579,"byte_end":39603,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39604,"byte_end":39607,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39608,"byte_end":39626,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39627,"byte_end":39666,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39667,"byte_end":39714,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39715,"byte_end":39724,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39725,"byte_end":39772,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39773,"byte_end":39776,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39777,"byte_end":39819,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39820,"byte_end":39861,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39862,"byte_end":39865,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39866,"byte_end":39926,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39927,"byte_end":39961,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39962,"byte_end":39965,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":39966,"byte_end":40056,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40057,"byte_end":40060,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40061,"byte_end":40075,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40076,"byte_end":40081,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40082,"byte_end":40089,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40090,"byte_end":40093,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40094,"byte_end":40139,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40140,"byte_end":40182,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40183,"byte_end":40228,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40229,"byte_end":40268,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40269,"byte_end":40308,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40309,"byte_end":40312,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40313,"byte_end":40357,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40358,"byte_end":40361,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40362,"byte_end":40444,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40445,"byte_end":40524,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40525,"byte_end":40599,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40600,"byte_end":40673,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40674,"byte_end":40734,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40735,"byte_end":40738,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40739,"byte_end":40780,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40781,"byte_end":40784,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40785,"byte_end":40853,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40854,"byte_end":40923,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40924,"byte_end":40990,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":40991,"byte_end":41054,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41055,"byte_end":41122,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41123,"byte_end":41192,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41193,"byte_end":41263,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41264,"byte_end":41342,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41343,"byte_end":41368,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41369,"byte_end":41372,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41373,"byte_end":41449,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41450,"byte_end":41453,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41454,"byte_end":41485,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41486,"byte_end":41489,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41490,"byte_end":41570,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41571,"byte_end":41647,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41648,"byte_end":41695,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41696,"byte_end":41699,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41700,"byte_end":41773,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41774,"byte_end":41850,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41851,"byte_end":41927,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41928,"byte_end":41931,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41932,"byte_end":41953,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41954,"byte_end":41977,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":41978,"byte_end":42000,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42001,"byte_end":42004,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42005,"byte_end":42027,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42028,"byte_end":42031,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42032,"byte_end":42108,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42109,"byte_end":42156,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42157,"byte_end":42160,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42161,"byte_end":42195,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42196,"byte_end":42232,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42233,"byte_end":42273,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42274,"byte_end":42316,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42317,"byte_end":42390,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42391,"byte_end":42474,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42475,"byte_end":42558,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42559,"byte_end":42586,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42587,"byte_end":42620,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42621,"byte_end":42648,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42649,"byte_end":42676,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42677,"byte_end":42708,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42709,"byte_end":42779,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42780,"byte_end":42856,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":42857,"byte_end":42886,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45564,"byte_end":45576,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":44887,"byte_end":44918,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":44919,"byte_end":44922,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":44923,"byte_end":44995,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":44996,"byte_end":45074,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45075,"byte_end":45161,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45162,"byte_end":45239,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45240,"byte_end":45251,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45252,"byte_end":45255,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45256,"byte_end":45324,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45325,"byte_end":45349,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45350,"byte_end":45353,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45354,"byte_end":45396,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45397,"byte_end":45447,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45448,"byte_end":45501,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45502,"byte_end":45553,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46674,"byte_end":46687,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45594,"byte_end":45679,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45684,"byte_end":45725,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45730,"byte_end":45733,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45738,"byte_end":45785,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45790,"byte_end":45793,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45798,"byte_end":45857,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45862,"byte_end":45920,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45925,"byte_end":46006,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46011,"byte_end":46037,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46042,"byte_end":46045,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46050,"byte_end":46121,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46126,"byte_end":46188,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46193,"byte_end":46264,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46269,"byte_end":46350,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46355,"byte_end":46431,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46436,"byte_end":46487,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46492,"byte_end":46495,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46500,"byte_end":46571,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46576,"byte_end":46579,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46584,"byte_end":46623,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46628,"byte_end":46666,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47590,"byte_end":47597,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46765,"byte_end":46839,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46844,"byte_end":46911,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46916,"byte_end":46919,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":46924,"byte_end":46995,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47000,"byte_end":47069,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47074,"byte_end":47148,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47153,"byte_end":47230,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47235,"byte_end":47305,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47310,"byte_end":47363,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47368,"byte_end":47371,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47376,"byte_end":47448,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47453,"byte_end":47475,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47480,"byte_end":47483,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47488,"byte_end":47527,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":47532,"byte_end":47582,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":220},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50911,"byte_end":50920,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":221}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49224,"byte_end":49254,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49255,"byte_end":49258,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49259,"byte_end":49338,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49339,"byte_end":49413,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49414,"byte_end":49493,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49494,"byte_end":49571,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49572,"byte_end":49583,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49584,"byte_end":49587,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49588,"byte_end":49665,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49666,"byte_end":49684,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49685,"byte_end":49688,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49689,"byte_end":49769,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49770,"byte_end":49843,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49844,"byte_end":49923,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49924,"byte_end":49968,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49969,"byte_end":49972,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":49973,"byte_end":50038,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50039,"byte_end":50119,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50120,"byte_end":50199,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50200,"byte_end":50273,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50274,"byte_end":50347,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50348,"byte_end":50369,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50370,"byte_end":50373,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50374,"byte_end":50458,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50459,"byte_end":50483,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50484,"byte_end":50487,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50488,"byte_end":50561,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50562,"byte_end":50641,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50642,"byte_end":50645,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50646,"byte_end":50711,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50712,"byte_end":50733,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50734,"byte_end":50737,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50738,"byte_end":50777,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50778,"byte_end":50814,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50815,"byte_end":50854,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50855,"byte_end":50900,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51410,"byte_end":51419,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50927,"byte_end":50980,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50985,"byte_end":50988,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and fills `buf` with data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":50993,"byte_end":51064,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ read. If no data was read (`buf.filled().is_empty()`) it implies that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51069,"byte_end":51142,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51147,"byte_end":51172,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51177,"byte_end":51180,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51185,"byte_end":51260,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51265,"byte_end":51334,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51339,"byte_end":51402,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":259},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54015,"byte_end":54024,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53533,"byte_end":53563,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53564,"byte_end":53567,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53568,"byte_end":53642,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53643,"byte_end":53713,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53714,"byte_end":53783,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53784,"byte_end":53787,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53788,"byte_end":53853,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53854,"byte_end":53875,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53876,"byte_end":53879,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53880,"byte_end":53916,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53917,"byte_end":53958,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":53959,"byte_end":54004,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54666,"byte_end":54676,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54031,"byte_end":54088,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54093,"byte_end":54096,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54101,"byte_end":54174,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54179,"byte_end":54205,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54210,"byte_end":54213,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54218,"byte_end":54293,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54298,"byte_end":54354,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54359,"byte_end":54362,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54367,"byte_end":54379,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54384,"byte_end":54387,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54392,"byte_end":54462,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54467,"byte_end":54541,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54546,"byte_end":54620,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54625,"byte_end":54658,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55199,"byte_end":55212,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54743,"byte_end":54786,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54791,"byte_end":54794,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54799,"byte_end":54848,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54853,"byte_end":54923,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":54928,"byte_end":55000,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55005,"byte_end":55076,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55081,"byte_end":55097,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55102,"byte_end":55105,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55110,"byte_end":55122,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55127,"byte_end":55130,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55135,"byte_end":55191,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":299},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58503,"byte_end":58513,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":306}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":56640,"byte_end":56672,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":56673,"byte_end":56676,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":56677,"byte_end":56759,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":56760,"byte_end":56835,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":56836,"byte_end":56903,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":56904,"byte_end":56907,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":56908,"byte_end":56988,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":56989,"byte_end":57007,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57008,"byte_end":57011,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57012,"byte_end":57083,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57084,"byte_end":57098,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57099,"byte_end":57102,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57103,"byte_end":57171,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57172,"byte_end":57252,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57253,"byte_end":57332,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57333,"byte_end":57406,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57407,"byte_end":57480,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57481,"byte_end":57502,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57503,"byte_end":57506,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57507,"byte_end":57591,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57592,"byte_end":57616,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57617,"byte_end":57620,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57621,"byte_end":57703,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57704,"byte_end":57787,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57788,"byte_end":57791,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57792,"byte_end":57876,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57877,"byte_end":57961,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":57962,"byte_end":58040,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58041,"byte_end":58120,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58121,"byte_end":58182,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58183,"byte_end":58186,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58187,"byte_end":58253,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58254,"byte_end":58276,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58277,"byte_end":58280,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58281,"byte_end":58319,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58320,"byte_end":58364,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58365,"byte_end":58404,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58405,"byte_end":58444,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58445,"byte_end":58492,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58897,"byte_end":58907,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58520,"byte_end":58574,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58579,"byte_end":58582,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58587,"byte_end":58648,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58653,"byte_end":58656,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58661,"byte_end":58723,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58728,"byte_end":58786,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58791,"byte_end":58858,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":58863,"byte_end":58889,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59448,"byte_end":59458,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59035,"byte_end":59106,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59111,"byte_end":59133,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59138,"byte_end":59141,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59146,"byte_end":59192,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59197,"byte_end":59200,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59205,"byte_end":59269,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59274,"byte_end":59332,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59337,"byte_end":59405,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59410,"byte_end":59440,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62744,"byte_end":62757,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59540,"byte_end":59614,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59619,"byte_end":59667,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59672,"byte_end":59675,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59680,"byte_end":59751,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59756,"byte_end":59832,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59837,"byte_end":59913,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59918,"byte_end":59993,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":59998,"byte_end":60069,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60074,"byte_end":60150,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60155,"byte_end":60183,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60188,"byte_end":60191,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60196,"byte_end":60257,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60262,"byte_end":60333,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60338,"byte_end":60410,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60415,"byte_end":60490,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60495,"byte_end":60568,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60573,"byte_end":60648,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60653,"byte_end":60725,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60730,"byte_end":60741,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60746,"byte_end":60749,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60754,"byte_end":60828,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60833,"byte_end":60905,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60910,"byte_end":60979,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":60984,"byte_end":61052,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61057,"byte_end":61118,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61123,"byte_end":61126,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61131,"byte_end":61149,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61154,"byte_end":61157,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61162,"byte_end":61232,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61237,"byte_end":61240,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61245,"byte_end":61308,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61313,"byte_end":61382,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61387,"byte_end":61462,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61467,"byte_end":61540,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61545,"byte_end":61596,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61601,"byte_end":61604,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61609,"byte_end":61679,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61684,"byte_end":61759,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61764,"byte_end":61836,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61841,"byte_end":61911,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61916,"byte_end":61991,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":61996,"byte_end":61999,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62004,"byte_end":62085,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62090,"byte_end":62165,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62170,"byte_end":62237,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62242,"byte_end":62245,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62250,"byte_end":62262,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62267,"byte_end":62270,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62275,"byte_end":62346,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62351,"byte_end":62417,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62422,"byte_end":62496,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62501,"byte_end":62565,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62570,"byte_end":62609,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62614,"byte_end":62617,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62622,"byte_end":62634,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62639,"byte_end":62642,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62647,"byte_end":62722,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62727,"byte_end":62736,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63870,"byte_end":63889,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62839,"byte_end":62910,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62915,"byte_end":62918,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62923,"byte_end":62990,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":62995,"byte_end":63065,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63070,"byte_end":63140,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63145,"byte_end":63148,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63153,"byte_end":63235,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63240,"byte_end":63292,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63297,"byte_end":63300,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63305,"byte_end":63366,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63371,"byte_end":63374,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63379,"byte_end":63441,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63446,"byte_end":63504,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63509,"byte_end":63576,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63581,"byte_end":63607,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63612,"byte_end":63615,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63620,"byte_end":63630,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63635,"byte_end":63638,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63643,"byte_end":63715,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63720,"byte_end":63790,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63795,"byte_end":63807,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63812,"byte_end":63815,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":63820,"byte_end":63862,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64657,"byte_end":64674,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64187,"byte_end":64257,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64262,"byte_end":64281,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64286,"byte_end":64289,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64294,"byte_end":64363,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64368,"byte_end":64443,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64448,"byte_end":64516,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64521,"byte_end":64524,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64529,"byte_end":64576,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64581,"byte_end":64584,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":64589,"byte_end":64649,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":363},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71914,"byte_end":71921,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":70966,"byte_end":71046,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71047,"byte_end":71050,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71051,"byte_end":71125,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71126,"byte_end":71201,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71202,"byte_end":71280,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71281,"byte_end":71357,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71358,"byte_end":71435,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71436,"byte_end":71439,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71440,"byte_end":71504,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71505,"byte_end":71508,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71509,"byte_end":71524,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71525,"byte_end":71566,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71567,"byte_end":71608,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71609,"byte_end":71650,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71651,"byte_end":71658,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71659,"byte_end":71662,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71663,"byte_end":71741,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71742,"byte_end":71820,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":71821,"byte_end":71902,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72123,"byte_end":72126,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72037,"byte_end":72097,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72102,"byte_end":72111,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72572,"byte_end":72578,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72391,"byte_end":72453,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72458,"byte_end":72461,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72466,"byte_end":72546,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72551,"byte_end":72560,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72806,"byte_end":72814,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72735,"byte_end":72780,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72785,"byte_end":72794,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72960,"byte_end":72966,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72867,"byte_end":72934,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72939,"byte_end":72948,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":73420,"byte_end":73430,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":73326,"byte_end":73394,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":73399,"byte_end":73408,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":73908,"byte_end":73912,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":73810,"byte_end":73882,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":73887,"byte_end":73896,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74318,"byte_end":74329,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74170,"byte_end":74242,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74247,"byte_end":74250,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74255,"byte_end":74292,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74297,"byte_end":74306,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74841,"byte_end":74856,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74692,"byte_end":74765,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74770,"byte_end":74773,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74778,"byte_end":74815,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":74820,"byte_end":74829,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75617,"byte_end":75629,"line_start":124,"line_end":124,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75239,"byte_end":75345,"line_start":116,"line_end":116,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75350,"byte_end":75366,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75371,"byte_end":75374,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75379,"byte_end":75391,"line_start":119,"line_end":119,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75396,"byte_end":75399,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75404,"byte_end":75500,"line_start":121,"line_end":121,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75505,"byte_end":75584,"line_start":122,"line_end":122,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75589,"byte_end":75598,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75991,"byte_end":76010,"line_start":133,"line_end":133,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75717,"byte_end":75818,"line_start":128,"line_end":128,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75823,"byte_end":75826,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75831,"byte_end":75942,"line_start":130,"line_end":130,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75947,"byte_end":75965,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":75970,"byte_end":75979,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":76348,"byte_end":76370,"line_start":144,"line_end":144,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":76102,"byte_end":76207,"line_start":137,"line_end":137,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":76212,"byte_end":76234,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":76239,"byte_end":76242,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":76247,"byte_end":76259,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":76264,"byte_end":76267,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":76272,"byte_end":76322,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":76327,"byte_end":76336,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77215,"byte_end":77224,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77103,"byte_end":77189,"line_start":165,"line_end":165,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77194,"byte_end":77203,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77491,"byte_end":77496,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77292,"byte_end":77352,"line_start":171,"line_end":171,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77357,"byte_end":77360,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77365,"byte_end":77465,"line_start":173,"line_end":173,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77470,"byte_end":77479,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77825,"byte_end":77832,"line_start":187,"line_end":187,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77546,"byte_end":77603,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77608,"byte_end":77611,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77616,"byte_end":77667,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77672,"byte_end":77675,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77680,"byte_end":77692,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77697,"byte_end":77700,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77705,"byte_end":77799,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77804,"byte_end":77813,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78442,"byte_end":78452,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":77969,"byte_end":78022,"line_start":192,"line_end":192,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78027,"byte_end":78030,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78035,"byte_end":78086,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78091,"byte_end":78094,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78099,"byte_end":78204,"line_start":196,"line_end":196,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78209,"byte_end":78285,"line_start":197,"line_end":197,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78290,"byte_end":78293,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78298,"byte_end":78310,"line_start":199,"line_end":199,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78315,"byte_end":78318,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78323,"byte_end":78416,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78421,"byte_end":78430,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79056,"byte_end":79067,"line_start":220,"line_end":220,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78636,"byte_end":78712,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78717,"byte_end":78720,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78725,"byte_end":78834,"line_start":213,"line_end":213,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78839,"byte_end":78890,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78895,"byte_end":78898,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78903,"byte_end":78915,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78920,"byte_end":78923,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":78928,"byte_end":79023,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79028,"byte_end":79037,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79447,"byte_end":79456,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79219,"byte_end":79325,"line_start":227,"line_end":227,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79330,"byte_end":79333,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79338,"byte_end":79350,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79355,"byte_end":79358,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79363,"byte_end":79421,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":79426,"byte_end":79435,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908287,"byte_end":8908295,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908043,"byte_end":8908071,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908072,"byte_end":8908075,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908076,"byte_end":8908155,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908156,"byte_end":8908190,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908447,"byte_end":8908455,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":1085},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908333,"byte_end":8908369,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908374,"byte_end":8908377,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908382,"byte_end":8908432,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908622,"byte_end":8908630,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":1085},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908508,"byte_end":8908543,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908548,"byte_end":8908551,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908556,"byte_end":8908607,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909066,"byte_end":8909077,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908683,"byte_end":8908740,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908745,"byte_end":8908748,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908753,"byte_end":8908767,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908772,"byte_end":8908775,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908780,"byte_end":8908787,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908792,"byte_end":8908820,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908825,"byte_end":8908828,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908833,"byte_end":8908879,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908884,"byte_end":8908931,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908936,"byte_end":8908939,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908944,"byte_end":8908999,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909004,"byte_end":8909036,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909041,"byte_end":8909048,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909517,"byte_end":8909528,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909134,"byte_end":8909191,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909196,"byte_end":8909199,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909204,"byte_end":8909218,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909223,"byte_end":8909226,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909231,"byte_end":8909238,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909243,"byte_end":8909271,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909276,"byte_end":8909279,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909284,"byte_end":8909331,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909336,"byte_end":8909382,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909387,"byte_end":8909390,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909395,"byte_end":8909450,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909455,"byte_end":8909487,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909492,"byte_end":8909499,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909946,"byte_end":8909949,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909585,"byte_end":8909623,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909628,"byte_end":8909631,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909636,"byte_end":8909683,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909688,"byte_end":8909691,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909696,"byte_end":8909710,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909715,"byte_end":8909718,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909723,"byte_end":8909730,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909735,"byte_end":8909763,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909768,"byte_end":8909771,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909776,"byte_end":8909846,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909851,"byte_end":8909854,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909859,"byte_end":8909891,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8909896,"byte_end":8909928,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911327,"byte_end":8911332,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911092,"byte_end":8911146,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911147,"byte_end":8911150,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911151,"byte_end":8911222,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911408,"byte_end":8911413,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911359,"byte_end":8911393,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911507,"byte_end":8911515,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911438,"byte_end":8911492,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911616,"byte_end":8911624,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911547,"byte_end":8911601,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911728,"byte_end":8911739,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911656,"byte_end":8911713,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911847,"byte_end":8911859,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911774,"byte_end":8911832,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911974,"byte_end":8911977,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":1114},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911895,"byte_end":8911959,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912834,"byte_end":8912842,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912593,"byte_end":8912637,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912642,"byte_end":8912645,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912650,"byte_end":8912664,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912669,"byte_end":8912672,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912677,"byte_end":8912684,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912689,"byte_end":8912714,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912719,"byte_end":8912722,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912727,"byte_end":8912764,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912769,"byte_end":8912810,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912815,"byte_end":8912822,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913253,"byte_end":8913264,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912899,"byte_end":8912950,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912955,"byte_end":8912958,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912963,"byte_end":8912977,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912982,"byte_end":8912985,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8912990,"byte_end":8912997,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913002,"byte_end":8913027,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913032,"byte_end":8913035,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913040,"byte_end":8913081,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913086,"byte_end":8913129,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913134,"byte_end":8913180,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913185,"byte_end":8913229,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913234,"byte_end":8913241,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913721,"byte_end":8913732,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913356,"byte_end":8913417,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913422,"byte_end":8913425,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913430,"byte_end":8913444,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913449,"byte_end":8913452,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913457,"byte_end":8913464,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913469,"byte_end":8913494,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913499,"byte_end":8913502,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913507,"byte_end":8913548,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913553,"byte_end":8913597,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913602,"byte_end":8913645,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913650,"byte_end":8913697,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913702,"byte_end":8913709,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914153,"byte_end":8914167,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913825,"byte_end":8913889,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913894,"byte_end":8913897,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913902,"byte_end":8913916,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913921,"byte_end":8913924,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913929,"byte_end":8913936,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913941,"byte_end":8913966,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913971,"byte_end":8913974,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8913979,"byte_end":8914023,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914028,"byte_end":8914075,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914080,"byte_end":8914129,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914134,"byte_end":8914141,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914570,"byte_end":8914585,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914237,"byte_end":8914302,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914307,"byte_end":8914310,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914315,"byte_end":8914329,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914334,"byte_end":8914337,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914342,"byte_end":8914349,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914354,"byte_end":8914379,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914384,"byte_end":8914387,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914392,"byte_end":8914437,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914442,"byte_end":8914490,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914495,"byte_end":8914546,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8914551,"byte_end":8914558,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957516,"byte_end":8957523,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"AsyncFd","qualname":"::io::async_fd::AsyncFd","value":"AsyncFd {  }","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1658}],"decl_id":null,"docs":" Associates an IO object backed by a Unix file descriptor with the tokio\n reactor, allowing for readiness to be polled. The file descriptor must be of\n a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,\n `kqueue`, etc), such as a network socket or pipe.","sig":null,"attributes":[{"value":"/ Associates an IO object backed by a Unix file descriptor with the tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952281,"byte_end":8952356,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ reactor, allowing for readiness to be polled. The file descriptor must be of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952357,"byte_end":8952437,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952438,"byte_end":8952518,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ `kqueue`, etc), such as a network socket or pipe.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952519,"byte_end":8952572,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952573,"byte_end":8952576,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Creating an AsyncFd registers the file descriptor with the current tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952577,"byte_end":8952653,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ Reactor, allowing you to directly await the file descriptor being readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952654,"byte_end":8952732,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ or writable. Once registered, the file descriptor remains registered until","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952733,"byte_end":8952811,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the AsyncFd is dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952812,"byte_end":8952839,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952840,"byte_end":8952843,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The AsyncFd takes ownership of an arbitrary object to represent the IO","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952844,"byte_end":8952918,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ object. It is intended that this object will handle closing the file","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952919,"byte_end":8952991,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ descriptor when it is dropped, avoiding resource leaks and ensuring that the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8952992,"byte_end":8953072,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ AsyncFd can clean up the registration before closing the file descriptor.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953073,"byte_end":8953150,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ The [`AsyncFd::into_inner`] function can be used to extract the inner object","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953151,"byte_end":8953231,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ to retake control from the tokio IO reactor.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953232,"byte_end":8953280,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953281,"byte_end":8953284,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The inner object is required to implement [`AsRawFd`]. This file descriptor","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953285,"byte_end":8953364,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ must not change while [`AsyncFd`] owns the inner object. Changing the file","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953365,"byte_end":8953443,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ descriptor results in unspecified behavior in the IO driver, which may","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953444,"byte_end":8953518,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ include breaking notifications for other sockets/etc.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953519,"byte_end":8953576,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953577,"byte_end":8953580,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Polling for readiness is done by calling the async functions [`readable`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953581,"byte_end":8953658,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ and [`writable`]. These functions complete when the associated readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953659,"byte_end":8953735,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ condition is observed. Any number of tasks can query the same `AsyncFd` in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953736,"byte_end":8953814,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ parallel, on the same or different conditions.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953815,"byte_end":8953865,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953866,"byte_end":8953869,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ On some platforms, the readiness detecting mechanism relies on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953870,"byte_end":8953936,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/ edge-triggered notifications. This means that the OS will only notify Tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8953937,"byte_end":8954016,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ when the file descriptor transitions from not-ready to ready. Tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954017,"byte_end":8954088,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ internally tracks when it has received a ready notification, and when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954089,"byte_end":8954162,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ readiness checking functions like [`readable`] and [`writable`] are called,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954163,"byte_end":8954242,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ if the readiness flag is set, these async functions will complete","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954243,"byte_end":8954312,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"/ immediately.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954313,"byte_end":8954329,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954330,"byte_end":8954333,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This however does mean that it is critical to ensure that this ready flag is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954334,"byte_end":8954414,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ cleared when (and only when) the file descriptor ceases to be ready. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954415,"byte_end":8954491,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ [`AsyncFdReadyGuard`] returned from readiness checking functions serves this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954492,"byte_end":8954572,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ function; after calling a readiness-checking async function, you must use","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954573,"byte_end":8954650,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ this [`AsyncFdReadyGuard`] to signal to tokio whether the file descriptor is no","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954651,"byte_end":8954734,"line_start":47,"line_end":47,"column_start":1,"column_end":84}},{"value":"/ longer in a ready state.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954735,"byte_end":8954763,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954764,"byte_end":8954767,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Use with to a poll-based API","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954768,"byte_end":8954803,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954804,"byte_end":8954807,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ In some cases it may be desirable to use `AsyncFd` from APIs similar to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954808,"byte_end":8954883,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ [`TcpStream::poll_read_ready`]. The [`AsyncFd::poll_read_ready`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954884,"byte_end":8954956,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/ [`AsyncFd::poll_write_ready`] functions are provided for this purpose.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8954957,"byte_end":8955031,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ Because these functions don't create a future to hold their state, they have","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955032,"byte_end":8955112,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the limitation that only one task can wait on each direction (read or write)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955113,"byte_end":8955193,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ at a time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955194,"byte_end":8955208,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955209,"byte_end":8955212,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955213,"byte_end":8955227,"line_start":59,"line_end":59,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955228,"byte_end":8955231,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This example shows how to turn [`std::net::TcpStream`] asynchronous using","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955232,"byte_end":8955309,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"/ `AsyncFd`.  It implements `read` as an async fn, and `AsyncWrite` as a trait","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955310,"byte_end":8955390,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ to show how to implement both approaches.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955391,"byte_end":8955436,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955437,"byte_end":8955440,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955441,"byte_end":8955454,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955455,"byte_end":8955478,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955479,"byte_end":8955516,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955517,"byte_end":8955545,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955546,"byte_end":8955568,"line_start":69,"line_end":69,"column_start":1,"column_end":23}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955569,"byte_end":8955604,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"/ use tokio::io::AsyncWrite;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955605,"byte_end":8955635,"line_start":71,"line_end":71,"column_start":1,"column_end":31}},{"value":"/ use tokio::io::unix::AsyncFd;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955636,"byte_end":8955669,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955670,"byte_end":8955673,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ pub struct AsyncTcpStream {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955674,"byte_end":8955705,"line_start":74,"line_end":74,"column_start":1,"column_end":32}},{"value":"/     inner: AsyncFd<TcpStream>,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955706,"byte_end":8955740,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955741,"byte_end":8955746,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955747,"byte_end":8955750,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ impl AsyncTcpStream {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955751,"byte_end":8955776,"line_start":78,"line_end":78,"column_start":1,"column_end":26}},{"value":"/     pub fn new(tcp: TcpStream) -> io::Result<Self> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955777,"byte_end":8955833,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/         Ok(Self {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955834,"byte_end":8955855,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/             inner: AsyncFd::new(tcp)?,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955856,"byte_end":8955898,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/         })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955899,"byte_end":8955913,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955914,"byte_end":8955923,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955924,"byte_end":8955927,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     pub async fn read(&self, out: &mut [u8]) -> io::Result<usize> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8955928,"byte_end":8955999,"line_start":85,"line_end":85,"column_start":1,"column_end":72}},{"value":"/         loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956000,"byte_end":8956018,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/             let mut guard = self.inner.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956019,"byte_end":8956080,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956081,"byte_end":8956084,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().read(out)) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956085,"byte_end":8956156,"line_start":89,"line_end":89,"column_start":1,"column_end":72}},{"value":"/                 Ok(result) => return result,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956157,"byte_end":8956205,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956206,"byte_end":8956256,"line_start":91,"line_end":91,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956257,"byte_end":8956274,"line_start":92,"line_end":92,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956275,"byte_end":8956288,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956289,"byte_end":8956298,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956299,"byte_end":8956304,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956305,"byte_end":8956308,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ impl AsyncWrite for AsyncTcpStream {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956309,"byte_end":8956349,"line_start":97,"line_end":97,"column_start":1,"column_end":41}},{"value":"/     fn poll_write(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956350,"byte_end":8956372,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956373,"byte_end":8956406,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956407,"byte_end":8956440,"line_start":100,"line_end":100,"column_start":1,"column_end":34}},{"value":"/         buf: &[u8]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956441,"byte_end":8956463,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/     ) -> Poll<io::Result<usize>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956464,"byte_end":8956502,"line_start":102,"line_end":102,"column_start":1,"column_end":39}},{"value":"/         loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956503,"byte_end":8956521,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/             let mut guard = ready!(self.inner.poll_write_ready(cx))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956522,"byte_end":8956595,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956596,"byte_end":8956599,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().write(buf)) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956600,"byte_end":8956672,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/                 Ok(result) => return Poll::Ready(result),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956673,"byte_end":8956734,"line_start":107,"line_end":107,"column_start":1,"column_end":62}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956735,"byte_end":8956785,"line_start":108,"line_end":108,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956786,"byte_end":8956803,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956804,"byte_end":8956817,"line_start":110,"line_end":110,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956818,"byte_end":8956827,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956828,"byte_end":8956831,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     fn poll_flush(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956832,"byte_end":8956854,"line_start":113,"line_end":113,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956855,"byte_end":8956888,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956889,"byte_end":8956922,"line_start":115,"line_end":115,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956923,"byte_end":8956958,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/         // tcp flush is a no-op","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956959,"byte_end":8956994,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8956995,"byte_end":8957026,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957027,"byte_end":8957036,"line_start":119,"line_end":119,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957037,"byte_end":8957040,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/     fn poll_shutdown(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957041,"byte_end":8957066,"line_start":121,"line_end":121,"column_start":1,"column_end":26}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957067,"byte_end":8957100,"line_start":122,"line_end":122,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957101,"byte_end":8957134,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957135,"byte_end":8957170,"line_start":124,"line_end":124,"column_start":1,"column_end":36}},{"value":"/         self.inner.get_ref().shutdown(std::net::Shutdown::Write)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957171,"byte_end":8957241,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957242,"byte_end":8957273,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957274,"byte_end":8957283,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957284,"byte_end":8957289,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957290,"byte_end":8957297,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957298,"byte_end":8957301,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957302,"byte_end":8957341,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957342,"byte_end":8957381,"line_start":132,"line_end":132,"column_start":1,"column_end":40}},{"value":"/ [`AsyncFdReadyGuard`]: struct@self::AsyncFdReadyGuard","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957382,"byte_end":8957439,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/ [`TcpStream::poll_read_ready`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957440,"byte_end":8957504,"line_start":134,"line_end":134,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958031,"byte_end":8958048,"line_start":146,"line_end":146,"column_start":12,"column_end":29},"name":"AsyncFdReadyGuard","qualname":"::io::async_fd::AsyncFdReadyGuard","value":"AsyncFdReadyGuard {  }","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957595,"byte_end":8957673,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957674,"byte_end":8957754,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957755,"byte_end":8957827,"line_start":142,"line_end":142,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957828,"byte_end":8957831,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This type exposes an immutable reference to the underlying IO object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957832,"byte_end":8957905,"line_start":144,"line_end":144,"column_start":1,"column_end":74}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8957906,"byte_end":8958019,"line_start":145,"line_end":145,"column_start":1,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958564,"byte_end":8958584,"line_start":157,"line_end":157,"column_start":12,"column_end":32},"name":"AsyncFdReadyMutGuard","qualname":"::io::async_fd::AsyncFdReadyMutGuard","value":"AsyncFdReadyMutGuard {  }","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958131,"byte_end":8958209,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958210,"byte_end":8958290,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958291,"byte_end":8958363,"line_start":153,"line_end":153,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958364,"byte_end":8958367,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ This type exposes a mutable reference to the underlying IO object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958368,"byte_end":8958438,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958439,"byte_end":8958552,"line_start":156,"line_end":156,"column_start":1,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8959058,"byte_end":8959061,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"new","qualname":"<AsyncFd<T>>::new","value":"pub fn new(T) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates an AsyncFd backed by (and taking ownership of) an object\n implementing [`AsRawFd`]. The backing file descriptor is cached at the\n time of creation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958781,"byte_end":8958790,"line_start":165,"line_end":165,"column_start":5,"column_end":14}},{"value":"/ Creates an AsyncFd backed by (and taking ownership of) an object","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958795,"byte_end":8958863,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ implementing [`AsRawFd`]. The backing file descriptor is cached at the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958868,"byte_end":8958942,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ time of creation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958947,"byte_end":8958968,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958973,"byte_end":8958976,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This method must be called in the context of a tokio runtime.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958981,"byte_end":8959046,"line_start":170,"line_end":170,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8959386,"byte_end":8959399,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"name":"with_interest","qualname":"<AsyncFd<T>>::with_interest","value":"pub fn with_interest(T, Interest) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates new instance as `new` with additional ability to customize interest,\n allowing to specify whether file descriptor will be polled for read, write or both.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8959188,"byte_end":8959197,"line_start":178,"line_end":178,"column_start":5,"column_end":14}},{"value":"/ Creates new instance as `new` with additional ability to customize interest,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8959202,"byte_end":8959282,"line_start":179,"line_end":179,"column_start":5,"column_end":85}},{"value":"/ allowing to specify whether file descriptor will be polled for read, write or both.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8959287,"byte_end":8959374,"line_start":180,"line_end":180,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960077,"byte_end":8960084,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AsyncFd<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8959979,"byte_end":8960051,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960056,"byte_end":8960065,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960247,"byte_end":8960254,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AsyncFd<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960148,"byte_end":8960221,"line_start":210,"line_end":210,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960226,"byte_end":8960235,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960679,"byte_end":8960689,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AsyncFd<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Deregisters this file descriptor and returns ownership of the backing\n object.\n","sig":null,"attributes":[{"value":"/ Deregisters this file descriptor and returns ownership of the backing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960578,"byte_end":8960651,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960656,"byte_end":8960667,"line_start":227,"line_end":227,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962216,"byte_end":8962231,"line_start":259,"line_end":259,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<AsyncFd<T>>::poll_read_ready","value":"pub fn poll_read_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960753,"byte_end":8960782,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960787,"byte_end":8960790,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960795,"byte_end":8960869,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960874,"byte_end":8960953,"line_start":235,"line_end":235,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8960958,"byte_end":8961036,"line_start":236,"line_end":236,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961041,"byte_end":8961044,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961049,"byte_end":8961106,"line_start":238,"line_end":238,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961111,"byte_end":8961189,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961194,"byte_end":8961258,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961263,"byte_end":8961325,"line_start":241,"line_end":241,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961330,"byte_end":8961333,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961338,"byte_end":8961411,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961416,"byte_end":8961491,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961496,"byte_end":8961564,"line_start":245,"line_end":245,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961569,"byte_end":8961572,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961577,"byte_end":8961645,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961650,"byte_end":8961718,"line_start":248,"line_end":248,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961723,"byte_end":8961792,"line_start":249,"line_end":249,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961797,"byte_end":8961823,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961828,"byte_end":8961831,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961836,"byte_end":8961889,"line_start":252,"line_end":252,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961894,"byte_end":8961955,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8961960,"byte_end":8962015,"line_start":254,"line_end":254,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962020,"byte_end":8962059,"line_start":255,"line_end":255,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962064,"byte_end":8962106,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962111,"byte_end":8962149,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962154,"byte_end":8962204,"line_start":258,"line_end":258,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963898,"byte_end":8963917,"line_start":297,"line_end":297,"column_start":12,"column_end":31},"name":"poll_read_ready_mut","qualname":"<AsyncFd<T>>::poll_read_ready_mut","value":"pub fn poll_read_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962537,"byte_end":8962566,"line_start":272,"line_end":272,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962571,"byte_end":8962574,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962579,"byte_end":8962653,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962658,"byte_end":8962737,"line_start":275,"line_end":275,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962742,"byte_end":8962820,"line_start":276,"line_end":276,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962825,"byte_end":8962828,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962833,"byte_end":8962890,"line_start":278,"line_end":278,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962895,"byte_end":8962973,"line_start":279,"line_end":279,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8962978,"byte_end":8963042,"line_start":280,"line_end":280,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963047,"byte_end":8963109,"line_start":281,"line_end":281,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963114,"byte_end":8963117,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963122,"byte_end":8963195,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963200,"byte_end":8963275,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963280,"byte_end":8963348,"line_start":285,"line_end":285,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963353,"byte_end":8963356,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963361,"byte_end":8963436,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963441,"byte_end":8963505,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963510,"byte_end":8963513,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963518,"byte_end":8963571,"line_start":290,"line_end":290,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963576,"byte_end":8963637,"line_start":291,"line_end":291,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963642,"byte_end":8963697,"line_start":292,"line_end":292,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963702,"byte_end":8963741,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963746,"byte_end":8963788,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963793,"byte_end":8963831,"line_start":295,"line_end":295,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8963836,"byte_end":8963886,"line_start":296,"line_end":296,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965700,"byte_end":8965716,"line_start":337,"line_end":337,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<AsyncFd<T>>::poll_write_ready","value":"pub fn poll_write_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964233,"byte_end":8964263,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964268,"byte_end":8964271,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964276,"byte_end":8964350,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964355,"byte_end":8964434,"line_start":313,"line_end":313,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964439,"byte_end":8964517,"line_start":314,"line_end":314,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964522,"byte_end":8964525,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964530,"byte_end":8964588,"line_start":316,"line_end":316,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964593,"byte_end":8964672,"line_start":317,"line_end":317,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964677,"byte_end":8964741,"line_start":318,"line_end":318,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964746,"byte_end":8964807,"line_start":319,"line_end":319,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964812,"byte_end":8964815,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964820,"byte_end":8964893,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964898,"byte_end":8964973,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8964978,"byte_end":8965046,"line_start":323,"line_end":323,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965051,"byte_end":8965054,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965059,"byte_end":8965127,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965132,"byte_end":8965200,"line_start":326,"line_end":326,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965205,"byte_end":8965274,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965279,"byte_end":8965305,"line_start":328,"line_end":328,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965310,"byte_end":8965313,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965318,"byte_end":8965371,"line_start":330,"line_end":330,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965376,"byte_end":8965431,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965436,"byte_end":8965499,"line_start":332,"line_end":332,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965504,"byte_end":8965543,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965548,"byte_end":8965590,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965595,"byte_end":8965633,"line_start":335,"line_end":335,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8965638,"byte_end":8965688,"line_start":336,"line_end":336,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8967388,"byte_end":8967408,"line_start":375,"line_end":375,"column_start":12,"column_end":32},"name":"poll_write_ready_mut","qualname":"<AsyncFd<T>>::poll_write_ready_mut","value":"pub fn poll_write_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966023,"byte_end":8966053,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966058,"byte_end":8966061,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966066,"byte_end":8966140,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966145,"byte_end":8966224,"line_start":353,"line_end":353,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966229,"byte_end":8966307,"line_start":354,"line_end":354,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966312,"byte_end":8966315,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966320,"byte_end":8966378,"line_start":356,"line_end":356,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966383,"byte_end":8966462,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966467,"byte_end":8966531,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966536,"byte_end":8966597,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966602,"byte_end":8966605,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966610,"byte_end":8966683,"line_start":361,"line_end":361,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966688,"byte_end":8966763,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966768,"byte_end":8966836,"line_start":363,"line_end":363,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966841,"byte_end":8966844,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966849,"byte_end":8966924,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966929,"byte_end":8966993,"line_start":366,"line_end":366,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8966998,"byte_end":8967001,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8967006,"byte_end":8967059,"line_start":368,"line_end":368,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8967064,"byte_end":8967119,"line_start":369,"line_end":369,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8967124,"byte_end":8967187,"line_start":370,"line_end":370,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8967192,"byte_end":8967231,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8967236,"byte_end":8967278,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8967283,"byte_end":8967321,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8967326,"byte_end":8967376,"line_start":374,"line_end":374,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968818,"byte_end":8968826,"line_start":418,"line_end":418,"column_start":18,"column_end":26},"name":"readable","qualname":"<AsyncFd<T>>::readable","value":"pub async fn readable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968298,"byte_end":8968363,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968368,"byte_end":8968439,"line_start":410,"line_end":410,"column_start":5,"column_end":76}},{"value":"/ polling.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968444,"byte_end":8968456,"line_start":411,"line_end":411,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968461,"byte_end":8968464,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968469,"byte_end":8968537,"line_start":413,"line_end":413,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968542,"byte_end":8968610,"line_start":414,"line_end":414,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968615,"byte_end":8968684,"line_start":415,"line_end":415,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968689,"byte_end":8968715,"line_start":416,"line_end":416,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968720,"byte_end":8968756,"line_start":417,"line_end":417,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969364,"byte_end":8969376,"line_start":429,"line_end":429,"column_start":18,"column_end":30},"name":"readable_mut","qualname":"<AsyncFd<T>>::readable_mut","value":"pub async fn readable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8968943,"byte_end":8969008,"line_start":422,"line_end":422,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969013,"byte_end":8969087,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ polling.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969092,"byte_end":8969104,"line_start":424,"line_end":424,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969109,"byte_end":8969112,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969117,"byte_end":8969192,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969197,"byte_end":8969261,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969266,"byte_end":8969302,"line_start":428,"line_end":428,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970025,"byte_end":8970033,"line_start":442,"line_end":442,"column_start":18,"column_end":26},"name":"writable","qualname":"<AsyncFd<T>>::writable","value":"pub async fn writable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969504,"byte_end":8969569,"line_start":433,"line_end":433,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969574,"byte_end":8969646,"line_start":434,"line_end":434,"column_start":5,"column_end":77}},{"value":"/ polling.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969651,"byte_end":8969663,"line_start":435,"line_end":435,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969668,"byte_end":8969671,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969676,"byte_end":8969744,"line_start":437,"line_end":437,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969749,"byte_end":8969817,"line_start":438,"line_end":438,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969822,"byte_end":8969891,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969896,"byte_end":8969922,"line_start":440,"line_end":440,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8969927,"byte_end":8969963,"line_start":441,"line_end":441,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970572,"byte_end":8970584,"line_start":453,"line_end":453,"column_start":18,"column_end":30},"name":"writable_mut","qualname":"<AsyncFd<T>>::writable_mut","value":"pub async fn writable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970150,"byte_end":8970215,"line_start":446,"line_end":446,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970220,"byte_end":8970295,"line_start":447,"line_end":447,"column_start":5,"column_end":80}},{"value":"/ polling.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970300,"byte_end":8970312,"line_start":448,"line_end":448,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970317,"byte_end":8970320,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970325,"byte_end":8970400,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970405,"byte_end":8970469,"line_start":451,"line_end":451,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970474,"byte_end":8970510,"line_start":452,"line_end":452,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971814,"byte_end":8971825,"line_start":489,"line_end":489,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971260,"byte_end":8971331,"line_start":479,"line_end":479,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971336,"byte_end":8971408,"line_start":480,"line_end":480,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971413,"byte_end":8971472,"line_start":481,"line_end":481,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971477,"byte_end":8971480,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971485,"byte_end":8971553,"line_start":483,"line_end":483,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971558,"byte_end":8971634,"line_start":484,"line_end":484,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971639,"byte_end":8971712,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971717,"byte_end":8971754,"line_start":486,"line_end":486,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971759,"byte_end":8971762,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971767,"byte_end":8971802,"line_start":488,"line_end":488,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972226,"byte_end":8972238,"line_start":500,"line_end":500,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971972,"byte_end":8972045,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972050,"byte_end":8972074,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972079,"byte_end":8972082,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972087,"byte_end":8972160,"line_start":498,"line_end":498,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972165,"byte_end":8972214,"line_start":499,"line_end":499,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973189,"byte_end":8973195,"line_start":520,"line_end":520,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>: FnOnce(&AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972280,"byte_end":8972319,"line_start":504,"line_end":504,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972324,"byte_end":8972327,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972332,"byte_end":8972405,"line_start":506,"line_end":506,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972410,"byte_end":8972474,"line_start":507,"line_end":507,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972479,"byte_end":8972549,"line_start":508,"line_end":508,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972554,"byte_end":8972592,"line_start":509,"line_end":509,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972597,"byte_end":8972600,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972605,"byte_end":8972681,"line_start":511,"line_end":511,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972686,"byte_end":8972756,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972761,"byte_end":8972831,"line_start":513,"line_end":513,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972836,"byte_end":8972905,"line_start":514,"line_end":514,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972910,"byte_end":8972985,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8972990,"byte_end":8973073,"line_start":516,"line_end":516,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973078,"byte_end":8973114,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973119,"byte_end":8973122,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973127,"byte_end":8973177,"line_start":519,"line_end":519,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974301,"byte_end":8974312,"line_start":550,"line_end":550,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyMutGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973747,"byte_end":8973818,"line_start":540,"line_end":540,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973823,"byte_end":8973895,"line_start":541,"line_end":541,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973900,"byte_end":8973959,"line_start":542,"line_end":542,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973964,"byte_end":8973967,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973972,"byte_end":8974040,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974045,"byte_end":8974121,"line_start":545,"line_end":545,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974126,"byte_end":8974199,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974204,"byte_end":8974241,"line_start":547,"line_end":547,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974246,"byte_end":8974249,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974254,"byte_end":8974289,"line_start":549,"line_end":549,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974713,"byte_end":8974725,"line_start":561,"line_end":561,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyMutGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974459,"byte_end":8974532,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974537,"byte_end":8974561,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974566,"byte_end":8974569,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974574,"byte_end":8974647,"line_start":559,"line_end":559,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974652,"byte_end":8974701,"line_start":560,"line_end":560,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975676,"byte_end":8975682,"line_start":581,"line_end":581,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyMutGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>: FnOnce(&mut AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974767,"byte_end":8974806,"line_start":565,"line_end":565,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974811,"byte_end":8974814,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974819,"byte_end":8974892,"line_start":567,"line_end":567,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974897,"byte_end":8974961,"line_start":568,"line_end":568,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8974966,"byte_end":8975036,"line_start":569,"line_end":569,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975041,"byte_end":8975079,"line_start":570,"line_end":570,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975084,"byte_end":8975087,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975092,"byte_end":8975168,"line_start":572,"line_end":572,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975173,"byte_end":8975243,"line_start":573,"line_end":573,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975248,"byte_end":8975318,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975323,"byte_end":8975392,"line_start":575,"line_end":575,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975397,"byte_end":8975472,"line_start":576,"line_end":576,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975477,"byte_end":8975560,"line_start":577,"line_end":577,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975565,"byte_end":8975601,"line_start":578,"line_end":578,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975606,"byte_end":8975609,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8975614,"byte_end":8975664,"line_start":580,"line_end":580,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976992,"byte_end":8977002,"line_start":623,"line_end":623,"column_start":12,"column_end":22},"name":"TryIoError","qualname":"::io::async_fd::TryIoError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned by [`try_io`].","sig":null,"attributes":[{"value":"/ The error type returned by [`try_io`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976734,"byte_end":8976776,"line_start":616,"line_end":616,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976777,"byte_end":8976780,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ This error indicates that the IO resource returned a [`WouldBlock`] error.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976781,"byte_end":8976859,"line_start":618,"line_end":618,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976860,"byte_end":8976863,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976864,"byte_end":8976914,"line_start":620,"line_end":620,"column_start":1,"column_end":51}},{"value":"/ [`try_io`]: method@AsyncFdReadyGuard::try_io","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976915,"byte_end":8976963,"line_start":621,"line_end":621,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","byte_start":43677,"byte_end":43681,"line_start":223,"line_end":223,"column_start":13,"column_end":17},"name":"unix","qualname":"::io::unix","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1750},{"krate":0,"index":1753}],"decl_id":null,"docs":" Asynchronous IO structures specific to Unix-like operating systems.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21623,"byte_end":21657,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8977605,"byte_end":8977613,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1960}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8977742,"byte_end":8977751,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1963}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978065,"byte_end":8978070,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978696,"byte_end":8978706,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978593,"byte_end":8978668,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978673,"byte_end":8978684,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979113,"byte_end":8979120,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978789,"byte_end":8978838,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978843,"byte_end":8978846,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978851,"byte_end":8978863,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978868,"byte_end":8978871,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978876,"byte_end":8978950,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978955,"byte_end":8979005,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979010,"byte_end":8979074,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979079,"byte_end":8979101,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979621,"byte_end":8979631,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979519,"byte_end":8979593,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979598,"byte_end":8979609,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":12727},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/seek.rs","byte_start":8982437,"byte_end":8982441,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":12730},{"krate":0,"index":12731},{"krate":0,"index":12732}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3422},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_buf_read_ext.rs","byte_start":8985665,"byte_end":8985680,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3428}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_buf_read_ext.rs","byte_start":8988390,"byte_end":8988400,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_buf_read_ext.rs","byte_start":8991291,"byte_end":8991300,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_buf_read_ext.rs","byte_start":8992700,"byte_end":8992705,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_buf_read_ext.rs","byte_start":8994545,"byte_end":8994550,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":8996623,"byte_end":8996635,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3438},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":3457},{"krate":0,"index":3459},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3465},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3471},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3444}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":8997755,"byte_end":8997760,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9000589,"byte_end":9000593,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9002896,"byte_end":9002904,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9004801,"byte_end":9004811,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9006248,"byte_end":9006255,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3447},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9007544,"byte_end":9007551,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9008882,"byte_end":9008890,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9010230,"byte_end":9010238,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3453},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9011519,"byte_end":9011527,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9012822,"byte_end":9012830,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3457},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9014193,"byte_end":9014201,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9015494,"byte_end":9015502,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9016962,"byte_end":9016971,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9018365,"byte_end":9018374,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9019721,"byte_end":9019732,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9021093,"byte_end":9021104,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9022405,"byte_end":9022416,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9023728,"byte_end":9023739,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9025120,"byte_end":9025131,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9026425,"byte_end":9026436,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3477},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9027914,"byte_end":9027926,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9029320,"byte_end":9029332,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9030991,"byte_end":9031002,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9032557,"byte_end":9032571,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9033863,"byte_end":9033867,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3481},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_seek_ext.rs","byte_start":9034955,"byte_end":9034967,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3482}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3482},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_seek_ext.rs","byte_start":9035963,"byte_end":9035967,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3481},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3484},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9038091,"byte_end":9038104,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3490},{"krate":0,"index":3494},{"krate":0,"index":3496},{"krate":0,"index":3498},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3510},{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3518},{"krate":0,"index":3520},{"krate":0,"index":3522},{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3492},{"krate":0,"index":3493}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9039946,"byte_end":9039951,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9042758,"byte_end":9042767,"line_start":185,"line_end":185,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9044109,"byte_end":9044118,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9045518,"byte_end":9045526,"line_start":269,"line_end":269,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3496},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9046787,"byte_end":9046795,"line_start":306,"line_end":306,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9048110,"byte_end":9048119,"line_start":344,"line_end":344,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9049432,"byte_end":9049441,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9050781,"byte_end":9050790,"line_start":420,"line_end":420,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9052125,"byte_end":9052134,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9053511,"byte_end":9053520,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9054907,"byte_end":9054916,"line_start":534,"line_end":534,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9056371,"byte_end":9056381,"line_start":574,"line_end":574,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9057771,"byte_end":9057781,"line_start":614,"line_end":614,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9059113,"byte_end":9059125,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9060452,"byte_end":9060464,"line_start":691,"line_end":691,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9061818,"byte_end":9061830,"line_start":729,"line_end":729,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9063179,"byte_end":9063191,"line_start":767,"line_end":767,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9064582,"byte_end":9064594,"line_start":805,"line_end":805,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9065995,"byte_end":9066007,"line_start":843,"line_end":843,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9067474,"byte_end":9067487,"line_start":883,"line_end":883,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9068889,"byte_end":9068902,"line_start":923,"line_end":923,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9069922,"byte_end":9069927,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9071217,"byte_end":9071225,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":3484},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12675},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9072586,"byte_end":9072595,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":12677},{"krate":0,"index":12678},{"krate":0,"index":12679},{"krate":0,"index":12680}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9072931,"byte_end":9072934,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9072789,"byte_end":9072881,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9072886,"byte_end":9072919,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073096,"byte_end":9073109,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073019,"byte_end":9073084,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073463,"byte_end":9073470,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073326,"byte_end":9073372,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073377,"byte_end":9073380,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073385,"byte_end":9073451,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073662,"byte_end":9073669,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073517,"byte_end":9073571,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073576,"byte_end":9073579,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073584,"byte_end":9073650,"line_start":63,"line_end":63,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073880,"byte_end":9073891,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073728,"byte_end":9073789,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073794,"byte_end":9073797,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073802,"byte_end":9073868,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074122,"byte_end":9074132,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9073971,"byte_end":9074034,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074039,"byte_end":9074042,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074047,"byte_end":9074110,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074336,"byte_end":9074342,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074176,"byte_end":9074232,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074237,"byte_end":9074240,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074245,"byte_end":9074324,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":12644},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078281,"byte_end":9078290,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":12646}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078569,"byte_end":9078572,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078415,"byte_end":9078472,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078477,"byte_end":9078480,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078485,"byte_end":9078557,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078904,"byte_end":9078917,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078704,"byte_end":9078789,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078794,"byte_end":9078807,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078812,"byte_end":9078815,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078820,"byte_end":9078892,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079374,"byte_end":9079381,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079229,"byte_end":9079279,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079284,"byte_end":9079287,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079292,"byte_end":9079362,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079601,"byte_end":9079608,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079448,"byte_end":9079506,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079511,"byte_end":9079514,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079519,"byte_end":9079589,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079843,"byte_end":9079854,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079683,"byte_end":9079748,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079753,"byte_end":9079756,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079761,"byte_end":9079831,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9080118,"byte_end":9080128,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9079963,"byte_end":9080030,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9080035,"byte_end":9080038,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9080043,"byte_end":9080106,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12598},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9083705,"byte_end":9083714,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":12600},{"krate":0,"index":12601},{"krate":0,"index":12602}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9084022,"byte_end":9084025,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9083880,"byte_end":9083972,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9083977,"byte_end":9084010,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9084187,"byte_end":9084200,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9084110,"byte_end":9084175,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085282,"byte_end":9085289,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085224,"byte_end":9085270,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085480,"byte_end":9085487,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085336,"byte_end":9085390,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085395,"byte_end":9085398,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085403,"byte_end":9085468,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085697,"byte_end":9085708,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085546,"byte_end":9085607,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085612,"byte_end":9085615,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085620,"byte_end":9085685,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085939,"byte_end":9085949,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085788,"byte_end":9085851,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085856,"byte_end":9085859,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085864,"byte_end":9085927,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9086061,"byte_end":9086067,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9085993,"byte_end":9086049,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":12549},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9088481,"byte_end":9088486,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":12552},{"krate":0,"index":12553},{"krate":0,"index":12554}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9088927,"byte_end":9088934,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9088853,"byte_end":9088915,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089266,"byte_end":9089273,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089003,"byte_end":9089073,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089078,"byte_end":9089081,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089086,"byte_end":9089159,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089164,"byte_end":9089237,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089242,"byte_end":9089254,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089632,"byte_end":9089643,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089362,"byte_end":9089439,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089444,"byte_end":9089447,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089452,"byte_end":9089525,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089530,"byte_end":9089603,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089608,"byte_end":9089620,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089840,"byte_end":9089850,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089772,"byte_end":9089828,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/copy.rs","byte_start":9093243,"byte_end":9093247,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/copy_buf.rs","byte_start":9097052,"byte_end":9097060,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/empty.rs","byte_start":9098869,"byte_end":9098874,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3571}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/empty.rs","byte_start":9099553,"byte_end":9099558,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":12507},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/flush.rs","byte_start":9100799,"byte_end":9100804,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":12510},{"krate":0,"index":12511}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12457},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9101903,"byte_end":9101908,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":12459},{"krate":0,"index":12460},{"krate":0,"index":12461},{"krate":0,"index":12462}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102755,"byte_end":9102764,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102265,"byte_end":9102305,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102310,"byte_end":9102313,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102318,"byte_end":9102332,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102337,"byte_end":9102340,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102345,"byte_end":9102352,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102357,"byte_end":9102391,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102396,"byte_end":9102431,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102436,"byte_end":9102439,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102444,"byte_end":9102527,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102532,"byte_end":9102572,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102577,"byte_end":9102580,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102585,"byte_end":9102638,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102643,"byte_end":9102686,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102691,"byte_end":9102696,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102701,"byte_end":9102713,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102718,"byte_end":9102725,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102730,"byte_end":9102737,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102991,"byte_end":9102998,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102924,"byte_end":9102979,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103117,"byte_end":9103124,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103058,"byte_end":9103105,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103411,"byte_end":9103421,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103176,"byte_end":9103237,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103242,"byte_end":9103245,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103250,"byte_end":9103313,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103318,"byte_end":9103399,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9104307,"byte_end":9104321,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103514,"byte_end":9103556,"line_start":86,"line_end":86,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103561,"byte_end":9103564,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103569,"byte_end":9103593,"line_start":88,"line_end":88,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103598,"byte_end":9103601,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103606,"byte_end":9103667,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103672,"byte_end":9103739,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103744,"byte_end":9103817,"line_start":92,"line_end":92,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103822,"byte_end":9103905,"line_start":93,"line_end":93,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103910,"byte_end":9103913,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103918,"byte_end":9103990,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103995,"byte_end":9104064,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9104069,"byte_end":9104113,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9104118,"byte_end":9104121,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9104126,"byte_end":9104200,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9104205,"byte_end":9104279,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9104284,"byte_end":9104295,"line_start":101,"line_end":101,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9106049,"byte_end":9106061,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3575}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105261,"byte_end":9105320,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105321,"byte_end":9105324,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105325,"byte_end":9105404,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105405,"byte_end":9105481,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105482,"byte_end":9105544,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105545,"byte_end":9105548,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105549,"byte_end":9105562,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105563,"byte_end":9105566,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105567,"byte_end":9105574,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105575,"byte_end":9105619,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105620,"byte_end":9105671,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105672,"byte_end":9105729,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105730,"byte_end":9105733,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105734,"byte_end":9105771,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105772,"byte_end":9105775,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105776,"byte_end":9105803,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105804,"byte_end":9105843,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105844,"byte_end":9105874,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105875,"byte_end":9105878,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105879,"byte_end":9105916,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105917,"byte_end":9105920,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105921,"byte_end":9105960,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105961,"byte_end":9105991,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9105992,"byte_end":9106004,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9106005,"byte_end":9106012,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9106013,"byte_end":9106020,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9107358,"byte_end":9107364,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9107124,"byte_end":9107207,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9107208,"byte_end":9107211,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9107212,"byte_end":9107286,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9107287,"byte_end":9107350,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":12406},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read.rs","byte_start":9112420,"byte_end":9112424,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":12409},{"krate":0,"index":12410},{"krate":0,"index":12411}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12346},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_buf.rs","byte_start":9113641,"byte_end":9113648,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":12350},{"krate":0,"index":12351},{"krate":0,"index":12352}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12291},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_exact.rs","byte_start":9115853,"byte_end":9115862,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":12294},{"krate":0,"index":12295},{"krate":0,"index":12296}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12247},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9120886,"byte_end":9120892,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":12249},{"krate":0,"index":12250}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12210},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9120908,"byte_end":9120914,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":12212},{"krate":0,"index":12213}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12161},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9120930,"byte_end":9120937,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":12163},{"krate":0,"index":12164},{"krate":0,"index":12166},{"krate":0,"index":12167}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12112},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9120962,"byte_end":9120969,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":12114},{"krate":0,"index":12115},{"krate":0,"index":12117},{"krate":0,"index":12118}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12063},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9120994,"byte_end":9121001,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":12065},{"krate":0,"index":12066},{"krate":0,"index":12068},{"krate":0,"index":12069}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12014},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121026,"byte_end":9121034,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":12016},{"krate":0,"index":12017},{"krate":0,"index":12019},{"krate":0,"index":12020}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11965},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121062,"byte_end":9121069,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":11967},{"krate":0,"index":11968},{"krate":0,"index":11970},{"krate":0,"index":11971}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11916},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121094,"byte_end":9121101,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":11918},{"krate":0,"index":11919},{"krate":0,"index":11921},{"krate":0,"index":11922}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11867},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121126,"byte_end":9121133,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":11869},{"krate":0,"index":11870},{"krate":0,"index":11872},{"krate":0,"index":11873}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11818},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121158,"byte_end":9121166,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":11820},{"krate":0,"index":11821},{"krate":0,"index":11823},{"krate":0,"index":11824}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11769},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121194,"byte_end":9121203,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":11771},{"krate":0,"index":11772},{"krate":0,"index":11774},{"krate":0,"index":11775}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11720},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121231,"byte_end":9121240,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":11722},{"krate":0,"index":11723},{"krate":0,"index":11725},{"krate":0,"index":11726}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11671},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121268,"byte_end":9121277,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":11673},{"krate":0,"index":11674},{"krate":0,"index":11676},{"krate":0,"index":11677}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11622},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121305,"byte_end":9121315,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":11624},{"krate":0,"index":11625},{"krate":0,"index":11627},{"krate":0,"index":11628}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11573},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121346,"byte_end":9121355,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":11575},{"krate":0,"index":11576},{"krate":0,"index":11578},{"krate":0,"index":11579}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11524},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121383,"byte_end":9121392,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":11526},{"krate":0,"index":11527},{"krate":0,"index":11529},{"krate":0,"index":11530}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11475},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121420,"byte_end":9121429,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":11477},{"krate":0,"index":11478},{"krate":0,"index":11480},{"krate":0,"index":11481}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11426},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_int.rs","byte_start":9121457,"byte_end":9121467,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":11428},{"krate":0,"index":11429},{"krate":0,"index":11431},{"krate":0,"index":11432}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11372},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_line.rs","byte_start":9121984,"byte_end":9121992,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":11375},{"krate":0,"index":11376},{"krate":0,"index":11377},{"krate":0,"index":11378},{"krate":0,"index":11379}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11315},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_to_end.rs","byte_start":9125887,"byte_end":9125896,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":11318},{"krate":0,"index":11319},{"krate":0,"index":11320},{"krate":0,"index":11321}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11254},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_to_string.rs","byte_start":9129573,"byte_end":9129585,"line_start":16,"line_end":16,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":11257},{"krate":0,"index":11258},{"krate":0,"index":11259},{"krate":0,"index":11260},{"krate":0,"index":11261}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11193},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_until.rs","byte_start":9132256,"byte_end":9132265,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":11196},{"krate":0,"index":11197},{"krate":0,"index":11198},{"krate":0,"index":11199},{"krate":0,"index":11200}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3731},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/repeat.rs","byte_start":9134607,"byte_end":9134613,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3732}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3730},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/repeat.rs","byte_start":9135299,"byte_end":9135305,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11144},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/shutdown.rs","byte_start":9136344,"byte_end":9136352,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":11147},{"krate":0,"index":11148}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3735},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/sink.rs","byte_start":9137498,"byte_end":9137502,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3736}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3737},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/sink.rs","byte_start":9138343,"byte_end":9138347,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":20683,"byte_end":20710,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11094},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9139592,"byte_end":9139597,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":11096},{"krate":0,"index":11097},{"krate":0,"index":11098},{"krate":0,"index":11099}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140458,"byte_end":9140470,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9139946,"byte_end":9139989,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9139994,"byte_end":9139997,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140002,"byte_end":9140016,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140021,"byte_end":9140024,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140029,"byte_end":9140036,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140041,"byte_end":9140075,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140080,"byte_end":9140115,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140120,"byte_end":9140123,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140128,"byte_end":9140211,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140216,"byte_end":9140263,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140268,"byte_end":9140271,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140276,"byte_end":9140338,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140343,"byte_end":9140389,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140394,"byte_end":9140399,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140404,"byte_end":9140416,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140421,"byte_end":9140428,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140433,"byte_end":9140440,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141507,"byte_end":9141524,"line_start":85,"line_end":85,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140682,"byte_end":9140727,"line_start":68,"line_end":68,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140732,"byte_end":9140735,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140740,"byte_end":9140764,"line_start":70,"line_end":70,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140769,"byte_end":9140772,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140777,"byte_end":9140841,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140846,"byte_end":9140919,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140924,"byte_end":9141000,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141005,"byte_end":9141077,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141082,"byte_end":9141102,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141107,"byte_end":9141110,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141115,"byte_end":9141187,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141192,"byte_end":9141261,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141266,"byte_end":9141310,"line_start":80,"line_end":80,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141315,"byte_end":9141318,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141323,"byte_end":9141395,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141400,"byte_end":9141469,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9141474,"byte_end":9141495,"line_start":84,"line_end":84,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":11054},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9142681,"byte_end":9142685,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":11056},{"krate":0,"index":11057}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143275,"byte_end":9143280,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9142972,"byte_end":9143025,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143030,"byte_end":9143076,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143081,"byte_end":9143084,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143089,"byte_end":9143099,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143104,"byte_end":9143107,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143112,"byte_end":9143189,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143194,"byte_end":9143263,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143599,"byte_end":9143608,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143328,"byte_end":9143399,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143404,"byte_end":9143478,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143483,"byte_end":9143558,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143563,"byte_end":9143587,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143731,"byte_end":9143738,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143673,"byte_end":9143719,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144030,"byte_end":9144037,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143785,"byte_end":9143839,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143844,"byte_end":9143847,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143852,"byte_end":9143925,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9143930,"byte_end":9144002,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144007,"byte_end":9144018,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144348,"byte_end":9144359,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144096,"byte_end":9144157,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144162,"byte_end":9144165,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144170,"byte_end":9144243,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144248,"byte_end":9144320,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144325,"byte_end":9144336,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144505,"byte_end":9144515,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144439,"byte_end":9144493,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":11003},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write.rs","byte_start":9146499,"byte_end":9146504,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":11006},{"krate":0,"index":11007},{"krate":0,"index":11008}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10950},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_all.rs","byte_start":9147642,"byte_end":9147650,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":10953},{"krate":0,"index":10954},{"krate":0,"index":10955}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10890},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_buf.rs","byte_start":9149091,"byte_end":9149099,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":10894},{"krate":0,"index":10895},{"krate":0,"index":10896}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10840},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9153860,"byte_end":9153867,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":10842},{"krate":0,"index":10843},{"krate":0,"index":10844}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10799},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9153883,"byte_end":9153890,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":10801},{"krate":0,"index":10802},{"krate":0,"index":10803}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10750},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9153906,"byte_end":9153914,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":10752},{"krate":0,"index":10753},{"krate":0,"index":10755},{"krate":0,"index":10756}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10701},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9153939,"byte_end":9153947,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":10703},{"krate":0,"index":10704},{"krate":0,"index":10706},{"krate":0,"index":10707}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10652},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9153972,"byte_end":9153980,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":10654},{"krate":0,"index":10655},{"krate":0,"index":10657},{"krate":0,"index":10658}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10603},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154005,"byte_end":9154014,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":10605},{"krate":0,"index":10606},{"krate":0,"index":10608},{"krate":0,"index":10609}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10554},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154042,"byte_end":9154050,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":10556},{"krate":0,"index":10557},{"krate":0,"index":10559},{"krate":0,"index":10560}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10505},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154075,"byte_end":9154083,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":10507},{"krate":0,"index":10508},{"krate":0,"index":10510},{"krate":0,"index":10511}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10456},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154108,"byte_end":9154116,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":10458},{"krate":0,"index":10459},{"krate":0,"index":10461},{"krate":0,"index":10462}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10407},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154141,"byte_end":9154150,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":10409},{"krate":0,"index":10410},{"krate":0,"index":10412},{"krate":0,"index":10413}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10358},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154178,"byte_end":9154188,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":10360},{"krate":0,"index":10361},{"krate":0,"index":10363},{"krate":0,"index":10364}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10309},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154216,"byte_end":9154226,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":10311},{"krate":0,"index":10312},{"krate":0,"index":10314},{"krate":0,"index":10315}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10260},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154254,"byte_end":9154264,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":10262},{"krate":0,"index":10263},{"krate":0,"index":10265},{"krate":0,"index":10266}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10211},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154292,"byte_end":9154303,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":10213},{"krate":0,"index":10214},{"krate":0,"index":10216},{"krate":0,"index":10217}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10162},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154334,"byte_end":9154344,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":10164},{"krate":0,"index":10165},{"krate":0,"index":10167},{"krate":0,"index":10168}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10113},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154372,"byte_end":9154382,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":10115},{"krate":0,"index":10116},{"krate":0,"index":10118},{"krate":0,"index":10119}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10064},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154410,"byte_end":9154420,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":10066},{"krate":0,"index":10067},{"krate":0,"index":10069},{"krate":0,"index":10070}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10015},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_int.rs","byte_start":9154448,"byte_end":9154459,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":10017},{"krate":0,"index":10018},{"krate":0,"index":10020},{"krate":0,"index":10021}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":405},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3969},{"krate":0,"index":4405},{"krate":0,"index":4408},{"krate":0,"index":4411},{"krate":0,"index":4414},{"krate":0,"index":4554},{"krate":0,"index":4615},{"krate":0,"index":5140},{"krate":0,"index":5143},{"krate":0,"index":5146}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80374,"byte_end":80392,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80394,"byte_end":80432,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80433,"byte_end":80436,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80437,"byte_end":80520,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80521,"byte_end":80586,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80587,"byte_end":80590,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80591,"byte_end":80609,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80610,"byte_end":80613,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80614,"byte_end":80702,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80703,"byte_end":80772,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80773,"byte_end":80861,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80862,"byte_end":80920,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80921,"byte_end":80984,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":80985,"byte_end":81050,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81052,"byte_end":81055,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81056,"byte_end":81088,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81089,"byte_end":81117,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81118,"byte_end":81146,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81147,"byte_end":81181,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81182,"byte_end":81212,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81213,"byte_end":81247,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82569,"byte_end":82582,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":81881,"byte_end":81958,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":81959,"byte_end":81962,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":81963,"byte_end":81972,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":81973,"byte_end":81976,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":81977,"byte_end":82054,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82055,"byte_end":82126,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`net`** feature flag.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82127,"byte_end":82154,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82155,"byte_end":82158,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82159,"byte_end":82172,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82173,"byte_end":82176,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82177,"byte_end":82254,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82255,"byte_end":82327,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82328,"byte_end":82397,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82398,"byte_end":82401,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82402,"byte_end":82481,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82482,"byte_end":82558,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":487},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89022,"byte_end":89039,"line_start":250,"line_end":250,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":488},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89055,"byte_end":89059,"line_start":251,"line_end":251,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":489},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89120,"byte_end":89126,"line_start":252,"line_end":252,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89198,"byte_end":89213,"line_start":254,"line_end":254,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":491},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89324,"byte_end":89332,"line_start":258,"line_end":258,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89269,"byte_end":89308,"line_start":257,"line_end":257,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3942},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89574,"byte_end":89584,"line_start":270,"line_end":270,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21425,"byte_end":21448,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89874,"byte_end":89877,"line_start":281,"line_end":281,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3960},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89921,"byte_end":89925,"line_start":282,"line_end":282,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3956},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89850,"byte_end":89859,"line_start":280,"line_end":280,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":3957},{"krate":0,"index":3960}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21425,"byte_end":21448,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":4570},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/lookup_host.rs","byte_start":9155332,"byte_end":9155343,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21425,"byte_end":21448,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":4040},{"krate":0,"index":4090},{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4146},{"krate":0,"index":4149},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4225},{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4231},{"krate":0,"index":4402}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21425,"byte_end":21448,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/mod.rs","byte_start":9155496,"byte_end":9155517,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4575},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157157,"byte_end":9157168,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":4576}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21425,"byte_end":21448,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158684,"byte_end":9158688,"line_start":92,"line_end":92,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157251,"byte_end":9157327,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157332,"byte_end":9157335,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157340,"byte_end":9157401,"line_start":56,"line_end":56,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157406,"byte_end":9157409,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157414,"byte_end":9157489,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157494,"byte_end":9157570,"line_start":59,"line_end":59,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157575,"byte_end":9157586,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157591,"byte_end":9157594,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157599,"byte_end":9157674,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ Note that strings only implement this trait when the **`net`** feature","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157679,"byte_end":9157753,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ is enabled, as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157758,"byte_end":9157835,"line_start":64,"line_end":64,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157840,"byte_end":9157843,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157848,"byte_end":9157924,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157929,"byte_end":9158002,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158007,"byte_end":9158080,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158085,"byte_end":9158137,"line_start":69,"line_end":69,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158142,"byte_end":9158145,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158150,"byte_end":9158213,"line_start":71,"line_end":71,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158218,"byte_end":9158221,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158226,"byte_end":9158280,"line_start":73,"line_end":73,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158285,"byte_end":9158288,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158293,"byte_end":9158307,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158312,"byte_end":9158315,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158320,"byte_end":9158333,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158338,"byte_end":9158370,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158375,"byte_end":9158378,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158383,"byte_end":9158399,"line_start":80,"line_end":80,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158404,"byte_end":9158407,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158412,"byte_end":9158430,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158435,"byte_end":9158474,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158479,"byte_end":9158545,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158550,"byte_end":9158553,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158558,"byte_end":9158585,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158590,"byte_end":9158593,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158598,"byte_end":9158625,"line_start":88,"line_end":88,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158630,"byte_end":9158644,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158649,"byte_end":9158654,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9158659,"byte_end":9158666,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160254,"byte_end":9160260,"line_start":144,"line_end":144,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159399,"byte_end":9159456,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159461,"byte_end":9159464,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159469,"byte_end":9159544,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159549,"byte_end":9159619,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159624,"byte_end":9159653,"line_start":121,"line_end":121,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159658,"byte_end":9159661,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159666,"byte_end":9159713,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159718,"byte_end":9159721,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159726,"byte_end":9159740,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159745,"byte_end":9159748,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159753,"byte_end":9159766,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159771,"byte_end":9159803,"line_start":128,"line_end":128,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159808,"byte_end":9159811,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159816,"byte_end":9159832,"line_start":130,"line_end":130,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159837,"byte_end":9159840,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159845,"byte_end":9159863,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159868,"byte_end":9159907,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159912,"byte_end":9159978,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159983,"byte_end":9159986,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9159991,"byte_end":9160030,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160035,"byte_end":9160105,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160110,"byte_end":9160173,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160178,"byte_end":9160187,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160192,"byte_end":9160195,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160200,"byte_end":9160214,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160219,"byte_end":9160224,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160229,"byte_end":9160236,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4022},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160928,"byte_end":9160939,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160550,"byte_end":9160613,"line_start":155,"line_end":155,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160618,"byte_end":9160621,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160626,"byte_end":9160702,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160707,"byte_end":9160781,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160786,"byte_end":9160862,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9160867,"byte_end":9160916,"line_start":160,"line_end":160,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4023},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162985,"byte_end":9162993,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161547,"byte_end":9161608,"line_start":178,"line_end":178,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161613,"byte_end":9161616,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161621,"byte_end":9161693,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161698,"byte_end":9161774,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161779,"byte_end":9161852,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161857,"byte_end":9161879,"line_start":183,"line_end":183,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161884,"byte_end":9161887,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161892,"byte_end":9161966,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9161971,"byte_end":9162047,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162052,"byte_end":9162117,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162122,"byte_end":9162177,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162182,"byte_end":9162185,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162190,"byte_end":9162193,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162198,"byte_end":9162212,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162217,"byte_end":9162220,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162225,"byte_end":9162243,"line_start":193,"line_end":193,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162248,"byte_end":9162274,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162279,"byte_end":9162311,"line_start":195,"line_end":195,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162316,"byte_end":9162319,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162324,"byte_end":9162342,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162347,"byte_end":9162398,"line_start":198,"line_end":198,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162403,"byte_end":9162474,"line_start":199,"line_end":199,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162479,"byte_end":9162523,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162528,"byte_end":9162588,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162593,"byte_end":9162607,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162612,"byte_end":9162617,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162622,"byte_end":9162629,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162634,"byte_end":9162637,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162642,"byte_end":9162654,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162659,"byte_end":9162662,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162667,"byte_end":9162727,"line_start":208,"line_end":208,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162732,"byte_end":9162735,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162740,"byte_end":9162810,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162815,"byte_end":9162888,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9162893,"byte_end":9162973,"line_start":212,"line_end":212,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4025},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164087,"byte_end":9164097,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163361,"byte_end":9163422,"line_start":224,"line_end":224,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163427,"byte_end":9163430,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163435,"byte_end":9163508,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163513,"byte_end":9163547,"line_start":227,"line_end":227,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163552,"byte_end":9163555,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163560,"byte_end":9163574,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163579,"byte_end":9163582,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163587,"byte_end":9163605,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163610,"byte_end":9163642,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163647,"byte_end":9163650,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163655,"byte_end":9163671,"line_start":234,"line_end":234,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163676,"byte_end":9163731,"line_start":235,"line_end":235,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163736,"byte_end":9163739,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163744,"byte_end":9163762,"line_start":237,"line_end":237,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163767,"byte_end":9163806,"line_start":238,"line_end":238,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163811,"byte_end":9163877,"line_start":239,"line_end":239,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163882,"byte_end":9163885,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163890,"byte_end":9163932,"line_start":241,"line_end":241,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9163937,"byte_end":9164026,"line_start":242,"line_end":242,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164031,"byte_end":9164034,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164039,"byte_end":9164053,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164058,"byte_end":9164063,"line_start":245,"line_end":245,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164068,"byte_end":9164075,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164790,"byte_end":9164793,"line_start":274,"line_end":274,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164173,"byte_end":9164231,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164236,"byte_end":9164239,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164244,"byte_end":9164304,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164309,"byte_end":9164312,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164317,"byte_end":9164354,"line_start":255,"line_end":255,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164359,"byte_end":9164362,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164367,"byte_end":9164381,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164386,"byte_end":9164389,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164394,"byte_end":9164407,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164412,"byte_end":9164444,"line_start":260,"line_end":260,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164449,"byte_end":9164452,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164457,"byte_end":9164473,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164478,"byte_end":9164481,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164486,"byte_end":9164504,"line_start":264,"line_end":264,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164509,"byte_end":9164548,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164553,"byte_end":9164615,"line_start":266,"line_end":266,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164620,"byte_end":9164623,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164628,"byte_end":9164685,"line_start":268,"line_end":268,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164690,"byte_end":9164730,"line_start":269,"line_end":269,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164735,"byte_end":9164738,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164743,"byte_end":9164756,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164761,"byte_end":9164766,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164771,"byte_end":9164778,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165422,"byte_end":9165429,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164855,"byte_end":9164913,"line_start":278,"line_end":278,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164918,"byte_end":9164921,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9164926,"byte_end":9165002,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165007,"byte_end":9165028,"line_start":281,"line_end":281,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165033,"byte_end":9165036,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165041,"byte_end":9165055,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165060,"byte_end":9165063,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165068,"byte_end":9165081,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165086,"byte_end":9165118,"line_start":286,"line_end":286,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165123,"byte_end":9165126,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165131,"byte_end":9165147,"line_start":288,"line_end":288,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165152,"byte_end":9165155,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165160,"byte_end":9165178,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165183,"byte_end":9165222,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165227,"byte_end":9165290,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165295,"byte_end":9165298,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165303,"byte_end":9165361,"line_start":294,"line_end":294,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165366,"byte_end":9165369,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165374,"byte_end":9165388,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165393,"byte_end":9165398,"line_start":297,"line_end":297,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165403,"byte_end":9165410,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4577},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169555,"byte_end":9169564,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":4578}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21425,"byte_end":21448,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170428,"byte_end":9170434,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169633,"byte_end":9169677,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169682,"byte_end":9169685,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169690,"byte_end":9169745,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169750,"byte_end":9169753,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169758,"byte_end":9169771,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169776,"byte_end":9169779,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169784,"byte_end":9169857,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169862,"byte_end":9169902,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169907,"byte_end":9169910,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169915,"byte_end":9169929,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169934,"byte_end":9169937,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169942,"byte_end":9169991,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169996,"byte_end":9169999,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170004,"byte_end":9170017,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170022,"byte_end":9170052,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170057,"byte_end":9170060,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170065,"byte_end":9170081,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170086,"byte_end":9170089,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170094,"byte_end":9170112,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170117,"byte_end":9170156,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170161,"byte_end":9170214,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170219,"byte_end":9170261,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170266,"byte_end":9170293,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170298,"byte_end":9170301,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170306,"byte_end":9170349,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170354,"byte_end":9170375,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170380,"byte_end":9170394,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170399,"byte_end":9170404,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170409,"byte_end":9170416,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4069},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171351,"byte_end":9171357,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170559,"byte_end":9170603,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170608,"byte_end":9170611,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170616,"byte_end":9170672,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170677,"byte_end":9170680,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170685,"byte_end":9170698,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170703,"byte_end":9170706,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170711,"byte_end":9170784,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170789,"byte_end":9170829,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170834,"byte_end":9170837,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170842,"byte_end":9170856,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170861,"byte_end":9170864,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170869,"byte_end":9170918,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170923,"byte_end":9170926,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170931,"byte_end":9170944,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170949,"byte_end":9170979,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170984,"byte_end":9170987,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9170992,"byte_end":9171008,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171013,"byte_end":9171016,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171021,"byte_end":9171039,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171044,"byte_end":9171083,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171088,"byte_end":9171137,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171142,"byte_end":9171184,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171189,"byte_end":9171216,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171221,"byte_end":9171224,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171229,"byte_end":9171272,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171277,"byte_end":9171298,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171303,"byte_end":9171317,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171322,"byte_end":9171327,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171332,"byte_end":9171339,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4070},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172172,"byte_end":9172185,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171482,"byte_end":9171532,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171537,"byte_end":9171540,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171545,"byte_end":9171610,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171615,"byte_end":9171650,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171655,"byte_end":9171658,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171663,"byte_end":9171677,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171682,"byte_end":9171685,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171690,"byte_end":9171703,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171708,"byte_end":9171738,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171743,"byte_end":9171746,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171751,"byte_end":9171767,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171772,"byte_end":9171775,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171780,"byte_end":9171798,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171803,"byte_end":9171842,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171847,"byte_end":9171900,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171905,"byte_end":9171908,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171913,"byte_end":9171955,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9171960,"byte_end":9171996,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172001,"byte_end":9172028,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172033,"byte_end":9172036,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172041,"byte_end":9172085,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172090,"byte_end":9172111,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172116,"byte_end":9172119,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172124,"byte_end":9172138,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172143,"byte_end":9172148,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172153,"byte_end":9172160,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4071},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172884,"byte_end":9172893,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172285,"byte_end":9172346,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172351,"byte_end":9172354,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172359,"byte_end":9172373,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172378,"byte_end":9172381,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172386,"byte_end":9172399,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172404,"byte_end":9172434,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172439,"byte_end":9172442,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172447,"byte_end":9172463,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172468,"byte_end":9172471,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172476,"byte_end":9172494,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172499,"byte_end":9172538,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172543,"byte_end":9172596,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172601,"byte_end":9172604,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172609,"byte_end":9172651,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172656,"byte_end":9172692,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172697,"byte_end":9172742,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172747,"byte_end":9172774,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172779,"byte_end":9172782,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172787,"byte_end":9172831,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172836,"byte_end":9172850,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172855,"byte_end":9172860,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172865,"byte_end":9172872,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173894,"byte_end":9173907,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"set_reuseport","qualname":"<TcpSocket>::set_reuseport","value":"pub fn set_reuseport(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9172969,"byte_end":9173048,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173053,"byte_end":9173087,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173092,"byte_end":9173095,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173100,"byte_end":9173165,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173170,"byte_end":9173205,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173210,"byte_end":9173213,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173218,"byte_end":9173232,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173237,"byte_end":9173240,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173245,"byte_end":9173258,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173263,"byte_end":9173293,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173298,"byte_end":9173301,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173306,"byte_end":9173322,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173327,"byte_end":9173330,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173335,"byte_end":9173353,"line_start":227,"line_end":227,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173358,"byte_end":9173397,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173402,"byte_end":9173455,"line_start":229,"line_end":229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173460,"byte_end":9173463,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173468,"byte_end":9173510,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173515,"byte_end":9173551,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173556,"byte_end":9173583,"line_start":233,"line_end":233,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173588,"byte_end":9173591,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173596,"byte_end":9173640,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173645,"byte_end":9173659,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173664,"byte_end":9173669,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173674,"byte_end":9173681,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9173686,"byte_end":9173759,"line_start":239,"line_end":239,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174982,"byte_end":9174991,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"reuseport","qualname":"<TcpSocket>::reuseport","value":"pub fn reuseport(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174007,"byte_end":9174086,"line_start":248,"line_end":248,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174091,"byte_end":9174125,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174130,"byte_end":9174133,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174138,"byte_end":9174203,"line_start":251,"line_end":251,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174208,"byte_end":9174243,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174248,"byte_end":9174251,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174256,"byte_end":9174270,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174275,"byte_end":9174278,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174283,"byte_end":9174296,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174301,"byte_end":9174331,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174336,"byte_end":9174339,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174344,"byte_end":9174360,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174365,"byte_end":9174368,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174373,"byte_end":9174391,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174396,"byte_end":9174435,"line_start":262,"line_end":262,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174440,"byte_end":9174493,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174498,"byte_end":9174501,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174506,"byte_end":9174548,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174553,"byte_end":9174589,"line_start":266,"line_end":266,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseport().unwrap());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174594,"byte_end":9174639,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174644,"byte_end":9174671,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174676,"byte_end":9174679,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174684,"byte_end":9174728,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174733,"byte_end":9174747,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174752,"byte_end":9174757,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174762,"byte_end":9174769,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9174774,"byte_end":9174847,"line_start":274,"line_end":274,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175219,"byte_end":9175239,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175067,"byte_end":9175123,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175128,"byte_end":9175131,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175136,"byte_end":9175207,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4075},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176562,"byte_end":9176578,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175335,"byte_end":9175395,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175400,"byte_end":9175403,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175408,"byte_end":9175482,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175487,"byte_end":9175498,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175503,"byte_end":9175506,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175511,"byte_end":9175583,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175588,"byte_end":9175662,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175667,"byte_end":9175735,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175740,"byte_end":9175762,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175767,"byte_end":9175770,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175775,"byte_end":9175850,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175855,"byte_end":9175926,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9175931,"byte_end":9176007,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176012,"byte_end":9176031,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176036,"byte_end":9176111,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176116,"byte_end":9176191,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176196,"byte_end":9176212,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176217,"byte_end":9176282,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176287,"byte_end":9176352,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176357,"byte_end":9176429,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176434,"byte_end":9176479,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176484,"byte_end":9176487,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176492,"byte_end":9176550,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4076},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176815,"byte_end":9176835,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176660,"byte_end":9176719,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176724,"byte_end":9176727,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176732,"byte_end":9176803,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178164,"byte_end":9178180,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176931,"byte_end":9176994,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9176999,"byte_end":9177002,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177007,"byte_end":9177081,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177086,"byte_end":9177097,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177102,"byte_end":9177105,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177110,"byte_end":9177182,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177187,"byte_end":9177261,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177266,"byte_end":9177334,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177339,"byte_end":9177361,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177366,"byte_end":9177369,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177374,"byte_end":9177449,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177454,"byte_end":9177528,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177533,"byte_end":9177609,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177614,"byte_end":9177633,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177638,"byte_end":9177713,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177718,"byte_end":9177793,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177798,"byte_end":9177814,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177819,"byte_end":9177884,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177889,"byte_end":9177954,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9177959,"byte_end":9178031,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178036,"byte_end":9178081,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178086,"byte_end":9178089,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178094,"byte_end":9178152,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178888,"byte_end":9178898,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178262,"byte_end":9178303,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178308,"byte_end":9178311,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178316,"byte_end":9178365,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178370,"byte_end":9178373,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178378,"byte_end":9178392,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178397,"byte_end":9178400,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178405,"byte_end":9178418,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178423,"byte_end":9178453,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178458,"byte_end":9178461,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178466,"byte_end":9178482,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178487,"byte_end":9178490,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178495,"byte_end":9178513,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178518,"byte_end":9178557,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178562,"byte_end":9178615,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178620,"byte_end":9178623,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178628,"byte_end":9178670,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178675,"byte_end":9178702,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178707,"byte_end":9178786,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178791,"byte_end":9178835,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178840,"byte_end":9178854,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178859,"byte_end":9178864,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178869,"byte_end":9178876,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179728,"byte_end":9179732,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9178980,"byte_end":9179021,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179026,"byte_end":9179029,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179034,"byte_end":9179101,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179106,"byte_end":9179182,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179187,"byte_end":9179199,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179204,"byte_end":9179207,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179212,"byte_end":9179226,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179231,"byte_end":9179234,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179239,"byte_end":9179274,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179279,"byte_end":9179282,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179287,"byte_end":9179300,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179305,"byte_end":9179335,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179340,"byte_end":9179343,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179348,"byte_end":9179364,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179369,"byte_end":9179372,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179377,"byte_end":9179395,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179400,"byte_end":9179439,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179444,"byte_end":9179497,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179502,"byte_end":9179505,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179510,"byte_end":9179552,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179557,"byte_end":9179584,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179589,"byte_end":9179592,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179597,"byte_end":9179641,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179646,"byte_end":9179667,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179672,"byte_end":9179675,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179680,"byte_end":9179694,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179699,"byte_end":9179704,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179709,"byte_end":9179716,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180800,"byte_end":9180807,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179819,"byte_end":9179894,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179899,"byte_end":9179902,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179907,"byte_end":9179977,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9179982,"byte_end":9180051,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180056,"byte_end":9180090,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180095,"byte_end":9180098,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180103,"byte_end":9180131,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180136,"byte_end":9180139,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180144,"byte_end":9180214,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180219,"byte_end":9180295,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180300,"byte_end":9180312,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180317,"byte_end":9180320,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180325,"byte_end":9180339,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180344,"byte_end":9180347,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180352,"byte_end":9180377,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180382,"byte_end":9180385,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180390,"byte_end":9180403,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180408,"byte_end":9180438,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180443,"byte_end":9180446,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180451,"byte_end":9180467,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180472,"byte_end":9180475,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180480,"byte_end":9180498,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180503,"byte_end":9180542,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180547,"byte_end":9180600,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180605,"byte_end":9180608,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180613,"byte_end":9180655,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180660,"byte_end":9180709,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180714,"byte_end":9180733,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180738,"byte_end":9180741,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180746,"byte_end":9180760,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180765,"byte_end":9180770,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180775,"byte_end":9180782,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182105,"byte_end":9182111,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9180957,"byte_end":9181001,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181006,"byte_end":9181009,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181014,"byte_end":9181088,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181093,"byte_end":9181167,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181172,"byte_end":9181243,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operationg-system will start rejecting connections.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181248,"byte_end":9181303,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181308,"byte_end":9181311,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181316,"byte_end":9181364,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181369,"byte_end":9181372,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181377,"byte_end":9181453,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181458,"byte_end":9181533,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181538,"byte_end":9181584,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181589,"byte_end":9181592,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181597,"byte_end":9181611,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181616,"byte_end":9181619,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181624,"byte_end":9181651,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181656,"byte_end":9181659,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181664,"byte_end":9181677,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181682,"byte_end":9181712,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181717,"byte_end":9181720,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181725,"byte_end":9181741,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181746,"byte_end":9181749,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181754,"byte_end":9181772,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181777,"byte_end":9181816,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181821,"byte_end":9181874,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181879,"byte_end":9181882,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181887,"byte_end":9181929,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181934,"byte_end":9181961,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181966,"byte_end":9181969,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9181974,"byte_end":9182018,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182023,"byte_end":9182044,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182049,"byte_end":9182052,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182057,"byte_end":9182071,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182076,"byte_end":9182081,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182086,"byte_end":9182093,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4579},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184457,"byte_end":9184465,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184124,"byte_end":9184188,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184189,"byte_end":9184192,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184193,"byte_end":9184281,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184282,"byte_end":9184309,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184310,"byte_end":9184313,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184314,"byte_end":9184342,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184343,"byte_end":9184376,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184377,"byte_end":9184428,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4586},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185079,"byte_end":9185088,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184487,"byte_end":9184552,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184553,"byte_end":9184556,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184557,"byte_end":9184643,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184644,"byte_end":9184696,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184697,"byte_end":9184700,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184701,"byte_end":9184782,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184783,"byte_end":9184818,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184819,"byte_end":9184822,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184823,"byte_end":9184851,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184852,"byte_end":9184885,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184886,"byte_end":9184933,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184934,"byte_end":9184996,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9184997,"byte_end":9185050,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186404,"byte_end":9186413,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185262,"byte_end":9185336,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185341,"byte_end":9185414,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185419,"byte_end":9185433,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185438,"byte_end":9185441,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185446,"byte_end":9185517,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185522,"byte_end":9185596,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185601,"byte_end":9185625,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185630,"byte_end":9185633,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185638,"byte_end":9185711,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185716,"byte_end":9185719,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185724,"byte_end":9185738,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185743,"byte_end":9185746,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185751,"byte_end":9185764,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185769,"byte_end":9185804,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185809,"byte_end":9185839,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185844,"byte_end":9185847,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185852,"byte_end":9185885,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185890,"byte_end":9185893,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185898,"byte_end":9185916,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185921,"byte_end":9185960,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185965,"byte_end":9186034,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186039,"byte_end":9186087,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186092,"byte_end":9186122,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186127,"byte_end":9186172,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186177,"byte_end":9186180,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186185,"byte_end":9186207,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186212,"byte_end":9186257,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186262,"byte_end":9186280,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186285,"byte_end":9186288,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186293,"byte_end":9186307,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186312,"byte_end":9186317,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186322,"byte_end":9186329,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186334,"byte_end":9186337,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186342,"byte_end":9186392,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4126},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187873,"byte_end":9187877,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186575,"byte_end":9186645,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186650,"byte_end":9186719,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186724,"byte_end":9186763,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186768,"byte_end":9186771,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186776,"byte_end":9186844,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186849,"byte_end":9186852,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186857,"byte_end":9186897,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186902,"byte_end":9186905,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186910,"byte_end":9186924,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186929,"byte_end":9186932,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186937,"byte_end":9186950,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186955,"byte_end":9186985,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9186990,"byte_end":9187022,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187027,"byte_end":9187053,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187058,"byte_end":9187061,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187066,"byte_end":9187084,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187089,"byte_end":9187140,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187145,"byte_end":9187173,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187178,"byte_end":9187247,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187252,"byte_end":9187300,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187305,"byte_end":9187308,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187313,"byte_end":9187342,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187347,"byte_end":9187376,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187381,"byte_end":9187384,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187389,"byte_end":9187416,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187421,"byte_end":9187468,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187473,"byte_end":9187476,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187481,"byte_end":9187505,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187510,"byte_end":9187569,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187574,"byte_end":9187613,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187618,"byte_end":9187621,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187626,"byte_end":9187640,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187645,"byte_end":9187650,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187655,"byte_end":9187662,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187667,"byte_end":9187670,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187675,"byte_end":9187740,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187745,"byte_end":9187748,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187753,"byte_end":9187799,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9187804,"byte_end":9187855,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4593},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190407,"byte_end":9190420,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":4594}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190056,"byte_end":9190122,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190123,"byte_end":9190126,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190127,"byte_end":9190214,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190215,"byte_end":9190249,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190250,"byte_end":9190253,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190254,"byte_end":9190282,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190283,"byte_end":9190326,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190327,"byte_end":9190378,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4597},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9191146,"byte_end":9191160,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":4598},{"krate":0,"index":4599}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190453,"byte_end":9190520,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190521,"byte_end":9190524,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190525,"byte_end":9190612,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190613,"byte_end":9190690,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190691,"byte_end":9190748,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190749,"byte_end":9190752,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190753,"byte_end":9190839,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190840,"byte_end":9190875,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190876,"byte_end":9190879,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190880,"byte_end":9190908,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190909,"byte_end":9190952,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9190953,"byte_end":9191000,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9191001,"byte_end":9191063,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9191064,"byte_end":9191117,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4602},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192125,"byte_end":9192137,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9191993,"byte_end":9192075,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192076,"byte_end":9192096,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4604},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192138,"byte_end":9192155,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":4602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4605},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192157,"byte_end":9192175,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":4602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192721,"byte_end":9192728,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192458,"byte_end":9192527,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192532,"byte_end":9192596,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192601,"byte_end":9192653,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192658,"byte_end":9192661,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192666,"byte_end":9192709,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4199},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193978,"byte_end":9193987,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192835,"byte_end":9192909,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192914,"byte_end":9192987,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192992,"byte_end":9193006,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193011,"byte_end":9193014,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193019,"byte_end":9193090,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193095,"byte_end":9193169,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193174,"byte_end":9193198,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193203,"byte_end":9193206,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193211,"byte_end":9193284,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193289,"byte_end":9193292,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193297,"byte_end":9193311,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193316,"byte_end":9193319,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193324,"byte_end":9193337,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193342,"byte_end":9193377,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193382,"byte_end":9193412,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193417,"byte_end":9193420,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193425,"byte_end":9193458,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193463,"byte_end":9193466,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193471,"byte_end":9193489,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193494,"byte_end":9193533,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193538,"byte_end":9193603,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193608,"byte_end":9193661,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193666,"byte_end":9193696,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193701,"byte_end":9193746,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193751,"byte_end":9193754,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193759,"byte_end":9193781,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193786,"byte_end":9193831,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193836,"byte_end":9193854,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193859,"byte_end":9193862,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193867,"byte_end":9193881,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193886,"byte_end":9193891,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193896,"byte_end":9193903,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193908,"byte_end":9193911,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9193916,"byte_end":9193966,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195452,"byte_end":9195456,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194153,"byte_end":9194223,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194228,"byte_end":9194297,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194302,"byte_end":9194341,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194346,"byte_end":9194349,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194354,"byte_end":9194422,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194427,"byte_end":9194430,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194435,"byte_end":9194475,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194480,"byte_end":9194483,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194488,"byte_end":9194502,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194507,"byte_end":9194510,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194515,"byte_end":9194528,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194533,"byte_end":9194563,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194568,"byte_end":9194600,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194605,"byte_end":9194631,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194636,"byte_end":9194639,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194644,"byte_end":9194662,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194667,"byte_end":9194718,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194723,"byte_end":9194751,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194756,"byte_end":9194821,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194826,"byte_end":9194879,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194884,"byte_end":9194887,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194892,"byte_end":9194921,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194926,"byte_end":9194955,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194960,"byte_end":9194963,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9194968,"byte_end":9194995,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195000,"byte_end":9195047,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195052,"byte_end":9195055,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195060,"byte_end":9195084,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195089,"byte_end":9195148,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195153,"byte_end":9195192,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195197,"byte_end":9195200,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195205,"byte_end":9195219,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195224,"byte_end":9195229,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195234,"byte_end":9195241,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195246,"byte_end":9195249,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195254,"byte_end":9195319,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195324,"byte_end":9195327,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195332,"byte_end":9195378,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195383,"byte_end":9195434,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4207},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196131,"byte_end":9196138,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195868,"byte_end":9195937,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195942,"byte_end":9196006,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196011,"byte_end":9196063,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196068,"byte_end":9196071,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196076,"byte_end":9196119,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4208},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196443,"byte_end":9196449,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196244,"byte_end":9196316,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196321,"byte_end":9196390,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196395,"byte_end":9196431,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4608},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200359,"byte_end":9200368,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":4609}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21425,"byte_end":21448,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201902,"byte_end":9201909,"line_start":109,"line_end":109,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200447,"byte_end":9200491,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200496,"byte_end":9200499,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200504,"byte_end":9200578,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address. Note that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200583,"byte_end":9200652,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ strings only implement this trait when the **`net`** feature is enabled,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200657,"byte_end":9200733,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ as strings may contain domain names that need to be resolved.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200738,"byte_end":9200803,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200808,"byte_end":9200811,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200816,"byte_end":9200892,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200897,"byte_end":9200966,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200971,"byte_end":9201047,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201052,"byte_end":9201111,"line_start":82,"line_end":82,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201116,"byte_end":9201119,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201124,"byte_end":9201178,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201183,"byte_end":9201186,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201191,"byte_end":9201205,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201210,"byte_end":9201213,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201218,"byte_end":9201231,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201236,"byte_end":9201266,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201271,"byte_end":9201304,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201309,"byte_end":9201335,"line_start":91,"line_end":91,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201340,"byte_end":9201343,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201348,"byte_end":9201366,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201371,"byte_end":9201422,"line_start":94,"line_end":94,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201427,"byte_end":9201455,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201460,"byte_end":9201529,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201534,"byte_end":9201537,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201542,"byte_end":9201569,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201574,"byte_end":9201623,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201628,"byte_end":9201631,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201636,"byte_end":9201650,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201655,"byte_end":9201660,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201665,"byte_end":9201672,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201677,"byte_end":9201680,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201685,"byte_end":9201756,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201761,"byte_end":9201764,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201769,"byte_end":9201826,"line_start":107,"line_end":107,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9201831,"byte_end":9201884,"line_start":108,"line_end":108,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204633,"byte_end":9204641,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203516,"byte_end":9203573,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203578,"byte_end":9203581,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203586,"byte_end":9203656,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203661,"byte_end":9203737,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203742,"byte_end":9203813,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203818,"byte_end":9203840,"line_start":163,"line_end":163,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203845,"byte_end":9203848,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203853,"byte_end":9203867,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203872,"byte_end":9203875,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203880,"byte_end":9203898,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203903,"byte_end":9203929,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203934,"byte_end":9203964,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203969,"byte_end":9203972,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9203977,"byte_end":9203995,"line_start":171,"line_end":171,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204000,"byte_end":9204051,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204056,"byte_end":9204130,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204135,"byte_end":9204177,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204182,"byte_end":9204236,"line_start":175,"line_end":175,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204241,"byte_end":9204255,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204260,"byte_end":9204265,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204270,"byte_end":9204277,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204282,"byte_end":9204285,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204290,"byte_end":9204302,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204307,"byte_end":9204310,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204315,"byte_end":9204375,"line_start":182,"line_end":182,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204380,"byte_end":9204383,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204388,"byte_end":9204458,"line_start":184,"line_end":184,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204463,"byte_end":9204536,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204541,"byte_end":9204621,"line_start":186,"line_end":186,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4335},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206283,"byte_end":9206291,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204834,"byte_end":9204902,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204907,"byte_end":9204910,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have `nonblocking mode` set as `true`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9204915,"byte_end":9204999,"line_start":195,"line_end":195,"column_start":5,"column_end":89}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205004,"byte_end":9205070,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205075,"byte_end":9205078,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205083,"byte_end":9205097,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205102,"byte_end":9205105,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205110,"byte_end":9205117,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205122,"byte_end":9205148,"line_start":201,"line_end":201,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205153,"byte_end":9205175,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205180,"byte_end":9205212,"line_start":203,"line_end":203,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205217,"byte_end":9205249,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205254,"byte_end":9205289,"line_start":205,"line_end":205,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205294,"byte_end":9205297,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205302,"byte_end":9205320,"line_start":207,"line_end":207,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205325,"byte_end":9205376,"line_start":208,"line_end":208,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205381,"byte_end":9205414,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205419,"byte_end":9205486,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205491,"byte_end":9205532,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205537,"byte_end":9205630,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205635,"byte_end":9205692,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205697,"byte_end":9205708,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205713,"byte_end":9205774,"line_start":215,"line_end":215,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205779,"byte_end":9205841,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205846,"byte_end":9205912,"line_start":217,"line_end":217,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205917,"byte_end":9205964,"line_start":218,"line_end":218,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9205969,"byte_end":9206015,"line_start":219,"line_end":219,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206020,"byte_end":9206063,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206068,"byte_end":9206082,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206087,"byte_end":9206092,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206097,"byte_end":9206104,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206109,"byte_end":9206149,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206154,"byte_end":9206202,"line_start":225,"line_end":225,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206207,"byte_end":9206271,"line_start":226,"line_end":226,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4338},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207201,"byte_end":9207211,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206802,"byte_end":9206861,"line_start":245,"line_end":245,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206866,"byte_end":9206869,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206874,"byte_end":9206888,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206893,"byte_end":9206896,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206901,"byte_end":9206914,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206919,"byte_end":9206949,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206954,"byte_end":9206957,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9206962,"byte_end":9207026,"line_start":252,"line_end":252,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207031,"byte_end":9207092,"line_start":253,"line_end":253,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207097,"byte_end":9207100,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207105,"byte_end":9207148,"line_start":255,"line_end":255,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207153,"byte_end":9207165,"line_start":256,"line_end":256,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207170,"byte_end":9207177,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207182,"byte_end":9207189,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207690,"byte_end":9207699,"line_start":277,"line_end":277,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207287,"byte_end":9207351,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207356,"byte_end":9207359,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207364,"byte_end":9207378,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207383,"byte_end":9207386,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207391,"byte_end":9207404,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207409,"byte_end":9207439,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207444,"byte_end":9207447,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207452,"byte_end":9207516,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207521,"byte_end":9207582,"line_start":271,"line_end":271,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207587,"byte_end":9207590,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207595,"byte_end":9207637,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207642,"byte_end":9207654,"line_start":274,"line_end":274,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207659,"byte_end":9207666,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207671,"byte_end":9207678,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209190,"byte_end":9209199,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207774,"byte_end":9207849,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207854,"byte_end":9207927,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207932,"byte_end":9207946,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207951,"byte_end":9207954,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9207959,"byte_end":9208021,"line_start":285,"line_end":285,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208026,"byte_end":9208098,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208103,"byte_end":9208167,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208172,"byte_end":9208226,"line_start":288,"line_end":288,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208231,"byte_end":9208234,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208239,"byte_end":9208257,"line_start":290,"line_end":290,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208262,"byte_end":9208265,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208270,"byte_end":9208295,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208300,"byte_end":9208303,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208308,"byte_end":9208359,"line_start":294,"line_end":294,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208364,"byte_end":9208447,"line_start":295,"line_end":295,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208452,"byte_end":9208507,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208512,"byte_end":9208515,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208520,"byte_end":9208532,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208537,"byte_end":9208540,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208545,"byte_end":9208620,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208625,"byte_end":9208628,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208633,"byte_end":9208647,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208652,"byte_end":9208655,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208660,"byte_end":9208673,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208678,"byte_end":9208713,"line_start":305,"line_end":305,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208718,"byte_end":9208748,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208753,"byte_end":9208756,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208761,"byte_end":9208794,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208799,"byte_end":9208802,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208807,"byte_end":9208825,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208830,"byte_end":9208869,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208874,"byte_end":9208939,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208944,"byte_end":9208974,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9208979,"byte_end":9209024,"line_start":314,"line_end":314,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209029,"byte_end":9209032,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209037,"byte_end":9209059,"line_start":316,"line_end":316,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209064,"byte_end":9209106,"line_start":317,"line_end":317,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209111,"byte_end":9209129,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209134,"byte_end":9209137,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209142,"byte_end":9209156,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209161,"byte_end":9209166,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9209171,"byte_end":9209178,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212271,"byte_end":9212276,"line_start":409,"line_end":409,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210006,"byte_end":9210053,"line_start":349,"line_end":349,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210058,"byte_end":9210061,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210066,"byte_end":9210140,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210145,"byte_end":9210220,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210225,"byte_end":9210263,"line_start":353,"line_end":353,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210268,"byte_end":9210271,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210276,"byte_end":9210290,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210295,"byte_end":9210298,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210303,"byte_end":9210373,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210378,"byte_end":9210392,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210397,"byte_end":9210400,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210405,"byte_end":9210418,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210423,"byte_end":9210451,"line_start":361,"line_end":361,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210456,"byte_end":9210486,"line_start":362,"line_end":362,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210491,"byte_end":9210517,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210522,"byte_end":9210538,"line_start":364,"line_end":364,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210543,"byte_end":9210546,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210551,"byte_end":9210569,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210574,"byte_end":9210625,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210630,"byte_end":9210695,"line_start":368,"line_end":368,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210700,"byte_end":9210703,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210708,"byte_end":9210722,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210727,"byte_end":9210812,"line_start":371,"line_end":371,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210817,"byte_end":9210820,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210825,"byte_end":9210861,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210866,"byte_end":9210911,"line_start":374,"line_end":374,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210916,"byte_end":9210990,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9210995,"byte_end":9211057,"line_start":376,"line_end":376,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211062,"byte_end":9211112,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211117,"byte_end":9211147,"line_start":378,"line_end":378,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211152,"byte_end":9211213,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211218,"byte_end":9211239,"line_start":380,"line_end":380,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211244,"byte_end":9211320,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211325,"byte_end":9211358,"line_start":382,"line_end":382,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211363,"byte_end":9211384,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211389,"byte_end":9211420,"line_start":384,"line_end":384,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211425,"byte_end":9211470,"line_start":385,"line_end":385,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211475,"byte_end":9211496,"line_start":386,"line_end":386,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211501,"byte_end":9211518,"line_start":387,"line_end":387,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211523,"byte_end":9211526,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211531,"byte_end":9211544,"line_start":389,"line_end":389,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211549,"byte_end":9211552,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211557,"byte_end":9211593,"line_start":391,"line_end":391,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211598,"byte_end":9211673,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211678,"byte_end":9211740,"line_start":393,"line_end":393,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211745,"byte_end":9211801,"line_start":394,"line_end":394,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211806,"byte_end":9211836,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211841,"byte_end":9211895,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211900,"byte_end":9211921,"line_start":397,"line_end":397,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9211926,"byte_end":9212002,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212007,"byte_end":9212039,"line_start":399,"line_end":399,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212044,"byte_end":9212065,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212070,"byte_end":9212101,"line_start":401,"line_end":401,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212106,"byte_end":9212151,"line_start":402,"line_end":402,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212156,"byte_end":9212177,"line_start":403,"line_end":403,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212182,"byte_end":9212199,"line_start":404,"line_end":404,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212204,"byte_end":9212217,"line_start":405,"line_end":405,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212222,"byte_end":9212231,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212236,"byte_end":9212241,"line_start":407,"line_end":407,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212246,"byte_end":9212253,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213796,"byte_end":9213804,"line_start":457,"line_end":457,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212433,"byte_end":9212476,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212481,"byte_end":9212484,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212489,"byte_end":9212566,"line_start":416,"line_end":416,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212571,"byte_end":9212600,"line_start":417,"line_end":417,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212605,"byte_end":9212608,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212613,"byte_end":9212627,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212632,"byte_end":9212635,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212640,"byte_end":9212653,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212658,"byte_end":9212688,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212693,"byte_end":9212719,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212724,"byte_end":9212740,"line_start":424,"line_end":424,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212745,"byte_end":9212748,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212753,"byte_end":9212771,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212776,"byte_end":9212827,"line_start":427,"line_end":427,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212832,"byte_end":9212860,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212865,"byte_end":9212930,"line_start":429,"line_end":429,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212935,"byte_end":9212938,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212943,"byte_end":9212979,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212984,"byte_end":9212987,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9212992,"byte_end":9213006,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213011,"byte_end":9213060,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213065,"byte_end":9213102,"line_start":435,"line_end":435,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213107,"byte_end":9213110,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213115,"byte_end":9213185,"line_start":437,"line_end":437,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213190,"byte_end":9213248,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213253,"byte_end":9213298,"line_start":439,"line_end":439,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213303,"byte_end":9213329,"line_start":440,"line_end":440,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213334,"byte_end":9213370,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213375,"byte_end":9213401,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213406,"byte_end":9213423,"line_start":443,"line_end":443,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213428,"byte_end":9213500,"line_start":444,"line_end":444,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213505,"byte_end":9213534,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213539,"byte_end":9213556,"line_start":446,"line_end":446,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213561,"byte_end":9213588,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213593,"byte_end":9213634,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213639,"byte_end":9213656,"line_start":449,"line_end":449,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213661,"byte_end":9213674,"line_start":450,"line_end":450,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213679,"byte_end":9213688,"line_start":451,"line_end":451,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213693,"byte_end":9213696,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213701,"byte_end":9213737,"line_start":453,"line_end":453,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213742,"byte_end":9213756,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213761,"byte_end":9213766,"line_start":455,"line_end":455,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213771,"byte_end":9213778,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215176,"byte_end":9215191,"line_start":491,"line_end":491,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213905,"byte_end":9213934,"line_start":462,"line_end":462,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213939,"byte_end":9213942,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9213947,"byte_end":9214021,"line_start":464,"line_end":464,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214026,"byte_end":9214100,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214105,"byte_end":9214178,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214183,"byte_end":9214193,"line_start":467,"line_end":467,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214198,"byte_end":9214201,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214206,"byte_end":9214274,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214279,"byte_end":9214350,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214355,"byte_end":9214414,"line_start":471,"line_end":471,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214419,"byte_end":9214479,"line_start":472,"line_end":472,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214484,"byte_end":9214487,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214492,"byte_end":9214567,"line_start":474,"line_end":474,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214572,"byte_end":9214647,"line_start":475,"line_end":475,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214652,"byte_end":9214720,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214725,"byte_end":9214728,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214733,"byte_end":9214751,"line_start":478,"line_end":478,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214756,"byte_end":9214759,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214764,"byte_end":9214789,"line_start":480,"line_end":480,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214794,"byte_end":9214797,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214802,"byte_end":9214867,"line_start":482,"line_end":482,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214872,"byte_end":9214939,"line_start":483,"line_end":483,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9214944,"byte_end":9214999,"line_start":484,"line_end":484,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215004,"byte_end":9215007,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215012,"byte_end":9215024,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215029,"byte_end":9215032,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215037,"byte_end":9215112,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215117,"byte_end":9215120,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215125,"byte_end":9215164,"line_start":490,"line_end":490,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217527,"byte_end":9217535,"line_start":554,"line_end":554,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215324,"byte_end":9215400,"line_start":495,"line_end":495,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215405,"byte_end":9215430,"line_start":496,"line_end":496,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215435,"byte_end":9215438,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215443,"byte_end":9215519,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215524,"byte_end":9215592,"line_start":499,"line_end":499,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215597,"byte_end":9215671,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215676,"byte_end":9215731,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215736,"byte_end":9215739,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215744,"byte_end":9215814,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215819,"byte_end":9215822,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215827,"byte_end":9215868,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215873,"byte_end":9215908,"line_start":506,"line_end":506,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215913,"byte_end":9215916,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215921,"byte_end":9215933,"line_start":508,"line_end":508,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215938,"byte_end":9215941,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9215946,"byte_end":9216017,"line_start":510,"line_end":510,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216022,"byte_end":9216098,"line_start":511,"line_end":511,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216103,"byte_end":9216177,"line_start":512,"line_end":512,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216182,"byte_end":9216231,"line_start":513,"line_end":513,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216236,"byte_end":9216239,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216244,"byte_end":9216258,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216263,"byte_end":9216266,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216271,"byte_end":9216284,"line_start":517,"line_end":517,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216289,"byte_end":9216319,"line_start":518,"line_end":518,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216324,"byte_end":9216350,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216355,"byte_end":9216371,"line_start":520,"line_end":520,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216376,"byte_end":9216379,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216384,"byte_end":9216402,"line_start":522,"line_end":522,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216407,"byte_end":9216458,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216463,"byte_end":9216491,"line_start":524,"line_end":524,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216496,"byte_end":9216561,"line_start":525,"line_end":525,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216566,"byte_end":9216569,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216574,"byte_end":9216588,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216593,"byte_end":9216642,"line_start":528,"line_end":528,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216647,"byte_end":9216684,"line_start":529,"line_end":529,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216689,"byte_end":9216692,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216697,"byte_end":9216770,"line_start":531,"line_end":531,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216775,"byte_end":9216821,"line_start":532,"line_end":532,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216826,"byte_end":9216862,"line_start":533,"line_end":533,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216867,"byte_end":9216870,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216875,"byte_end":9216945,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9216950,"byte_end":9217008,"line_start":536,"line_end":536,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217013,"byte_end":9217058,"line_start":537,"line_end":537,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217063,"byte_end":9217094,"line_start":538,"line_end":538,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217099,"byte_end":9217125,"line_start":539,"line_end":539,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217130,"byte_end":9217179,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217184,"byte_end":9217201,"line_start":541,"line_end":541,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217206,"byte_end":9217278,"line_start":542,"line_end":542,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217283,"byte_end":9217312,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217317,"byte_end":9217334,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217339,"byte_end":9217366,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217371,"byte_end":9217412,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217417,"byte_end":9217434,"line_start":547,"line_end":547,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217439,"byte_end":9217452,"line_start":548,"line_end":548,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217457,"byte_end":9217466,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217471,"byte_end":9217474,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217479,"byte_end":9217493,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217498,"byte_end":9217503,"line_start":552,"line_end":552,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217508,"byte_end":9217515,"line_start":553,"line_end":553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4354},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218972,"byte_end":9218980,"line_start":601,"line_end":601,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217731,"byte_end":9217774,"line_start":562,"line_end":562,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217779,"byte_end":9217782,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217787,"byte_end":9217864,"line_start":564,"line_end":564,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217869,"byte_end":9217899,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217904,"byte_end":9217907,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217912,"byte_end":9217926,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217931,"byte_end":9217934,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217939,"byte_end":9217952,"line_start":569,"line_end":569,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217957,"byte_end":9217987,"line_start":570,"line_end":570,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9217992,"byte_end":9218018,"line_start":571,"line_end":571,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218023,"byte_end":9218039,"line_start":572,"line_end":572,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218044,"byte_end":9218047,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218052,"byte_end":9218070,"line_start":574,"line_end":574,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218075,"byte_end":9218126,"line_start":575,"line_end":575,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218131,"byte_end":9218159,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218164,"byte_end":9218229,"line_start":577,"line_end":577,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218234,"byte_end":9218237,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218242,"byte_end":9218256,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218261,"byte_end":9218310,"line_start":580,"line_end":580,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218315,"byte_end":9218352,"line_start":581,"line_end":581,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218357,"byte_end":9218360,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218365,"byte_end":9218436,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218441,"byte_end":9218499,"line_start":584,"line_end":584,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218504,"byte_end":9218556,"line_start":585,"line_end":585,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218561,"byte_end":9218587,"line_start":586,"line_end":586,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218592,"byte_end":9218618,"line_start":587,"line_end":587,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218623,"byte_end":9218640,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218645,"byte_end":9218717,"line_start":589,"line_end":589,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218722,"byte_end":9218751,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218756,"byte_end":9218773,"line_start":591,"line_end":591,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218778,"byte_end":9218805,"line_start":592,"line_end":592,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218810,"byte_end":9218851,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218856,"byte_end":9218873,"line_start":594,"line_end":594,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218878,"byte_end":9218891,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218896,"byte_end":9218905,"line_start":596,"line_end":596,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218910,"byte_end":9218913,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218918,"byte_end":9218932,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218937,"byte_end":9218942,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9218947,"byte_end":9218954,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220341,"byte_end":9220357,"line_start":635,"line_end":635,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219081,"byte_end":9219111,"line_start":606,"line_end":606,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219116,"byte_end":9219119,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219124,"byte_end":9219198,"line_start":608,"line_end":608,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219203,"byte_end":9219277,"line_start":609,"line_end":609,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219282,"byte_end":9219355,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219360,"byte_end":9219370,"line_start":611,"line_end":611,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219375,"byte_end":9219378,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219383,"byte_end":9219458,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219463,"byte_end":9219531,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219536,"byte_end":9219608,"line_start":615,"line_end":615,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219613,"byte_end":9219644,"line_start":616,"line_end":616,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219649,"byte_end":9219652,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219657,"byte_end":9219732,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219737,"byte_end":9219812,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219817,"byte_end":9219885,"line_start":620,"line_end":620,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219890,"byte_end":9219893,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219898,"byte_end":9219916,"line_start":622,"line_end":622,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219921,"byte_end":9219924,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219929,"byte_end":9219954,"line_start":624,"line_end":624,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219959,"byte_end":9219962,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9219967,"byte_end":9220032,"line_start":626,"line_end":626,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220037,"byte_end":9220104,"line_start":627,"line_end":627,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220109,"byte_end":9220164,"line_start":628,"line_end":628,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220169,"byte_end":9220172,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220177,"byte_end":9220189,"line_start":630,"line_end":630,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220194,"byte_end":9220197,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220202,"byte_end":9220277,"line_start":632,"line_end":632,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220282,"byte_end":9220285,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220290,"byte_end":9220329,"line_start":634,"line_end":634,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4359},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222086,"byte_end":9222095,"line_start":687,"line_end":687,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220491,"byte_end":9220561,"line_start":639,"line_end":639,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220566,"byte_end":9220578,"line_start":640,"line_end":640,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220583,"byte_end":9220586,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220591,"byte_end":9220663,"line_start":642,"line_end":642,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220668,"byte_end":9220711,"line_start":643,"line_end":643,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220716,"byte_end":9220719,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220724,"byte_end":9220778,"line_start":645,"line_end":645,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220783,"byte_end":9220786,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220791,"byte_end":9220803,"line_start":647,"line_end":647,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220808,"byte_end":9220811,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220816,"byte_end":9220890,"line_start":649,"line_end":649,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220895,"byte_end":9220965,"line_start":650,"line_end":650,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9220970,"byte_end":9221019,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221024,"byte_end":9221027,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221032,"byte_end":9221046,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221051,"byte_end":9221054,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221059,"byte_end":9221072,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221077,"byte_end":9221107,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221112,"byte_end":9221138,"line_start":657,"line_end":657,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221143,"byte_end":9221159,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221164,"byte_end":9221167,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221172,"byte_end":9221190,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221195,"byte_end":9221246,"line_start":661,"line_end":661,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221251,"byte_end":9221279,"line_start":662,"line_end":662,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221284,"byte_end":9221349,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221354,"byte_end":9221357,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221362,"byte_end":9221376,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221381,"byte_end":9221430,"line_start":666,"line_end":666,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221435,"byte_end":9221472,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221477,"byte_end":9221480,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221485,"byte_end":9221556,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221561,"byte_end":9221619,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221624,"byte_end":9221676,"line_start":671,"line_end":671,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221681,"byte_end":9221707,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221712,"byte_end":9221738,"line_start":673,"line_end":673,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221743,"byte_end":9221760,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221765,"byte_end":9221837,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221842,"byte_end":9221871,"line_start":676,"line_end":676,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221876,"byte_end":9221893,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221898,"byte_end":9221925,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221930,"byte_end":9221971,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221976,"byte_end":9221993,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9221998,"byte_end":9222011,"line_start":681,"line_end":681,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222016,"byte_end":9222025,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222030,"byte_end":9222033,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222038,"byte_end":9222052,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222057,"byte_end":9222062,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222067,"byte_end":9222074,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4364},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223546,"byte_end":9223550,"line_start":732,"line_end":732,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222289,"byte_end":9222359,"line_start":695,"line_end":695,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222364,"byte_end":9222433,"line_start":696,"line_end":696,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222438,"byte_end":9222477,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222482,"byte_end":9222485,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222490,"byte_end":9222564,"line_start":699,"line_end":699,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222569,"byte_end":9222629,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222634,"byte_end":9222637,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222642,"byte_end":9222656,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222661,"byte_end":9222664,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222669,"byte_end":9222682,"line_start":704,"line_end":704,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222687,"byte_end":9222717,"line_start":705,"line_end":705,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222722,"byte_end":9222754,"line_start":706,"line_end":706,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222759,"byte_end":9222785,"line_start":707,"line_end":707,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222790,"byte_end":9222793,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222798,"byte_end":9222816,"line_start":709,"line_end":709,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222821,"byte_end":9222872,"line_start":710,"line_end":710,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222877,"byte_end":9222905,"line_start":711,"line_end":711,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222910,"byte_end":9222979,"line_start":712,"line_end":712,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222984,"byte_end":9222987,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9222992,"byte_end":9223021,"line_start":714,"line_end":714,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223026,"byte_end":9223055,"line_start":715,"line_end":715,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223060,"byte_end":9223063,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223068,"byte_end":9223095,"line_start":717,"line_end":717,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223100,"byte_end":9223144,"line_start":718,"line_end":718,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223149,"byte_end":9223152,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223157,"byte_end":9223181,"line_start":720,"line_end":720,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223186,"byte_end":9223242,"line_start":721,"line_end":721,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223247,"byte_end":9223286,"line_start":722,"line_end":722,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223291,"byte_end":9223294,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223299,"byte_end":9223313,"line_start":724,"line_end":724,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223318,"byte_end":9223323,"line_start":725,"line_end":725,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223328,"byte_end":9223335,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223340,"byte_end":9223343,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223348,"byte_end":9223413,"line_start":728,"line_end":728,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223418,"byte_end":9223421,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223426,"byte_end":9223472,"line_start":730,"line_end":730,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9223477,"byte_end":9223528,"line_start":731,"line_end":731,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224645,"byte_end":9224652,"line_start":766,"line_end":766,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224113,"byte_end":9224175,"line_start":748,"line_end":748,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224180,"byte_end":9224183,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224188,"byte_end":9224252,"line_start":750,"line_end":750,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224257,"byte_end":9224260,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224265,"byte_end":9224308,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224313,"byte_end":9224316,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224321,"byte_end":9224335,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224340,"byte_end":9224343,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224348,"byte_end":9224361,"line_start":756,"line_end":756,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224366,"byte_end":9224396,"line_start":757,"line_end":757,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224401,"byte_end":9224404,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224409,"byte_end":9224473,"line_start":759,"line_end":759,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224478,"byte_end":9224539,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224544,"byte_end":9224547,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224552,"byte_end":9224592,"line_start":762,"line_end":762,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224597,"byte_end":9224609,"line_start":763,"line_end":763,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224614,"byte_end":9224621,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224626,"byte_end":9224633,"line_start":765,"line_end":765,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225449,"byte_end":9225460,"line_start":790,"line_end":790,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224719,"byte_end":9224781,"line_start":770,"line_end":770,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224786,"byte_end":9224789,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224794,"byte_end":9224863,"line_start":772,"line_end":772,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224868,"byte_end":9224941,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9224946,"byte_end":9225019,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225024,"byte_end":9225099,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225104,"byte_end":9225122,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225127,"byte_end":9225130,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225135,"byte_end":9225149,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225154,"byte_end":9225157,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225162,"byte_end":9225175,"line_start":780,"line_end":780,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225180,"byte_end":9225210,"line_start":781,"line_end":781,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225215,"byte_end":9225218,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225223,"byte_end":9225287,"line_start":783,"line_end":783,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225292,"byte_end":9225353,"line_start":784,"line_end":784,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225358,"byte_end":9225361,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225366,"byte_end":9225396,"line_start":786,"line_end":786,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225401,"byte_end":9225413,"line_start":787,"line_end":787,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225418,"byte_end":9225425,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225430,"byte_end":9225437,"line_start":789,"line_end":789,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226105,"byte_end":9226111,"line_start":813,"line_end":813,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225551,"byte_end":9225623,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225628,"byte_end":9225639,"line_start":795,"line_end":795,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225644,"byte_end":9225647,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225652,"byte_end":9225715,"line_start":797,"line_end":797,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225720,"byte_end":9225723,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225728,"byte_end":9225769,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225774,"byte_end":9225777,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225782,"byte_end":9225796,"line_start":801,"line_end":801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225801,"byte_end":9225804,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225809,"byte_end":9225822,"line_start":803,"line_end":803,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225827,"byte_end":9225857,"line_start":804,"line_end":804,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225862,"byte_end":9225865,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225870,"byte_end":9225934,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9225939,"byte_end":9226000,"line_start":807,"line_end":807,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226005,"byte_end":9226008,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226013,"byte_end":9226052,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226057,"byte_end":9226069,"line_start":810,"line_end":810,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226074,"byte_end":9226081,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226086,"byte_end":9226093,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227090,"byte_end":9227100,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226266,"byte_end":9226342,"line_start":819,"line_end":819,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226347,"byte_end":9226350,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226355,"byte_end":9226448,"line_start":821,"line_end":821,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226453,"byte_end":9226546,"line_start":822,"line_end":822,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226551,"byte_end":9226586,"line_start":823,"line_end":823,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226591,"byte_end":9226594,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226599,"byte_end":9226692,"line_start":825,"line_end":825,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226697,"byte_end":9226764,"line_start":826,"line_end":826,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226769,"byte_end":9226772,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226777,"byte_end":9226791,"line_start":828,"line_end":828,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226796,"byte_end":9226799,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226804,"byte_end":9226817,"line_start":830,"line_end":830,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226822,"byte_end":9226852,"line_start":831,"line_end":831,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226857,"byte_end":9226860,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226865,"byte_end":9226929,"line_start":833,"line_end":833,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9226934,"byte_end":9226995,"line_start":834,"line_end":834,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227000,"byte_end":9227003,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227008,"byte_end":9227037,"line_start":836,"line_end":836,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227042,"byte_end":9227054,"line_start":837,"line_end":837,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227059,"byte_end":9227066,"line_start":838,"line_end":838,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227071,"byte_end":9227078,"line_start":839,"line_end":839,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4374},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228074,"byte_end":9228077,"line_start":876,"line_end":876,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227562,"byte_end":9227620,"line_start":858,"line_end":858,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227625,"byte_end":9227628,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227633,"byte_end":9227693,"line_start":860,"line_end":860,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227698,"byte_end":9227701,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227706,"byte_end":9227741,"line_start":862,"line_end":862,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227746,"byte_end":9227749,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227754,"byte_end":9227768,"line_start":864,"line_end":864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227773,"byte_end":9227776,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227781,"byte_end":9227794,"line_start":866,"line_end":866,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227799,"byte_end":9227829,"line_start":867,"line_end":867,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227834,"byte_end":9227837,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227842,"byte_end":9227906,"line_start":869,"line_end":869,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227911,"byte_end":9227972,"line_start":870,"line_end":870,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227977,"byte_end":9227980,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9227985,"byte_end":9228021,"line_start":872,"line_end":872,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228026,"byte_end":9228038,"line_start":873,"line_end":873,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228043,"byte_end":9228050,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228055,"byte_end":9228062,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228634,"byte_end":9228641,"line_start":897,"line_end":897,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228139,"byte_end":9228197,"line_start":880,"line_end":880,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228202,"byte_end":9228205,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228210,"byte_end":9228286,"line_start":882,"line_end":882,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228291,"byte_end":9228312,"line_start":883,"line_end":883,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228317,"byte_end":9228320,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228325,"byte_end":9228339,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228344,"byte_end":9228347,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228352,"byte_end":9228365,"line_start":887,"line_end":887,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228370,"byte_end":9228400,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228405,"byte_end":9228408,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228413,"byte_end":9228477,"line_start":890,"line_end":890,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228482,"byte_end":9228543,"line_start":891,"line_end":891,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228548,"byte_end":9228551,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228556,"byte_end":9228581,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228586,"byte_end":9228598,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228603,"byte_end":9228610,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228615,"byte_end":9228622,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4376},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229233,"byte_end":9229238,"line_start":911,"line_end":911,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228856,"byte_end":9228892,"line_start":903,"line_end":903,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228897,"byte_end":9228974,"line_start":904,"line_end":904,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9228979,"byte_end":9229025,"line_start":905,"line_end":905,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229030,"byte_end":9229033,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229038,"byte_end":9229117,"line_start":907,"line_end":907,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229122,"byte_end":9229165,"line_start":908,"line_end":908,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229170,"byte_end":9229173,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229178,"byte_end":9229221,"line_start":910,"line_end":910,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4378},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229887,"byte_end":9229897,"line_start":926,"line_end":926,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229323,"byte_end":9229400,"line_start":915,"line_end":915,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229405,"byte_end":9229451,"line_start":916,"line_end":916,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229456,"byte_end":9229459,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229464,"byte_end":9229542,"line_start":918,"line_end":918,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229547,"byte_end":9229595,"line_start":919,"line_end":919,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229600,"byte_end":9229603,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229608,"byte_end":9229686,"line_start":921,"line_end":921,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229691,"byte_end":9229767,"line_start":922,"line_end":922,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229772,"byte_end":9229775,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229780,"byte_end":9229813,"line_start":924,"line_end":924,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9229818,"byte_end":9229875,"line_start":925,"line_end":925,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4610},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237018,"byte_end":9237027,"line_start":110,"line_end":110,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":4611}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21425,"byte_end":21448,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237564,"byte_end":9237568,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237106,"byte_end":9237178,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237183,"byte_end":9237207,"line_start":117,"line_end":117,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237212,"byte_end":9237215,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237220,"byte_end":9237233,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237238,"byte_end":9237241,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237246,"byte_end":9237259,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237264,"byte_end":9237294,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237299,"byte_end":9237315,"line_start":123,"line_end":123,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237320,"byte_end":9237323,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237328,"byte_end":9237346,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237351,"byte_end":9237390,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237395,"byte_end":9237453,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237458,"byte_end":9237479,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237484,"byte_end":9237505,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237510,"byte_end":9237524,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237529,"byte_end":9237534,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237539,"byte_end":9237546,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4472},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239807,"byte_end":9239815,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238401,"byte_end":9238475,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238480,"byte_end":9238483,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238488,"byte_end":9238558,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238563,"byte_end":9238639,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238644,"byte_end":9238715,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238720,"byte_end":9238742,"line_start":167,"line_end":167,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238747,"byte_end":9238750,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238755,"byte_end":9238827,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238832,"byte_end":9238907,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238912,"byte_end":9238965,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238970,"byte_end":9238973,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238978,"byte_end":9238990,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9238995,"byte_end":9238998,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239003,"byte_end":9239063,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239068,"byte_end":9239071,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239076,"byte_end":9239146,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239151,"byte_end":9239224,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239229,"byte_end":9239309,"line_start":179,"line_end":179,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239314,"byte_end":9239317,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239322,"byte_end":9239335,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239340,"byte_end":9239343,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239348,"byte_end":9239361,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239366,"byte_end":9239396,"line_start":184,"line_end":184,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239401,"byte_end":9239438,"line_start":185,"line_end":185,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239443,"byte_end":9239446,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239451,"byte_end":9239471,"line_start":187,"line_end":187,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239476,"byte_end":9239517,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239522,"byte_end":9239583,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239588,"byte_end":9239640,"line_start":190,"line_end":190,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239645,"byte_end":9239681,"line_start":191,"line_end":191,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239686,"byte_end":9239732,"line_start":192,"line_end":192,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239737,"byte_end":9239754,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239759,"byte_end":9239771,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239776,"byte_end":9239783,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239788,"byte_end":9239795,"line_start":196,"line_end":196,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240487,"byte_end":9240497,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9239961,"byte_end":9240020,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240025,"byte_end":9240028,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240033,"byte_end":9240046,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240051,"byte_end":9240054,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240059,"byte_end":9240072,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240077,"byte_end":9240107,"line_start":207,"line_end":207,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240112,"byte_end":9240149,"line_start":208,"line_end":208,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240154,"byte_end":9240157,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240162,"byte_end":9240182,"line_start":210,"line_end":210,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240187,"byte_end":9240228,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240233,"byte_end":9240294,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240299,"byte_end":9240343,"line_start":213,"line_end":213,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240348,"byte_end":9240389,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240394,"byte_end":9240434,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240439,"byte_end":9240451,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240456,"byte_end":9240463,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240468,"byte_end":9240475,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241417,"byte_end":9241424,"line_start":247,"line_end":247,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240573,"byte_end":9240647,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240652,"byte_end":9240725,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240730,"byte_end":9240741,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240746,"byte_end":9240749,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240754,"byte_end":9240767,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240772,"byte_end":9240775,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240780,"byte_end":9240793,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240798,"byte_end":9240828,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240833,"byte_end":9240870,"line_start":231,"line_end":231,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240875,"byte_end":9240878,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240883,"byte_end":9240903,"line_start":233,"line_end":233,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240908,"byte_end":9240949,"line_start":234,"line_end":234,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9240954,"byte_end":9241039,"line_start":235,"line_end":235,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241044,"byte_end":9241047,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241052,"byte_end":9241123,"line_start":237,"line_end":237,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241128,"byte_end":9241165,"line_start":238,"line_end":238,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241170,"byte_end":9241198,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241203,"byte_end":9241231,"line_start":240,"line_end":240,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241236,"byte_end":9241277,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241282,"byte_end":9241308,"line_start":242,"line_end":242,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241313,"byte_end":9241358,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241363,"byte_end":9241375,"line_start":244,"line_end":244,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241380,"byte_end":9241387,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241392,"byte_end":9241399,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4479},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244231,"byte_end":9244236,"line_start":325,"line_end":325,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241947,"byte_end":9241994,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9241999,"byte_end":9242002,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242007,"byte_end":9242080,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242085,"byte_end":9242159,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242164,"byte_end":9242202,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242207,"byte_end":9242210,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242215,"byte_end":9242286,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242291,"byte_end":9242354,"line_start":273,"line_end":273,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242359,"byte_end":9242391,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242396,"byte_end":9242399,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242404,"byte_end":9242418,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242423,"byte_end":9242426,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242431,"byte_end":9242500,"line_start":278,"line_end":278,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242505,"byte_end":9242527,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242532,"byte_end":9242535,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242540,"byte_end":9242553,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242558,"byte_end":9242594,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242599,"byte_end":9242629,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242634,"byte_end":9242637,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242642,"byte_end":9242660,"line_start":285,"line_end":285,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242665,"byte_end":9242704,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242709,"byte_end":9242771,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242776,"byte_end":9242824,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242829,"byte_end":9242832,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242837,"byte_end":9242851,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242856,"byte_end":9242941,"line_start":291,"line_end":291,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242946,"byte_end":9242949,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242954,"byte_end":9242990,"line_start":293,"line_end":293,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9242995,"byte_end":9243082,"line_start":294,"line_end":294,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243087,"byte_end":9243119,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243124,"byte_end":9243165,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243170,"byte_end":9243224,"line_start":297,"line_end":297,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243229,"byte_end":9243259,"line_start":298,"line_end":298,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243264,"byte_end":9243326,"line_start":299,"line_end":299,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243331,"byte_end":9243352,"line_start":300,"line_end":300,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243357,"byte_end":9243404,"line_start":301,"line_end":301,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243409,"byte_end":9243486,"line_start":302,"line_end":302,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243491,"byte_end":9243522,"line_start":303,"line_end":303,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243527,"byte_end":9243565,"line_start":304,"line_end":304,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243570,"byte_end":9243591,"line_start":305,"line_end":305,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243596,"byte_end":9243613,"line_start":306,"line_end":306,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243618,"byte_end":9243631,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243636,"byte_end":9243639,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243644,"byte_end":9243680,"line_start":309,"line_end":309,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243685,"byte_end":9243719,"line_start":310,"line_end":310,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243724,"byte_end":9243779,"line_start":311,"line_end":311,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243784,"byte_end":9243814,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243819,"byte_end":9243872,"line_start":313,"line_end":313,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243877,"byte_end":9243898,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243903,"byte_end":9243950,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9243955,"byte_end":9244032,"line_start":316,"line_end":316,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244037,"byte_end":9244068,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244073,"byte_end":9244111,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244116,"byte_end":9244137,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244142,"byte_end":9244159,"line_start":320,"line_end":320,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244164,"byte_end":9244177,"line_start":321,"line_end":321,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244182,"byte_end":9244191,"line_start":322,"line_end":322,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244196,"byte_end":9244201,"line_start":323,"line_end":323,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244206,"byte_end":9244213,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245838,"byte_end":9245846,"line_start":373,"line_end":373,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244393,"byte_end":9244436,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244441,"byte_end":9244444,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244449,"byte_end":9244518,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244523,"byte_end":9244579,"line_start":333,"line_end":333,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244584,"byte_end":9244587,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244592,"byte_end":9244666,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244671,"byte_end":9244736,"line_start":336,"line_end":336,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244741,"byte_end":9244773,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244778,"byte_end":9244781,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244786,"byte_end":9244800,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244805,"byte_end":9244808,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244813,"byte_end":9244826,"line_start":341,"line_end":341,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244831,"byte_end":9244861,"line_start":342,"line_end":342,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244866,"byte_end":9244882,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244887,"byte_end":9244890,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244895,"byte_end":9244913,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244918,"byte_end":9244957,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244962,"byte_end":9244984,"line_start":347,"line_end":347,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9244989,"byte_end":9245051,"line_start":348,"line_end":348,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245056,"byte_end":9245104,"line_start":349,"line_end":349,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245109,"byte_end":9245112,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245117,"byte_end":9245131,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245136,"byte_end":9245185,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245190,"byte_end":9245227,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245232,"byte_end":9245235,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245240,"byte_end":9245310,"line_start":355,"line_end":355,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245315,"byte_end":9245373,"line_start":356,"line_end":356,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245378,"byte_end":9245429,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245434,"byte_end":9245460,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245465,"byte_end":9245491,"line_start":359,"line_end":359,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245496,"byte_end":9245513,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245518,"byte_end":9245590,"line_start":361,"line_end":361,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245595,"byte_end":9245624,"line_start":362,"line_end":362,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245629,"byte_end":9245646,"line_start":363,"line_end":363,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245651,"byte_end":9245678,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245683,"byte_end":9245717,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245722,"byte_end":9245739,"line_start":366,"line_end":366,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245744,"byte_end":9245757,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245762,"byte_end":9245771,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245776,"byte_end":9245779,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245784,"byte_end":9245798,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245803,"byte_end":9245808,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245813,"byte_end":9245820,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246866,"byte_end":9246870,"line_start":409,"line_end":409,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9245947,"byte_end":9246016,"line_start":378,"line_end":378,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246021,"byte_end":9246038,"line_start":379,"line_end":379,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246043,"byte_end":9246046,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246051,"byte_end":9246123,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246128,"byte_end":9246185,"line_start":382,"line_end":382,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246190,"byte_end":9246193,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246198,"byte_end":9246235,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246240,"byte_end":9246243,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246248,"byte_end":9246260,"line_start":386,"line_end":386,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246265,"byte_end":9246268,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246273,"byte_end":9246341,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246346,"byte_end":9246380,"line_start":389,"line_end":389,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246385,"byte_end":9246388,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246393,"byte_end":9246407,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246412,"byte_end":9246415,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246420,"byte_end":9246433,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246438,"byte_end":9246456,"line_start":394,"line_end":394,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246461,"byte_end":9246491,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246496,"byte_end":9246499,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246504,"byte_end":9246522,"line_start":397,"line_end":397,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246527,"byte_end":9246566,"line_start":398,"line_end":398,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246571,"byte_end":9246593,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246598,"byte_end":9246660,"line_start":400,"line_end":400,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246665,"byte_end":9246713,"line_start":401,"line_end":401,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246718,"byte_end":9246721,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246726,"byte_end":9246751,"line_start":403,"line_end":403,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246756,"byte_end":9246799,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246804,"byte_end":9246807,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246812,"byte_end":9246826,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246831,"byte_end":9246836,"line_start":407,"line_end":407,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9246841,"byte_end":9246848,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247958,"byte_end":9247967,"line_start":439,"line_end":439,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247051,"byte_end":9247124,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247129,"byte_end":9247160,"line_start":417,"line_end":417,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247165,"byte_end":9247168,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247173,"byte_end":9247245,"line_start":419,"line_end":419,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247250,"byte_end":9247307,"line_start":420,"line_end":420,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247312,"byte_end":9247315,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247320,"byte_end":9247395,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247400,"byte_end":9247475,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247480,"byte_end":9247517,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247522,"byte_end":9247525,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247530,"byte_end":9247548,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247553,"byte_end":9247556,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247561,"byte_end":9247586,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247591,"byte_end":9247594,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247599,"byte_end":9247660,"line_start":430,"line_end":430,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247665,"byte_end":9247723,"line_start":431,"line_end":431,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247728,"byte_end":9247783,"line_start":432,"line_end":432,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247788,"byte_end":9247791,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247796,"byte_end":9247808,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247813,"byte_end":9247816,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247821,"byte_end":9247896,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247901,"byte_end":9247904,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9247909,"byte_end":9247946,"line_start":438,"line_end":438,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249711,"byte_end":9249719,"line_start":493,"line_end":493,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248146,"byte_end":9248217,"line_start":445,"line_end":445,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248222,"byte_end":9248236,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248241,"byte_end":9248244,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248249,"byte_end":9248320,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248325,"byte_end":9248389,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248394,"byte_end":9248397,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248402,"byte_end":9248415,"line_start":451,"line_end":451,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248420,"byte_end":9248423,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248428,"byte_end":9248500,"line_start":453,"line_end":453,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248505,"byte_end":9248555,"line_start":454,"line_end":454,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248560,"byte_end":9248605,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248610,"byte_end":9248613,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248618,"byte_end":9248632,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248637,"byte_end":9248640,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248645,"byte_end":9248658,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248663,"byte_end":9248693,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248698,"byte_end":9248714,"line_start":461,"line_end":461,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248719,"byte_end":9248722,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248727,"byte_end":9248745,"line_start":463,"line_end":463,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248750,"byte_end":9248789,"line_start":464,"line_end":464,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248794,"byte_end":9248822,"line_start":465,"line_end":465,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248827,"byte_end":9248889,"line_start":466,"line_end":466,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248894,"byte_end":9248897,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248902,"byte_end":9248930,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248935,"byte_end":9248983,"line_start":469,"line_end":469,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248988,"byte_end":9248991,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9248996,"byte_end":9249010,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249015,"byte_end":9249064,"line_start":472,"line_end":472,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249069,"byte_end":9249106,"line_start":473,"line_end":473,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249111,"byte_end":9249114,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249119,"byte_end":9249189,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249194,"byte_end":9249252,"line_start":476,"line_end":476,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249257,"byte_end":9249308,"line_start":477,"line_end":477,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249313,"byte_end":9249339,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249344,"byte_end":9249370,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249375,"byte_end":9249392,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249397,"byte_end":9249469,"line_start":481,"line_end":481,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249474,"byte_end":9249503,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249508,"byte_end":9249525,"line_start":483,"line_end":483,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249530,"byte_end":9249557,"line_start":484,"line_end":484,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249562,"byte_end":9249596,"line_start":485,"line_end":485,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249601,"byte_end":9249618,"line_start":486,"line_end":486,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249623,"byte_end":9249636,"line_start":487,"line_end":487,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249641,"byte_end":9249650,"line_start":488,"line_end":488,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249655,"byte_end":9249658,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249663,"byte_end":9249677,"line_start":490,"line_end":490,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249682,"byte_end":9249687,"line_start":491,"line_end":491,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249692,"byte_end":9249699,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4493},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251532,"byte_end":9251540,"line_start":547,"line_end":547,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249879,"byte_end":9249922,"line_start":499,"line_end":499,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249927,"byte_end":9249930,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9249935,"byte_end":9250012,"line_start":501,"line_end":501,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250017,"byte_end":9250046,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250051,"byte_end":9250054,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250059,"byte_end":9250133,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250138,"byte_end":9250203,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250208,"byte_end":9250240,"line_start":506,"line_end":506,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250245,"byte_end":9250248,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250253,"byte_end":9250267,"line_start":508,"line_end":508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250272,"byte_end":9250275,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250280,"byte_end":9250293,"line_start":510,"line_end":510,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250298,"byte_end":9250328,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250333,"byte_end":9250349,"line_start":512,"line_end":512,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250354,"byte_end":9250357,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250362,"byte_end":9250380,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250385,"byte_end":9250424,"line_start":515,"line_end":515,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250429,"byte_end":9250457,"line_start":516,"line_end":516,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250462,"byte_end":9250524,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250529,"byte_end":9250577,"line_start":518,"line_end":518,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250582,"byte_end":9250585,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250590,"byte_end":9250604,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250609,"byte_end":9250658,"line_start":521,"line_end":521,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250663,"byte_end":9250700,"line_start":522,"line_end":522,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250705,"byte_end":9250708,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250713,"byte_end":9250785,"line_start":524,"line_end":524,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250790,"byte_end":9250829,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250834,"byte_end":9250870,"line_start":526,"line_end":526,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250875,"byte_end":9250878,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250883,"byte_end":9250953,"line_start":528,"line_end":528,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9250958,"byte_end":9251016,"line_start":529,"line_end":529,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251021,"byte_end":9251066,"line_start":530,"line_end":530,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251071,"byte_end":9251097,"line_start":531,"line_end":531,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251102,"byte_end":9251154,"line_start":532,"line_end":532,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251159,"byte_end":9251185,"line_start":533,"line_end":533,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251190,"byte_end":9251207,"line_start":534,"line_end":534,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251212,"byte_end":9251284,"line_start":535,"line_end":535,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251289,"byte_end":9251318,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251323,"byte_end":9251340,"line_start":537,"line_end":537,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251345,"byte_end":9251372,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251377,"byte_end":9251411,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251416,"byte_end":9251433,"line_start":540,"line_end":540,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251438,"byte_end":9251451,"line_start":541,"line_end":541,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251456,"byte_end":9251465,"line_start":542,"line_end":542,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251470,"byte_end":9251473,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251478,"byte_end":9251492,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251497,"byte_end":9251502,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251507,"byte_end":9251514,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4496},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252753,"byte_end":9252757,"line_start":582,"line_end":582,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251641,"byte_end":9251717,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251722,"byte_end":9251797,"line_start":553,"line_end":553,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251802,"byte_end":9251805,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251810,"byte_end":9251883,"line_start":555,"line_end":555,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251888,"byte_end":9251962,"line_start":556,"line_end":556,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9251967,"byte_end":9252018,"line_start":557,"line_end":557,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252023,"byte_end":9252026,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252031,"byte_end":9252103,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252108,"byte_end":9252165,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252170,"byte_end":9252173,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252178,"byte_end":9252215,"line_start":562,"line_end":562,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252220,"byte_end":9252223,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252228,"byte_end":9252241,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252246,"byte_end":9252276,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252281,"byte_end":9252297,"line_start":566,"line_end":566,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252302,"byte_end":9252305,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252310,"byte_end":9252328,"line_start":568,"line_end":568,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252333,"byte_end":9252372,"line_start":569,"line_end":569,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252377,"byte_end":9252399,"line_start":570,"line_end":570,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252404,"byte_end":9252466,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252471,"byte_end":9252519,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252524,"byte_end":9252527,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252532,"byte_end":9252566,"line_start":574,"line_end":574,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252571,"byte_end":9252616,"line_start":575,"line_end":575,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252621,"byte_end":9252624,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252629,"byte_end":9252686,"line_start":577,"line_end":577,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252691,"byte_end":9252694,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252699,"byte_end":9252713,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252718,"byte_end":9252723,"line_start":580,"line_end":580,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252728,"byte_end":9252735,"line_start":581,"line_end":581,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253882,"byte_end":9253891,"line_start":612,"line_end":612,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9252942,"byte_end":9253021,"line_start":589,"line_end":589,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253026,"byte_end":9253065,"line_start":590,"line_end":590,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253070,"byte_end":9253073,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253078,"byte_end":9253162,"line_start":592,"line_end":592,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253167,"byte_end":9253223,"line_start":593,"line_end":593,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253228,"byte_end":9253231,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253236,"byte_end":9253320,"line_start":595,"line_end":595,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253325,"byte_end":9253407,"line_start":596,"line_end":596,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253412,"byte_end":9253433,"line_start":597,"line_end":597,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253438,"byte_end":9253441,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253446,"byte_end":9253464,"line_start":599,"line_end":599,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253469,"byte_end":9253472,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253477,"byte_end":9253502,"line_start":601,"line_end":601,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253507,"byte_end":9253510,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253515,"byte_end":9253571,"line_start":603,"line_end":603,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253576,"byte_end":9253647,"line_start":604,"line_end":604,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253652,"byte_end":9253707,"line_start":605,"line_end":605,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253712,"byte_end":9253715,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253720,"byte_end":9253732,"line_start":607,"line_end":607,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253737,"byte_end":9253740,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253745,"byte_end":9253820,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253825,"byte_end":9253828,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9253833,"byte_end":9253870,"line_start":611,"line_end":611,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4501},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256312,"byte_end":9256320,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254485,"byte_end":9254559,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254564,"byte_end":9254635,"line_start":631,"line_end":631,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254640,"byte_end":9254655,"line_start":632,"line_end":632,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254660,"byte_end":9254663,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254668,"byte_end":9254744,"line_start":634,"line_end":634,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254749,"byte_end":9254818,"line_start":635,"line_end":635,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254823,"byte_end":9254874,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254879,"byte_end":9254882,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254887,"byte_end":9254957,"line_start":638,"line_end":638,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9254962,"byte_end":9255026,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255031,"byte_end":9255034,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255039,"byte_end":9255053,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255058,"byte_end":9255061,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255066,"byte_end":9255079,"line_start":643,"line_end":643,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255084,"byte_end":9255114,"line_start":644,"line_end":644,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255119,"byte_end":9255135,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255140,"byte_end":9255143,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255148,"byte_end":9255166,"line_start":647,"line_end":647,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255171,"byte_end":9255210,"line_start":648,"line_end":648,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255215,"byte_end":9255243,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255248,"byte_end":9255310,"line_start":650,"line_end":650,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255315,"byte_end":9255363,"line_start":651,"line_end":651,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255368,"byte_end":9255371,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255376,"byte_end":9255390,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255395,"byte_end":9255444,"line_start":654,"line_end":654,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255449,"byte_end":9255486,"line_start":655,"line_end":655,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255491,"byte_end":9255494,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255499,"byte_end":9255571,"line_start":657,"line_end":657,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255576,"byte_end":9255615,"line_start":658,"line_end":658,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255620,"byte_end":9255656,"line_start":659,"line_end":659,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255661,"byte_end":9255664,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255669,"byte_end":9255739,"line_start":661,"line_end":661,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255744,"byte_end":9255802,"line_start":662,"line_end":662,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255807,"byte_end":9255852,"line_start":663,"line_end":663,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255857,"byte_end":9255883,"line_start":664,"line_end":664,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255888,"byte_end":9255940,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255945,"byte_end":9255971,"line_start":666,"line_end":666,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255976,"byte_end":9255993,"line_start":667,"line_end":667,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9255998,"byte_end":9256070,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256075,"byte_end":9256104,"line_start":669,"line_end":669,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256109,"byte_end":9256126,"line_start":670,"line_end":670,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256131,"byte_end":9256158,"line_start":671,"line_end":671,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256163,"byte_end":9256197,"line_start":672,"line_end":672,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256202,"byte_end":9256219,"line_start":673,"line_end":673,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256224,"byte_end":9256237,"line_start":674,"line_end":674,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256242,"byte_end":9256251,"line_start":675,"line_end":675,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256256,"byte_end":9256259,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256264,"byte_end":9256278,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256283,"byte_end":9256288,"line_start":678,"line_end":678,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256293,"byte_end":9256300,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4503},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257529,"byte_end":9257536,"line_start":716,"line_end":716,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256484,"byte_end":9256558,"line_start":686,"line_end":686,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256563,"byte_end":9256591,"line_start":687,"line_end":687,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256596,"byte_end":9256599,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256604,"byte_end":9256679,"line_start":689,"line_end":689,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256684,"byte_end":9256724,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256729,"byte_end":9256732,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256737,"byte_end":9256809,"line_start":692,"line_end":692,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256814,"byte_end":9256877,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256882,"byte_end":9256885,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256890,"byte_end":9256964,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9256969,"byte_end":9257020,"line_start":696,"line_end":696,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257025,"byte_end":9257028,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257033,"byte_end":9257081,"line_start":698,"line_end":698,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257086,"byte_end":9257089,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257094,"byte_end":9257107,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257112,"byte_end":9257115,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257120,"byte_end":9257133,"line_start":702,"line_end":702,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257138,"byte_end":9257168,"line_start":703,"line_end":703,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257173,"byte_end":9257189,"line_start":704,"line_end":704,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257194,"byte_end":9257197,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257202,"byte_end":9257220,"line_start":706,"line_end":706,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257225,"byte_end":9257264,"line_start":707,"line_end":707,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257269,"byte_end":9257331,"line_start":708,"line_end":708,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257336,"byte_end":9257410,"line_start":709,"line_end":709,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257415,"byte_end":9257418,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257423,"byte_end":9257462,"line_start":711,"line_end":711,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257467,"byte_end":9257470,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257475,"byte_end":9257489,"line_start":713,"line_end":713,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257494,"byte_end":9257499,"line_start":714,"line_end":714,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257504,"byte_end":9257511,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4507},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258587,"byte_end":9258599,"line_start":745,"line_end":745,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257930,"byte_end":9257989,"line_start":728,"line_end":728,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9257994,"byte_end":9257997,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258002,"byte_end":9258086,"line_start":730,"line_end":730,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258091,"byte_end":9258173,"line_start":731,"line_end":731,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258178,"byte_end":9258199,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258204,"byte_end":9258207,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258212,"byte_end":9258230,"line_start":734,"line_end":734,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258235,"byte_end":9258238,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258243,"byte_end":9258268,"line_start":736,"line_end":736,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258273,"byte_end":9258276,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258281,"byte_end":9258338,"line_start":738,"line_end":738,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258343,"byte_end":9258402,"line_start":739,"line_end":739,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258407,"byte_end":9258462,"line_start":740,"line_end":740,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258467,"byte_end":9258470,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258475,"byte_end":9258487,"line_start":742,"line_end":742,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258492,"byte_end":9258495,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258500,"byte_end":9258575,"line_start":744,"line_end":744,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4509},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260399,"byte_end":9260410,"line_start":803,"line_end":803,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258848,"byte_end":9258923,"line_start":756,"line_end":756,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258928,"byte_end":9258968,"line_start":757,"line_end":757,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258973,"byte_end":9258976,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9258981,"byte_end":9259035,"line_start":759,"line_end":759,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259040,"byte_end":9259043,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259048,"byte_end":9259061,"line_start":761,"line_end":761,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259066,"byte_end":9259069,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259074,"byte_end":9259126,"line_start":763,"line_end":763,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259131,"byte_end":9259134,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259139,"byte_end":9259203,"line_start":765,"line_end":765,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259208,"byte_end":9259282,"line_start":766,"line_end":766,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259287,"byte_end":9259355,"line_start":767,"line_end":767,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259360,"byte_end":9259363,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259368,"byte_end":9259429,"line_start":769,"line_end":769,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259434,"byte_end":9259437,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259442,"byte_end":9259455,"line_start":771,"line_end":771,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259460,"byte_end":9259463,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259468,"byte_end":9259481,"line_start":773,"line_end":773,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259486,"byte_end":9259516,"line_start":774,"line_end":774,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259521,"byte_end":9259547,"line_start":775,"line_end":775,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259552,"byte_end":9259568,"line_start":776,"line_end":776,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259573,"byte_end":9259576,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259581,"byte_end":9259599,"line_start":778,"line_end":778,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259604,"byte_end":9259655,"line_start":779,"line_end":779,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259660,"byte_end":9259722,"line_start":780,"line_end":780,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259727,"byte_end":9259730,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259735,"byte_end":9259779,"line_start":782,"line_end":782,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259784,"byte_end":9259787,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259792,"byte_end":9259806,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259811,"byte_end":9259848,"line_start":785,"line_end":785,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259853,"byte_end":9259856,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259861,"byte_end":9259925,"line_start":787,"line_end":787,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259930,"byte_end":9259959,"line_start":788,"line_end":788,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9259964,"byte_end":9260016,"line_start":789,"line_end":789,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260021,"byte_end":9260047,"line_start":790,"line_end":790,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260052,"byte_end":9260069,"line_start":791,"line_end":791,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260074,"byte_end":9260146,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260151,"byte_end":9260198,"line_start":793,"line_end":793,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260203,"byte_end":9260232,"line_start":794,"line_end":794,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260237,"byte_end":9260254,"line_start":795,"line_end":795,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260259,"byte_end":9260306,"line_start":796,"line_end":796,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260311,"byte_end":9260324,"line_start":797,"line_end":797,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260329,"byte_end":9260338,"line_start":798,"line_end":798,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260343,"byte_end":9260346,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260351,"byte_end":9260365,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260370,"byte_end":9260375,"line_start":801,"line_end":801,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260380,"byte_end":9260387,"line_start":802,"line_end":802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261682,"byte_end":9261691,"line_start":841,"line_end":841,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260834,"byte_end":9260907,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260912,"byte_end":9260956,"line_start":817,"line_end":817,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260961,"byte_end":9260964,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9260969,"byte_end":9261042,"line_start":819,"line_end":819,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261047,"byte_end":9261121,"line_start":820,"line_end":820,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261126,"byte_end":9261177,"line_start":821,"line_end":821,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261182,"byte_end":9261185,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261190,"byte_end":9261203,"line_start":823,"line_end":823,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261208,"byte_end":9261211,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261216,"byte_end":9261229,"line_start":825,"line_end":825,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261234,"byte_end":9261264,"line_start":826,"line_end":826,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261269,"byte_end":9261285,"line_start":827,"line_end":827,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261290,"byte_end":9261293,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261298,"byte_end":9261316,"line_start":829,"line_end":829,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261321,"byte_end":9261360,"line_start":830,"line_end":830,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261365,"byte_end":9261427,"line_start":831,"line_end":831,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261432,"byte_end":9261435,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261440,"byte_end":9261476,"line_start":833,"line_end":833,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261481,"byte_end":9261541,"line_start":834,"line_end":834,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261546,"byte_end":9261549,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261554,"byte_end":9261615,"line_start":836,"line_end":836,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261620,"byte_end":9261623,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261628,"byte_end":9261642,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261647,"byte_end":9261652,"line_start":839,"line_end":839,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261657,"byte_end":9261664,"line_start":840,"line_end":840,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262579,"byte_end":9262593,"line_start":865,"line_end":865,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261895,"byte_end":9261951,"line_start":848,"line_end":848,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261956,"byte_end":9261959,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9261964,"byte_end":9262048,"line_start":850,"line_end":850,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262053,"byte_end":9262135,"line_start":851,"line_end":851,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262140,"byte_end":9262161,"line_start":852,"line_end":852,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262166,"byte_end":9262169,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262174,"byte_end":9262192,"line_start":854,"line_end":854,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262197,"byte_end":9262200,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262205,"byte_end":9262230,"line_start":856,"line_end":856,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262235,"byte_end":9262238,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262243,"byte_end":9262299,"line_start":858,"line_end":858,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262304,"byte_end":9262394,"line_start":859,"line_end":859,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262399,"byte_end":9262454,"line_start":860,"line_end":860,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262459,"byte_end":9262462,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262467,"byte_end":9262479,"line_start":862,"line_end":862,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262484,"byte_end":9262487,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9262492,"byte_end":9262567,"line_start":864,"line_end":864,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4520},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265040,"byte_end":9265053,"line_start":936,"line_end":936,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263241,"byte_end":9263312,"line_start":887,"line_end":887,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263317,"byte_end":9263369,"line_start":888,"line_end":888,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263374,"byte_end":9263377,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263382,"byte_end":9263458,"line_start":890,"line_end":890,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263463,"byte_end":9263532,"line_start":891,"line_end":891,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263537,"byte_end":9263588,"line_start":892,"line_end":892,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263593,"byte_end":9263596,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263601,"byte_end":9263671,"line_start":894,"line_end":894,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263676,"byte_end":9263740,"line_start":895,"line_end":895,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263745,"byte_end":9263748,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263753,"byte_end":9263767,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263772,"byte_end":9263775,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263780,"byte_end":9263793,"line_start":899,"line_end":899,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263798,"byte_end":9263828,"line_start":900,"line_end":900,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263833,"byte_end":9263849,"line_start":901,"line_end":901,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263854,"byte_end":9263857,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263862,"byte_end":9263880,"line_start":903,"line_end":903,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263885,"byte_end":9263924,"line_start":904,"line_end":904,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263929,"byte_end":9263957,"line_start":905,"line_end":905,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9263962,"byte_end":9264024,"line_start":906,"line_end":906,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264029,"byte_end":9264077,"line_start":907,"line_end":907,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264082,"byte_end":9264085,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264090,"byte_end":9264104,"line_start":909,"line_end":909,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264109,"byte_end":9264158,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264163,"byte_end":9264200,"line_start":911,"line_end":911,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264205,"byte_end":9264208,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264213,"byte_end":9264285,"line_start":913,"line_end":913,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264290,"byte_end":9264329,"line_start":914,"line_end":914,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264334,"byte_end":9264370,"line_start":915,"line_end":915,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264375,"byte_end":9264378,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264383,"byte_end":9264453,"line_start":917,"line_end":917,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264458,"byte_end":9264516,"line_start":918,"line_end":918,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264521,"byte_end":9264571,"line_start":919,"line_end":919,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264576,"byte_end":9264611,"line_start":920,"line_end":920,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264616,"byte_end":9264668,"line_start":921,"line_end":921,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264673,"byte_end":9264699,"line_start":922,"line_end":922,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264704,"byte_end":9264721,"line_start":923,"line_end":923,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264726,"byte_end":9264798,"line_start":924,"line_end":924,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264803,"byte_end":9264832,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264837,"byte_end":9264854,"line_start":926,"line_end":926,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264859,"byte_end":9264886,"line_start":927,"line_end":927,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264891,"byte_end":9264925,"line_start":928,"line_end":928,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264930,"byte_end":9264947,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264952,"byte_end":9264965,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264970,"byte_end":9264979,"line_start":931,"line_end":931,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264984,"byte_end":9264987,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9264992,"byte_end":9265006,"line_start":933,"line_end":933,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265011,"byte_end":9265016,"line_start":934,"line_end":934,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265021,"byte_end":9265028,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4522},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266313,"byte_end":9266322,"line_start":972,"line_end":972,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265236,"byte_end":9265312,"line_start":942,"line_end":942,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265317,"byte_end":9265393,"line_start":943,"line_end":943,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265398,"byte_end":9265416,"line_start":944,"line_end":944,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265421,"byte_end":9265424,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265429,"byte_end":9265440,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265445,"byte_end":9265448,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265453,"byte_end":9265528,"line_start":948,"line_end":948,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265533,"byte_end":9265611,"line_start":949,"line_end":949,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265616,"byte_end":9265664,"line_start":950,"line_end":950,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265669,"byte_end":9265736,"line_start":951,"line_end":951,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265741,"byte_end":9265809,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265814,"byte_end":9265817,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265822,"byte_end":9265836,"line_start":954,"line_end":954,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265841,"byte_end":9265844,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265849,"byte_end":9265862,"line_start":956,"line_end":956,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265867,"byte_end":9265897,"line_start":957,"line_end":957,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265902,"byte_end":9265918,"line_start":958,"line_end":958,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265923,"byte_end":9265926,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265931,"byte_end":9265949,"line_start":960,"line_end":960,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265954,"byte_end":9265993,"line_start":961,"line_end":961,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9265998,"byte_end":9266060,"line_start":962,"line_end":962,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266065,"byte_end":9266068,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266073,"byte_end":9266109,"line_start":964,"line_end":964,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266114,"byte_end":9266174,"line_start":965,"line_end":965,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266179,"byte_end":9266182,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266187,"byte_end":9266246,"line_start":967,"line_end":967,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266251,"byte_end":9266254,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266259,"byte_end":9266273,"line_start":969,"line_end":969,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266278,"byte_end":9266283,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266288,"byte_end":9266295,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4526},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267671,"byte_end":9267685,"line_start":1005,"line_end":1005,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266526,"byte_end":9266602,"line_start":979,"line_end":979,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266607,"byte_end":9266656,"line_start":980,"line_end":980,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266661,"byte_end":9266664,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266669,"byte_end":9266680,"line_start":982,"line_end":982,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266685,"byte_end":9266688,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266693,"byte_end":9266777,"line_start":984,"line_end":984,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266782,"byte_end":9266864,"line_start":985,"line_end":985,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266869,"byte_end":9266889,"line_start":986,"line_end":986,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266894,"byte_end":9266897,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266902,"byte_end":9266977,"line_start":988,"line_end":988,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9266982,"byte_end":9267055,"line_start":989,"line_end":989,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267060,"byte_end":9267108,"line_start":990,"line_end":990,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267113,"byte_end":9267180,"line_start":991,"line_end":991,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267185,"byte_end":9267253,"line_start":992,"line_end":992,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267258,"byte_end":9267261,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267266,"byte_end":9267284,"line_start":994,"line_end":994,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267289,"byte_end":9267292,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267297,"byte_end":9267322,"line_start":996,"line_end":996,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267327,"byte_end":9267330,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267335,"byte_end":9267391,"line_start":998,"line_end":998,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267396,"byte_end":9267486,"line_start":999,"line_end":999,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267491,"byte_end":9267546,"line_start":1000,"line_end":1000,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267551,"byte_end":9267554,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267559,"byte_end":9267571,"line_start":1002,"line_end":1002,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267576,"byte_end":9267579,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9267584,"byte_end":9267659,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4527},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268550,"byte_end":9268559,"line_start":1032,"line_end":1032,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268333,"byte_end":9268397,"line_start":1027,"line_end":1027,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268402,"byte_end":9268405,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268410,"byte_end":9268476,"line_start":1029,"line_end":1029,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268481,"byte_end":9268484,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268489,"byte_end":9268538,"line_start":1031,"line_end":1031,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4528},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268805,"byte_end":9268818,"line_start":1040,"line_end":1040,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268628,"byte_end":9268692,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268697,"byte_end":9268700,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268705,"byte_end":9268776,"line_start":1038,"line_end":1038,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268781,"byte_end":9268793,"line_start":1039,"line_end":1039,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":4529},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269147,"byte_end":9269164,"line_start":1049,"line_end":1049,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268901,"byte_end":9268970,"line_start":1044,"line_end":1044,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268975,"byte_end":9268978,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9268983,"byte_end":9269057,"line_start":1046,"line_end":1046,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269062,"byte_end":9269065,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269070,"byte_end":9269135,"line_start":1048,"line_end":1048,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4530},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269494,"byte_end":9269515,"line_start":1060,"line_end":1060,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269241,"byte_end":9269310,"line_start":1053,"line_end":1053,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269315,"byte_end":9269318,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269323,"byte_end":9269397,"line_start":1055,"line_end":1055,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269402,"byte_end":9269405,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269410,"byte_end":9269420,"line_start":1057,"line_end":1057,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269425,"byte_end":9269428,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269433,"byte_end":9269482,"line_start":1059,"line_end":1059,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269848,"byte_end":9269864,"line_start":1069,"line_end":1069,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269606,"byte_end":9269674,"line_start":1064,"line_end":1064,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269679,"byte_end":9269682,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269687,"byte_end":9269760,"line_start":1066,"line_end":1066,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269765,"byte_end":9269768,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269773,"byte_end":9269836,"line_start":1068,"line_end":1068,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4532},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270333,"byte_end":9270353,"line_start":1082,"line_end":1082,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9269939,"byte_end":9270007,"line_start":1073,"line_end":1073,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270012,"byte_end":9270015,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270020,"byte_end":9270090,"line_start":1075,"line_end":1075,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270095,"byte_end":9270169,"line_start":1076,"line_end":1076,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270174,"byte_end":9270236,"line_start":1077,"line_end":1077,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270241,"byte_end":9270244,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270249,"byte_end":9270259,"line_start":1079,"line_end":1079,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270264,"byte_end":9270267,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270272,"byte_end":9270321,"line_start":1081,"line_end":1081,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270692,"byte_end":9270709,"line_start":1091,"line_end":1091,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270444,"byte_end":9270515,"line_start":1086,"line_end":1086,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270520,"byte_end":9270523,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270528,"byte_end":9270602,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270607,"byte_end":9270610,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270615,"byte_end":9270680,"line_start":1090,"line_end":1090,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4534},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271043,"byte_end":9271064,"line_start":1102,"line_end":1102,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270786,"byte_end":9270857,"line_start":1095,"line_end":1095,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270862,"byte_end":9270865,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270870,"byte_end":9270946,"line_start":1097,"line_end":1097,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270951,"byte_end":9270954,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270959,"byte_end":9270969,"line_start":1099,"line_end":1099,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270974,"byte_end":9270977,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9270982,"byte_end":9271031,"line_start":1101,"line_end":1101,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271661,"byte_end":9271664,"line_start":1125,"line_end":1125,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271155,"byte_end":9271213,"line_start":1106,"line_end":1106,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271218,"byte_end":9271221,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271226,"byte_end":9271286,"line_start":1108,"line_end":1108,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271291,"byte_end":9271294,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271299,"byte_end":9271336,"line_start":1110,"line_end":1110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271341,"byte_end":9271344,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271349,"byte_end":9271363,"line_start":1112,"line_end":1112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271368,"byte_end":9271371,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271376,"byte_end":9271389,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271394,"byte_end":9271424,"line_start":1115,"line_end":1115,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271429,"byte_end":9271447,"line_start":1116,"line_end":1116,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271452,"byte_end":9271455,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271460,"byte_end":9271500,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271505,"byte_end":9271561,"line_start":1119,"line_end":1119,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271566,"byte_end":9271569,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271574,"byte_end":9271608,"line_start":1121,"line_end":1121,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271613,"byte_end":9271625,"line_start":1122,"line_end":1122,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271630,"byte_end":9271637,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271642,"byte_end":9271649,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272212,"byte_end":9272219,"line_start":1147,"line_end":1147,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271726,"byte_end":9271784,"line_start":1129,"line_end":1129,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271789,"byte_end":9271792,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271797,"byte_end":9271873,"line_start":1131,"line_end":1131,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271878,"byte_end":9271899,"line_start":1132,"line_end":1132,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271904,"byte_end":9271907,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271912,"byte_end":9271926,"line_start":1134,"line_end":1134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271931,"byte_end":9271934,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271939,"byte_end":9271952,"line_start":1136,"line_end":1136,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271957,"byte_end":9271987,"line_start":1137,"line_end":1137,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9271992,"byte_end":9272010,"line_start":1138,"line_end":1138,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272015,"byte_end":9272018,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272023,"byte_end":9272063,"line_start":1140,"line_end":1140,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272068,"byte_end":9272124,"line_start":1141,"line_end":1141,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272129,"byte_end":9272151,"line_start":1142,"line_end":1142,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272156,"byte_end":9272159,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272164,"byte_end":9272176,"line_start":1144,"line_end":1144,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272181,"byte_end":9272188,"line_start":1145,"line_end":1145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272193,"byte_end":9272200,"line_start":1146,"line_end":1146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272727,"byte_end":9272744,"line_start":1158,"line_end":1158,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272297,"byte_end":9272355,"line_start":1151,"line_end":1151,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272360,"byte_end":9272363,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272368,"byte_end":9272442,"line_start":1153,"line_end":1153,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272447,"byte_end":9272520,"line_start":1154,"line_end":1154,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272525,"byte_end":9272597,"line_start":1155,"line_end":1155,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272602,"byte_end":9272672,"line_start":1156,"line_end":1156,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272677,"byte_end":9272715,"line_start":1157,"line_end":1157,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273199,"byte_end":9273216,"line_start":1167,"line_end":1167,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272883,"byte_end":9272943,"line_start":1162,"line_end":1162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272948,"byte_end":9272951,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9272956,"byte_end":9273030,"line_start":1164,"line_end":1164,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273035,"byte_end":9273108,"line_start":1165,"line_end":1165,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273113,"byte_end":9273187,"line_start":1166,"line_end":1166,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273573,"byte_end":9273591,"line_start":1176,"line_end":1176,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273349,"byte_end":9273408,"line_start":1171,"line_end":1171,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273413,"byte_end":9273416,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273421,"byte_end":9273491,"line_start":1173,"line_end":1173,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273496,"byte_end":9273499,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273504,"byte_end":9273561,"line_start":1175,"line_end":1175,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4540},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273957,"byte_end":9273975,"line_start":1185,"line_end":1185,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273731,"byte_end":9273792,"line_start":1180,"line_end":1180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273797,"byte_end":9273800,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273805,"byte_end":9273875,"line_start":1182,"line_end":1182,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273880,"byte_end":9273883,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9273888,"byte_end":9273945,"line_start":1184,"line_end":1184,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274612,"byte_end":9274622,"line_start":1208,"line_end":1208,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274109,"byte_end":9274156,"line_start":1189,"line_end":1189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274161,"byte_end":9274164,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274169,"byte_end":9274183,"line_start":1191,"line_end":1191,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274188,"byte_end":9274195,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274200,"byte_end":9274230,"line_start":1193,"line_end":1193,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274235,"byte_end":9274251,"line_start":1194,"line_end":1194,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274256,"byte_end":9274259,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274264,"byte_end":9274282,"line_start":1196,"line_end":1196,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274287,"byte_end":9274326,"line_start":1197,"line_end":1197,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274331,"byte_end":9274357,"line_start":1198,"line_end":1198,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274362,"byte_end":9274422,"line_start":1199,"line_end":1199,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274427,"byte_end":9274430,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274435,"byte_end":9274487,"line_start":1201,"line_end":1201,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274492,"byte_end":9274537,"line_start":1202,"line_end":1202,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274542,"byte_end":9274551,"line_start":1203,"line_end":1203,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274556,"byte_end":9274559,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274564,"byte_end":9274578,"line_start":1205,"line_end":1205,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274583,"byte_end":9274588,"line_start":1206,"line_end":1206,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274593,"byte_end":9274600,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4615},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":4616},{"krate":0,"index":4728},{"krate":0,"index":4790},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4837},{"krate":0,"index":4840},{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":4908},{"krate":0,"index":4911},{"krate":0,"index":4912},{"krate":0,"index":4914},{"krate":0,"index":4929},{"krate":0,"index":4930},{"krate":0,"index":4932},{"krate":0,"index":5080},{"krate":0,"index":5083},{"krate":0,"index":5137}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21623,"byte_end":21657,"line_start":179,"line_end":179,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275625,"byte_end":9275661,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":4616},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":4617}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/mod.rs","byte_start":9275986,"byte_end":9276010,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5149},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278613,"byte_end":9278625,"line_start":81,"line_end":81,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":5150}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21623,"byte_end":21657,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281040,"byte_end":9281045,"line_start":148,"line_end":148,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixDatagram>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278710,"byte_end":9278757,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278762,"byte_end":9278765,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278770,"byte_end":9278843,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278848,"byte_end":9278922,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278927,"byte_end":9278965,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278970,"byte_end":9278973,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278978,"byte_end":9279049,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279054,"byte_end":9279117,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279122,"byte_end":9279154,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279159,"byte_end":9279162,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279167,"byte_end":9279181,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279186,"byte_end":9279189,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279194,"byte_end":9279263,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279268,"byte_end":9279290,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279295,"byte_end":9279298,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279303,"byte_end":9279316,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279321,"byte_end":9279349,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279354,"byte_end":9279387,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279392,"byte_end":9279408,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279413,"byte_end":9279416,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279421,"byte_end":9279439,"line_start":107,"line_end":107,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279444,"byte_end":9279483,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279488,"byte_end":9279535,"line_start":109,"line_end":109,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279540,"byte_end":9279597,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279602,"byte_end":9279659,"line_start":111,"line_end":111,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279664,"byte_end":9279719,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279724,"byte_end":9279762,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279767,"byte_end":9279770,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279775,"byte_end":9279789,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279794,"byte_end":9279879,"line_start":116,"line_end":116,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279884,"byte_end":9279887,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279892,"byte_end":9279928,"line_start":118,"line_end":118,"column_start":5,"column_end":41}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279933,"byte_end":9279974,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9279979,"byte_end":9280033,"line_start":120,"line_end":120,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280038,"byte_end":9280068,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280073,"byte_end":9280135,"line_start":122,"line_end":122,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280140,"byte_end":9280161,"line_start":123,"line_end":123,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280166,"byte_end":9280213,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280218,"byte_end":9280295,"line_start":125,"line_end":125,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280300,"byte_end":9280331,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280336,"byte_end":9280374,"line_start":127,"line_end":127,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280379,"byte_end":9280400,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280405,"byte_end":9280422,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280427,"byte_end":9280440,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280445,"byte_end":9280448,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280453,"byte_end":9280489,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280494,"byte_end":9280528,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280533,"byte_end":9280588,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280593,"byte_end":9280623,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280628,"byte_end":9280681,"line_start":136,"line_end":136,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280686,"byte_end":9280707,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280712,"byte_end":9280759,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280764,"byte_end":9280841,"line_start":139,"line_end":139,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280846,"byte_end":9280877,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280882,"byte_end":9280920,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280925,"byte_end":9280946,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280951,"byte_end":9280968,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280973,"byte_end":9280986,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9280991,"byte_end":9281000,"line_start":145,"line_end":145,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281005,"byte_end":9281010,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281015,"byte_end":9281022,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282782,"byte_end":9282790,"line_start":198,"line_end":198,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixDatagram>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281202,"byte_end":9281245,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281250,"byte_end":9281253,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281258,"byte_end":9281327,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281332,"byte_end":9281388,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281393,"byte_end":9281396,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281401,"byte_end":9281475,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281480,"byte_end":9281545,"line_start":159,"line_end":159,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281550,"byte_end":9281582,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281587,"byte_end":9281590,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281595,"byte_end":9281609,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281614,"byte_end":9281617,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281622,"byte_end":9281635,"line_start":164,"line_end":164,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281640,"byte_end":9281673,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281678,"byte_end":9281694,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281699,"byte_end":9281702,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281707,"byte_end":9281725,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281730,"byte_end":9281769,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281774,"byte_end":9281821,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281826,"byte_end":9281883,"line_start":171,"line_end":171,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281888,"byte_end":9281945,"line_start":172,"line_end":172,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9281950,"byte_end":9282005,"line_start":173,"line_end":173,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282010,"byte_end":9282048,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282053,"byte_end":9282056,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282061,"byte_end":9282075,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282080,"byte_end":9282129,"line_start":177,"line_end":177,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282134,"byte_end":9282171,"line_start":178,"line_end":178,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282176,"byte_end":9282179,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282184,"byte_end":9282254,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282259,"byte_end":9282317,"line_start":181,"line_end":181,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282322,"byte_end":9282373,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282378,"byte_end":9282404,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282409,"byte_end":9282435,"line_start":184,"line_end":184,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282440,"byte_end":9282457,"line_start":185,"line_end":185,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282462,"byte_end":9282534,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282539,"byte_end":9282568,"line_start":187,"line_end":187,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282573,"byte_end":9282590,"line_start":188,"line_end":188,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282595,"byte_end":9282622,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282627,"byte_end":9282661,"line_start":190,"line_end":190,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282666,"byte_end":9282683,"line_start":191,"line_end":191,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282688,"byte_end":9282701,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282706,"byte_end":9282715,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282720,"byte_end":9282723,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282728,"byte_end":9282742,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282747,"byte_end":9282752,"line_start":196,"line_end":196,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282757,"byte_end":9282764,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284706,"byte_end":9284714,"line_start":254,"line_end":254,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixDatagram>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282891,"byte_end":9282934,"line_start":203,"line_end":203,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282939,"byte_end":9282942,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9282947,"byte_end":9283024,"line_start":205,"line_end":205,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283029,"byte_end":9283058,"line_start":206,"line_end":206,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283063,"byte_end":9283066,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283071,"byte_end":9283145,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283150,"byte_end":9283215,"line_start":209,"line_end":209,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283220,"byte_end":9283252,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283257,"byte_end":9283260,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283265,"byte_end":9283279,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283284,"byte_end":9283287,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283292,"byte_end":9283305,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283310,"byte_end":9283343,"line_start":215,"line_end":215,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283348,"byte_end":9283364,"line_start":216,"line_end":216,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283369,"byte_end":9283372,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283377,"byte_end":9283395,"line_start":218,"line_end":218,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283400,"byte_end":9283439,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283444,"byte_end":9283472,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283477,"byte_end":9283524,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283529,"byte_end":9283586,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283591,"byte_end":9283648,"line_start":223,"line_end":223,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283653,"byte_end":9283708,"line_start":224,"line_end":224,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283713,"byte_end":9283751,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283756,"byte_end":9283759,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283764,"byte_end":9283778,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283783,"byte_end":9283832,"line_start":228,"line_end":228,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283837,"byte_end":9283874,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283879,"byte_end":9283882,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283887,"byte_end":9283959,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9283964,"byte_end":9284003,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284008,"byte_end":9284044,"line_start":233,"line_end":233,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284049,"byte_end":9284052,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284057,"byte_end":9284127,"line_start":235,"line_end":235,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284132,"byte_end":9284190,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284195,"byte_end":9284240,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284245,"byte_end":9284271,"line_start":238,"line_end":238,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284276,"byte_end":9284328,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284333,"byte_end":9284359,"line_start":240,"line_end":240,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284364,"byte_end":9284381,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284386,"byte_end":9284458,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284463,"byte_end":9284492,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284497,"byte_end":9284514,"line_start":244,"line_end":244,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284519,"byte_end":9284546,"line_start":245,"line_end":245,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284551,"byte_end":9284585,"line_start":246,"line_end":246,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284590,"byte_end":9284607,"line_start":247,"line_end":247,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284612,"byte_end":9284625,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284630,"byte_end":9284639,"line_start":249,"line_end":249,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284644,"byte_end":9284647,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284652,"byte_end":9284666,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284671,"byte_end":9284676,"line_start":252,"line_end":252,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284681,"byte_end":9284688,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4676},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285487,"byte_end":9285491,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284815,"byte_end":9284876,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284881,"byte_end":9284884,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284889,"byte_end":9284903,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284908,"byte_end":9284915,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284920,"byte_end":9284948,"line_start":263,"line_end":263,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284953,"byte_end":9284973,"line_start":264,"line_end":264,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9284978,"byte_end":9285031,"line_start":265,"line_end":265,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285036,"byte_end":9285069,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285074,"byte_end":9285100,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285105,"byte_end":9285108,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285113,"byte_end":9285167,"line_start":269,"line_end":269,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285172,"byte_end":9285231,"line_start":270,"line_end":270,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285236,"byte_end":9285261,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285266,"byte_end":9285269,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285274,"byte_end":9285317,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285322,"byte_end":9285370,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285375,"byte_end":9285426,"line_start":275,"line_end":275,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285431,"byte_end":9285434,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285439,"byte_end":9285451,"line_start":277,"line_end":277,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285456,"byte_end":9285463,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285468,"byte_end":9285475,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286561,"byte_end":9286565,"line_start":317,"line_end":317,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285675,"byte_end":9285724,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285729,"byte_end":9285732,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285737,"byte_end":9285808,"line_start":290,"line_end":290,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285813,"byte_end":9285866,"line_start":291,"line_end":291,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285871,"byte_end":9285874,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285879,"byte_end":9285893,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285898,"byte_end":9285905,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285910,"byte_end":9285938,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285943,"byte_end":9285963,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9285968,"byte_end":9286021,"line_start":297,"line_end":297,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286026,"byte_end":9286059,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286064,"byte_end":9286067,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286072,"byte_end":9286105,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286110,"byte_end":9286157,"line_start":301,"line_end":301,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286162,"byte_end":9286165,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286170,"byte_end":9286227,"line_start":303,"line_end":303,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286232,"byte_end":9286260,"line_start":304,"line_end":304,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hail eris\";","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286265,"byte_end":9286294,"line_start":305,"line_end":305,"column_start":5,"column_end":34}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286299,"byte_end":9286328,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286333,"byte_end":9286336,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286341,"byte_end":9286374,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286379,"byte_end":9286423,"line_start":309,"line_end":309,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286428,"byte_end":9286431,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286436,"byte_end":9286466,"line_start":311,"line_end":311,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286471,"byte_end":9286500,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286505,"byte_end":9286508,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286513,"byte_end":9286525,"line_start":314,"line_end":314,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286530,"byte_end":9286537,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286542,"byte_end":9286549,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4679},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288229,"byte_end":9288237,"line_start":361,"line_end":361,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286777,"byte_end":9286850,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286855,"byte_end":9286858,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixDatagram from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286863,"byte_end":9286935,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9286940,"byte_end":9287008,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying datagram; it is left up to the user to set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287013,"byte_end":9287088,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287093,"byte_end":9287121,"line_start":330,"line_end":330,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287126,"byte_end":9287129,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287134,"byte_end":9287146,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287151,"byte_end":9287154,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287159,"byte_end":9287219,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287224,"byte_end":9287227,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287232,"byte_end":9287302,"line_start":336,"line_end":336,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a Tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287307,"byte_end":9287380,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287385,"byte_end":9287465,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287470,"byte_end":9287484,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287489,"byte_end":9287496,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287501,"byte_end":9287529,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287534,"byte_end":9287554,"line_start":342,"line_end":342,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287559,"byte_end":9287612,"line_start":343,"line_end":343,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287617,"byte_end":9287650,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/ use std::os::unix::net::UnixDatagram as StdUDS;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287655,"byte_end":9287706,"line_start":345,"line_end":345,"column_start":5,"column_end":56}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287711,"byte_end":9287737,"line_start":346,"line_end":346,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287742,"byte_end":9287745,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287750,"byte_end":9287804,"line_start":348,"line_end":348,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287809,"byte_end":9287868,"line_start":349,"line_end":349,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287873,"byte_end":9287898,"line_start":350,"line_end":350,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287903,"byte_end":9287906,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287911,"byte_end":9287954,"line_start":352,"line_end":352,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9287959,"byte_end":9288007,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/ let std_socket = StdUDS::bind(&socket_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288012,"byte_end":9288061,"line_start":354,"line_end":354,"column_start":5,"column_end":54}},{"value":"/ std_socket.set_nonblocking(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288066,"byte_end":9288104,"line_start":355,"line_end":355,"column_start":5,"column_end":43}},{"value":"/ let tokio_socket = UnixDatagram::from_std(std_socket)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288109,"byte_end":9288168,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288173,"byte_end":9288176,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288181,"byte_end":9288193,"line_start":358,"line_end":358,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288198,"byte_end":9288205,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288210,"byte_end":9288217,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289518,"byte_end":9289525,"line_start":403,"line_end":403,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288605,"byte_end":9288672,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288677,"byte_end":9288680,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288685,"byte_end":9288699,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288704,"byte_end":9288711,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288716,"byte_end":9288744,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288749,"byte_end":9288769,"line_start":377,"line_end":377,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288774,"byte_end":9288827,"line_start":378,"line_end":378,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288832,"byte_end":9288865,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288870,"byte_end":9288896,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288901,"byte_end":9288904,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288909,"byte_end":9288940,"line_start":382,"line_end":382,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288945,"byte_end":9288983,"line_start":383,"line_end":383,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288988,"byte_end":9288991,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9288996,"byte_end":9289031,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289036,"byte_end":9289061,"line_start":386,"line_end":386,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289066,"byte_end":9289106,"line_start":387,"line_end":387,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289111,"byte_end":9289154,"line_start":388,"line_end":388,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289159,"byte_end":9289162,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289167,"byte_end":9289198,"line_start":390,"line_end":390,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289203,"byte_end":9289234,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289239,"byte_end":9289278,"line_start":392,"line_end":392,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289283,"byte_end":9289286,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289291,"byte_end":9289323,"line_start":394,"line_end":394,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289328,"byte_end":9289381,"line_start":395,"line_end":395,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289386,"byte_end":9289389,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289394,"byte_end":9289423,"line_start":397,"line_end":397,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289428,"byte_end":9289457,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289462,"byte_end":9289465,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289470,"byte_end":9289482,"line_start":400,"line_end":400,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289487,"byte_end":9289494,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289499,"byte_end":9289506,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290778,"byte_end":9290785,"line_start":445,"line_end":445,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289660,"byte_end":9289709,"line_start":408,"line_end":408,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289714,"byte_end":9289717,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289722,"byte_end":9289794,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289799,"byte_end":9289867,"line_start":411,"line_end":411,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289872,"byte_end":9289875,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289880,"byte_end":9289894,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289899,"byte_end":9289906,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289911,"byte_end":9289939,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289944,"byte_end":9289964,"line_start":416,"line_end":416,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9289969,"byte_end":9290022,"line_start":417,"line_end":417,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290027,"byte_end":9290060,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290065,"byte_end":9290091,"line_start":419,"line_end":419,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290096,"byte_end":9290099,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290104,"byte_end":9290135,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290140,"byte_end":9290178,"line_start":422,"line_end":422,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290183,"byte_end":9290186,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290191,"byte_end":9290226,"line_start":424,"line_end":424,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290231,"byte_end":9290256,"line_start":425,"line_end":425,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290261,"byte_end":9290301,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290306,"byte_end":9290349,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290354,"byte_end":9290357,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290362,"byte_end":9290396,"line_start":429,"line_end":429,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290401,"byte_end":9290427,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290432,"byte_end":9290435,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290440,"byte_end":9290471,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290476,"byte_end":9290507,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ tx.send(bytes).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290512,"byte_end":9290538,"line_start":434,"line_end":434,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290543,"byte_end":9290546,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290551,"byte_end":9290583,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290588,"byte_end":9290641,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290646,"byte_end":9290649,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290654,"byte_end":9290683,"line_start":439,"line_end":439,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290688,"byte_end":9290717,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290722,"byte_end":9290725,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290730,"byte_end":9290742,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290747,"byte_end":9290754,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290759,"byte_end":9290766,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4684},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291632,"byte_end":9291636,"line_start":475,"line_end":475,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290879,"byte_end":9290929,"line_start":449,"line_end":449,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290934,"byte_end":9290937,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290942,"byte_end":9290956,"line_start":451,"line_end":451,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290961,"byte_end":9290968,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9290973,"byte_end":9291001,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291006,"byte_end":9291026,"line_start":454,"line_end":454,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291031,"byte_end":9291084,"line_start":455,"line_end":455,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291089,"byte_end":9291122,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291127,"byte_end":9291130,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291135,"byte_end":9291168,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291173,"byte_end":9291220,"line_start":459,"line_end":459,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291225,"byte_end":9291228,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291233,"byte_end":9291290,"line_start":461,"line_end":461,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291295,"byte_end":9291323,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291328,"byte_end":9291359,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291364,"byte_end":9291393,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291398,"byte_end":9291401,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291406,"byte_end":9291439,"line_start":466,"line_end":466,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291444,"byte_end":9291488,"line_start":467,"line_end":467,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291493,"byte_end":9291496,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291501,"byte_end":9291531,"line_start":469,"line_end":469,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291536,"byte_end":9291565,"line_start":470,"line_end":470,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291570,"byte_end":9291573,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291578,"byte_end":9291590,"line_start":472,"line_end":472,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291595,"byte_end":9291602,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291607,"byte_end":9291614,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293066,"byte_end":9293074,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291817,"byte_end":9291872,"line_start":482,"line_end":482,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291877,"byte_end":9291880,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291885,"byte_end":9291899,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291904,"byte_end":9291907,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291912,"byte_end":9291925,"line_start":486,"line_end":486,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291930,"byte_end":9291963,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291968,"byte_end":9291984,"line_start":488,"line_end":488,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291989,"byte_end":9291992,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9291997,"byte_end":9292015,"line_start":490,"line_end":490,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292020,"byte_end":9292059,"line_start":491,"line_end":491,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292064,"byte_end":9292111,"line_start":492,"line_end":492,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292116,"byte_end":9292173,"line_start":493,"line_end":493,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292178,"byte_end":9292235,"line_start":494,"line_end":494,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292240,"byte_end":9292295,"line_start":495,"line_end":495,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292300,"byte_end":9292338,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292343,"byte_end":9292346,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292351,"byte_end":9292365,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292370,"byte_end":9292419,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292424,"byte_end":9292461,"line_start":500,"line_end":500,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292466,"byte_end":9292469,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292474,"byte_end":9292544,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292549,"byte_end":9292607,"line_start":503,"line_end":503,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292612,"byte_end":9292663,"line_start":504,"line_end":504,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292668,"byte_end":9292694,"line_start":505,"line_end":505,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292699,"byte_end":9292725,"line_start":506,"line_end":506,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292730,"byte_end":9292747,"line_start":507,"line_end":507,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292752,"byte_end":9292824,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292829,"byte_end":9292858,"line_start":509,"line_end":509,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292863,"byte_end":9292880,"line_start":510,"line_end":510,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292885,"byte_end":9292912,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292917,"byte_end":9292951,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292956,"byte_end":9292973,"line_start":513,"line_end":513,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292978,"byte_end":9292991,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9292996,"byte_end":9293005,"line_start":515,"line_end":515,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293010,"byte_end":9293013,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293018,"byte_end":9293032,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293037,"byte_end":9293042,"line_start":518,"line_end":518,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293047,"byte_end":9293054,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294457,"byte_end":9294468,"line_start":563,"line_end":563,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293234,"byte_end":9293289,"line_start":526,"line_end":526,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293294,"byte_end":9293297,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293302,"byte_end":9293316,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293321,"byte_end":9293324,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293329,"byte_end":9293342,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293347,"byte_end":9293380,"line_start":531,"line_end":531,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293385,"byte_end":9293401,"line_start":532,"line_end":532,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293406,"byte_end":9293409,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293414,"byte_end":9293432,"line_start":534,"line_end":534,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293437,"byte_end":9293476,"line_start":535,"line_end":535,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293481,"byte_end":9293528,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293533,"byte_end":9293590,"line_start":537,"line_end":537,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293595,"byte_end":9293652,"line_start":538,"line_end":538,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293657,"byte_end":9293712,"line_start":539,"line_end":539,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293717,"byte_end":9293720,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293725,"byte_end":9293739,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293744,"byte_end":9293793,"line_start":542,"line_end":542,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293798,"byte_end":9293835,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293840,"byte_end":9293843,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293848,"byte_end":9293918,"line_start":545,"line_end":545,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293923,"byte_end":9293981,"line_start":546,"line_end":546,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send_to(b\"hello world\", &server_path) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9293986,"byte_end":9294054,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294059,"byte_end":9294085,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294090,"byte_end":9294116,"line_start":549,"line_end":549,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294121,"byte_end":9294138,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294143,"byte_end":9294215,"line_start":551,"line_end":551,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294220,"byte_end":9294249,"line_start":552,"line_end":552,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294254,"byte_end":9294271,"line_start":553,"line_end":553,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294276,"byte_end":9294303,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294308,"byte_end":9294342,"line_start":555,"line_end":555,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294347,"byte_end":9294364,"line_start":556,"line_end":556,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294369,"byte_end":9294382,"line_start":557,"line_end":557,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294387,"byte_end":9294396,"line_start":558,"line_end":558,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294401,"byte_end":9294404,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294409,"byte_end":9294423,"line_start":560,"line_end":560,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294428,"byte_end":9294433,"line_start":561,"line_end":561,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294438,"byte_end":9294445,"line_start":562,"line_end":562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4693},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295428,"byte_end":9295432,"line_start":598,"line_end":598,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294691,"byte_end":9294725,"line_start":572,"line_end":572,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294730,"byte_end":9294733,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294738,"byte_end":9294752,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294757,"byte_end":9294764,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294769,"byte_end":9294797,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294802,"byte_end":9294822,"line_start":577,"line_end":577,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294827,"byte_end":9294880,"line_start":578,"line_end":578,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294885,"byte_end":9294918,"line_start":579,"line_end":579,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294923,"byte_end":9294926,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294931,"byte_end":9294964,"line_start":581,"line_end":581,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9294969,"byte_end":9295016,"line_start":582,"line_end":582,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295021,"byte_end":9295024,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295029,"byte_end":9295086,"line_start":584,"line_end":584,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295091,"byte_end":9295119,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295124,"byte_end":9295155,"line_start":586,"line_end":586,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295160,"byte_end":9295189,"line_start":587,"line_end":587,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295194,"byte_end":9295197,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295202,"byte_end":9295235,"line_start":589,"line_end":589,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295240,"byte_end":9295284,"line_start":590,"line_end":590,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295289,"byte_end":9295292,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295297,"byte_end":9295327,"line_start":592,"line_end":592,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295332,"byte_end":9295361,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295366,"byte_end":9295369,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295374,"byte_end":9295386,"line_start":595,"line_end":595,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295391,"byte_end":9295398,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295403,"byte_end":9295410,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4697},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297125,"byte_end":9297133,"line_start":649,"line_end":649,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295617,"byte_end":9295677,"line_start":605,"line_end":605,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295682,"byte_end":9295685,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295690,"byte_end":9295704,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295709,"byte_end":9295712,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295717,"byte_end":9295730,"line_start":609,"line_end":609,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295735,"byte_end":9295768,"line_start":610,"line_end":610,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295773,"byte_end":9295789,"line_start":611,"line_end":611,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295794,"byte_end":9295797,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295802,"byte_end":9295820,"line_start":613,"line_end":613,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295825,"byte_end":9295864,"line_start":614,"line_end":614,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295869,"byte_end":9295897,"line_start":615,"line_end":615,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295902,"byte_end":9295949,"line_start":616,"line_end":616,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9295954,"byte_end":9296011,"line_start":617,"line_end":617,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296016,"byte_end":9296073,"line_start":618,"line_end":618,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296078,"byte_end":9296133,"line_start":619,"line_end":619,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296138,"byte_end":9296176,"line_start":620,"line_end":620,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296181,"byte_end":9296184,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296189,"byte_end":9296203,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296208,"byte_end":9296257,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296262,"byte_end":9296299,"line_start":624,"line_end":624,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296304,"byte_end":9296307,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296312,"byte_end":9296384,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296389,"byte_end":9296428,"line_start":627,"line_end":627,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296433,"byte_end":9296469,"line_start":628,"line_end":628,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296474,"byte_end":9296477,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296482,"byte_end":9296552,"line_start":630,"line_end":630,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296557,"byte_end":9296615,"line_start":631,"line_end":631,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296620,"byte_end":9296665,"line_start":632,"line_end":632,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296670,"byte_end":9296696,"line_start":633,"line_end":633,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296701,"byte_end":9296753,"line_start":634,"line_end":634,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296758,"byte_end":9296784,"line_start":635,"line_end":635,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296789,"byte_end":9296806,"line_start":636,"line_end":636,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296811,"byte_end":9296883,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296888,"byte_end":9296917,"line_start":638,"line_end":638,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296922,"byte_end":9296939,"line_start":639,"line_end":639,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296944,"byte_end":9296971,"line_start":640,"line_end":640,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9296976,"byte_end":9297010,"line_start":641,"line_end":641,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297015,"byte_end":9297032,"line_start":642,"line_end":642,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297037,"byte_end":9297050,"line_start":643,"line_end":643,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297055,"byte_end":9297064,"line_start":644,"line_end":644,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297069,"byte_end":9297072,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297077,"byte_end":9297091,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297096,"byte_end":9297101,"line_start":647,"line_end":647,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297106,"byte_end":9297113,"line_start":648,"line_end":648,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298372,"byte_end":9298379,"line_start":688,"line_end":688,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ Self, &'_ [u8], P) -> /*impl Trait*/ where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297297,"byte_end":9297351,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297356,"byte_end":9297359,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297364,"byte_end":9297378,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297383,"byte_end":9297390,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297395,"byte_end":9297423,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297428,"byte_end":9297448,"line_start":660,"line_end":660,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297453,"byte_end":9297506,"line_start":661,"line_end":661,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297511,"byte_end":9297544,"line_start":662,"line_end":662,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297549,"byte_end":9297575,"line_start":663,"line_end":663,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297580,"byte_end":9297583,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297588,"byte_end":9297642,"line_start":665,"line_end":665,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297647,"byte_end":9297706,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297711,"byte_end":9297736,"line_start":667,"line_end":667,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297741,"byte_end":9297744,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297749,"byte_end":9297793,"line_start":669,"line_end":669,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297798,"byte_end":9297838,"line_start":670,"line_end":670,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297843,"byte_end":9297886,"line_start":671,"line_end":671,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297891,"byte_end":9297931,"line_start":672,"line_end":672,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297936,"byte_end":9297979,"line_start":673,"line_end":673,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297984,"byte_end":9297987,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9297992,"byte_end":9298023,"line_start":675,"line_end":675,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298028,"byte_end":9298067,"line_start":676,"line_end":676,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298072,"byte_end":9298075,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298080,"byte_end":9298112,"line_start":678,"line_end":678,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298117,"byte_end":9298170,"line_start":679,"line_end":679,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298175,"byte_end":9298178,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298183,"byte_end":9298212,"line_start":681,"line_end":681,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298217,"byte_end":9298246,"line_start":682,"line_end":682,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298251,"byte_end":9298305,"line_start":683,"line_end":683,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298310,"byte_end":9298313,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298318,"byte_end":9298330,"line_start":685,"line_end":685,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298335,"byte_end":9298342,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298347,"byte_end":9298354,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4704},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299687,"byte_end":9299696,"line_start":731,"line_end":731,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298632,"byte_end":9298666,"line_start":698,"line_end":698,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298671,"byte_end":9298674,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298679,"byte_end":9298693,"line_start":700,"line_end":700,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298698,"byte_end":9298705,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298710,"byte_end":9298738,"line_start":702,"line_end":702,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298743,"byte_end":9298763,"line_start":703,"line_end":703,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298768,"byte_end":9298821,"line_start":704,"line_end":704,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298826,"byte_end":9298859,"line_start":705,"line_end":705,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298864,"byte_end":9298890,"line_start":706,"line_end":706,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298895,"byte_end":9298898,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298903,"byte_end":9298957,"line_start":708,"line_end":708,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9298962,"byte_end":9299021,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299026,"byte_end":9299051,"line_start":710,"line_end":710,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299056,"byte_end":9299059,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299064,"byte_end":9299108,"line_start":712,"line_end":712,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299113,"byte_end":9299153,"line_start":713,"line_end":713,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299158,"byte_end":9299201,"line_start":714,"line_end":714,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299206,"byte_end":9299246,"line_start":715,"line_end":715,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299251,"byte_end":9299294,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299299,"byte_end":9299302,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299307,"byte_end":9299338,"line_start":718,"line_end":718,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299343,"byte_end":9299382,"line_start":719,"line_end":719,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299387,"byte_end":9299390,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299395,"byte_end":9299427,"line_start":721,"line_end":721,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299432,"byte_end":9299485,"line_start":722,"line_end":722,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299490,"byte_end":9299493,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299498,"byte_end":9299527,"line_start":724,"line_end":724,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299532,"byte_end":9299561,"line_start":725,"line_end":725,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299566,"byte_end":9299620,"line_start":726,"line_end":726,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299625,"byte_end":9299628,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299633,"byte_end":9299645,"line_start":728,"line_end":728,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299650,"byte_end":9299657,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299662,"byte_end":9299669,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4708},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300661,"byte_end":9300675,"line_start":758,"line_end":758,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UnixDatagram>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the specified address.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9299966,"byte_end":9300033,"line_start":741,"line_end":741,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300038,"byte_end":9300041,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300046,"byte_end":9300130,"line_start":743,"line_end":743,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300135,"byte_end":9300217,"line_start":744,"line_end":744,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300222,"byte_end":9300243,"line_start":745,"line_end":745,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300248,"byte_end":9300251,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300256,"byte_end":9300274,"line_start":747,"line_end":747,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300279,"byte_end":9300282,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300287,"byte_end":9300312,"line_start":749,"line_end":749,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300317,"byte_end":9300320,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300325,"byte_end":9300381,"line_start":751,"line_end":751,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300386,"byte_end":9300476,"line_start":752,"line_end":752,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300481,"byte_end":9300536,"line_start":753,"line_end":753,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300541,"byte_end":9300544,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300549,"byte_end":9300561,"line_start":755,"line_end":755,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300566,"byte_end":9300569,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9300574,"byte_end":9300649,"line_start":757,"line_end":757,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4709},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301984,"byte_end":9301996,"line_start":797,"line_end":797,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UnixDatagram>::poll_send_to","value":"pub fn poll_send_to<P>(&Self, &mut Context, &[u8], P)\n-> Poll<io::Result<usize>> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data to the specified address.","sig":null,"attributes":[{"value":"/ Attempts to send data to the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301335,"byte_end":9301386,"line_start":780,"line_end":780,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301391,"byte_end":9301394,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301399,"byte_end":9301483,"line_start":782,"line_end":782,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301488,"byte_end":9301570,"line_start":783,"line_end":783,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301575,"byte_end":9301596,"line_start":784,"line_end":784,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301601,"byte_end":9301604,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301609,"byte_end":9301627,"line_start":786,"line_end":786,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301632,"byte_end":9301635,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301640,"byte_end":9301665,"line_start":788,"line_end":788,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301670,"byte_end":9301673,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301678,"byte_end":9301735,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301740,"byte_end":9301799,"line_start":791,"line_end":791,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301804,"byte_end":9301859,"line_start":792,"line_end":792,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301864,"byte_end":9301867,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301872,"byte_end":9301884,"line_start":794,"line_end":794,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301889,"byte_end":9301892,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9301897,"byte_end":9301972,"line_start":796,"line_end":796,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4712},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303193,"byte_end":9303202,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UnixDatagram>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302286,"byte_end":9302359,"line_start":811,"line_end":811,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302364,"byte_end":9302395,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302400,"byte_end":9302403,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302408,"byte_end":9302480,"line_start":814,"line_end":814,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302485,"byte_end":9302542,"line_start":815,"line_end":815,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302547,"byte_end":9302550,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302555,"byte_end":9302630,"line_start":817,"line_end":817,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302635,"byte_end":9302710,"line_start":818,"line_end":818,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302715,"byte_end":9302752,"line_start":819,"line_end":819,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302757,"byte_end":9302760,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302765,"byte_end":9302783,"line_start":821,"line_end":821,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302788,"byte_end":9302791,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302796,"byte_end":9302821,"line_start":823,"line_end":823,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302826,"byte_end":9302829,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302834,"byte_end":9302895,"line_start":825,"line_end":825,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302900,"byte_end":9302958,"line_start":826,"line_end":826,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9302963,"byte_end":9303018,"line_start":827,"line_end":827,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303023,"byte_end":9303026,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303031,"byte_end":9303043,"line_start":829,"line_end":829,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303048,"byte_end":9303051,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303056,"byte_end":9303131,"line_start":831,"line_end":831,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303136,"byte_end":9303139,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303144,"byte_end":9303181,"line_start":833,"line_end":833,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4714},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304321,"byte_end":9304330,"line_start":863,"line_end":863,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnixDatagram>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303381,"byte_end":9303460,"line_start":840,"line_end":840,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303465,"byte_end":9303504,"line_start":841,"line_end":841,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303509,"byte_end":9303512,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303517,"byte_end":9303601,"line_start":843,"line_end":843,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303606,"byte_end":9303662,"line_start":844,"line_end":844,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303667,"byte_end":9303670,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303675,"byte_end":9303759,"line_start":846,"line_end":846,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303764,"byte_end":9303846,"line_start":847,"line_end":847,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303851,"byte_end":9303872,"line_start":848,"line_end":848,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303877,"byte_end":9303880,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303885,"byte_end":9303903,"line_start":850,"line_end":850,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303908,"byte_end":9303911,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303916,"byte_end":9303941,"line_start":852,"line_end":852,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303946,"byte_end":9303949,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9303954,"byte_end":9304010,"line_start":854,"line_end":854,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304015,"byte_end":9304086,"line_start":855,"line_end":855,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304091,"byte_end":9304146,"line_start":856,"line_end":856,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304151,"byte_end":9304154,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304159,"byte_end":9304171,"line_start":858,"line_end":858,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304176,"byte_end":9304179,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304184,"byte_end":9304259,"line_start":860,"line_end":860,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304264,"byte_end":9304267,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304272,"byte_end":9304309,"line_start":862,"line_end":862,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4715},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306399,"byte_end":9306412,"line_start":924,"line_end":924,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304924,"byte_end":9304980,"line_start":881,"line_end":881,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304985,"byte_end":9304988,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9304993,"byte_end":9305007,"line_start":883,"line_end":883,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305012,"byte_end":9305015,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305020,"byte_end":9305033,"line_start":885,"line_end":885,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305038,"byte_end":9305071,"line_start":886,"line_end":886,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305076,"byte_end":9305092,"line_start":887,"line_end":887,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305097,"byte_end":9305100,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305105,"byte_end":9305123,"line_start":889,"line_end":889,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305128,"byte_end":9305167,"line_start":890,"line_end":890,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305172,"byte_end":9305200,"line_start":891,"line_end":891,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305205,"byte_end":9305252,"line_start":892,"line_end":892,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305257,"byte_end":9305314,"line_start":893,"line_end":893,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305319,"byte_end":9305376,"line_start":894,"line_end":894,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305381,"byte_end":9305436,"line_start":895,"line_end":895,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305441,"byte_end":9305444,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305449,"byte_end":9305463,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305468,"byte_end":9305517,"line_start":898,"line_end":898,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305522,"byte_end":9305559,"line_start":899,"line_end":899,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305564,"byte_end":9305567,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305572,"byte_end":9305644,"line_start":901,"line_end":901,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305649,"byte_end":9305688,"line_start":902,"line_end":902,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305693,"byte_end":9305729,"line_start":903,"line_end":903,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305734,"byte_end":9305737,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305742,"byte_end":9305812,"line_start":905,"line_end":905,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305817,"byte_end":9305875,"line_start":906,"line_end":906,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305880,"byte_end":9305930,"line_start":907,"line_end":907,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305935,"byte_end":9305970,"line_start":908,"line_end":908,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9305975,"byte_end":9306027,"line_start":909,"line_end":909,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306032,"byte_end":9306058,"line_start":910,"line_end":910,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306063,"byte_end":9306080,"line_start":911,"line_end":911,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306085,"byte_end":9306157,"line_start":912,"line_end":912,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306162,"byte_end":9306191,"line_start":913,"line_end":913,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306196,"byte_end":9306213,"line_start":914,"line_end":914,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306218,"byte_end":9306245,"line_start":915,"line_end":915,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306250,"byte_end":9306284,"line_start":916,"line_end":916,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306289,"byte_end":9306306,"line_start":917,"line_end":917,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306311,"byte_end":9306324,"line_start":918,"line_end":918,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306329,"byte_end":9306338,"line_start":919,"line_end":919,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306343,"byte_end":9306346,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306351,"byte_end":9306365,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306370,"byte_end":9306375,"line_start":922,"line_end":922,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306380,"byte_end":9306387,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4717},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307861,"byte_end":9307871,"line_start":973,"line_end":973,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306661,"byte_end":9306720,"line_start":933,"line_end":933,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306725,"byte_end":9306728,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306733,"byte_end":9306747,"line_start":935,"line_end":935,"column_start":5,"column_end":19}},{"value":"/ For a socket bound to a local path","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306752,"byte_end":9306790,"line_start":936,"line_end":936,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306795,"byte_end":9306802,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306807,"byte_end":9306835,"line_start":938,"line_end":938,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306840,"byte_end":9306860,"line_start":939,"line_end":939,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306865,"byte_end":9306918,"line_start":940,"line_end":940,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306923,"byte_end":9306956,"line_start":941,"line_end":941,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306961,"byte_end":9306987,"line_start":942,"line_end":942,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9306992,"byte_end":9306995,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307000,"byte_end":9307054,"line_start":944,"line_end":944,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307059,"byte_end":9307118,"line_start":945,"line_end":945,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307123,"byte_end":9307148,"line_start":946,"line_end":946,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307153,"byte_end":9307156,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ // Bind socket to a filesystem path","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307161,"byte_end":9307200,"line_start":948,"line_end":948,"column_start":5,"column_end":44}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307205,"byte_end":9307253,"line_start":949,"line_end":949,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307258,"byte_end":9307309,"line_start":950,"line_end":950,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307314,"byte_end":9307317,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.local_addr()?.as_pathname().unwrap(), &socket_path);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307322,"byte_end":9307396,"line_start":952,"line_end":952,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307401,"byte_end":9307404,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307409,"byte_end":9307421,"line_start":954,"line_end":954,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307426,"byte_end":9307433,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307438,"byte_end":9307445,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307450,"byte_end":9307453,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ For an unbound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307458,"byte_end":9307483,"line_start":958,"line_end":958,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307488,"byte_end":9307495,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307500,"byte_end":9307528,"line_start":960,"line_end":960,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307533,"byte_end":9307553,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307558,"byte_end":9307611,"line_start":962,"line_end":962,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307616,"byte_end":9307649,"line_start":963,"line_end":963,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307654,"byte_end":9307657,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307662,"byte_end":9307693,"line_start":965,"line_end":965,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307698,"byte_end":9307740,"line_start":966,"line_end":966,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307745,"byte_end":9307748,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ assert!(socket.local_addr()?.is_unnamed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307753,"byte_end":9307800,"line_start":968,"line_end":968,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307805,"byte_end":9307808,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307813,"byte_end":9307825,"line_start":970,"line_end":970,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307830,"byte_end":9307837,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307842,"byte_end":9307849,"line_start":972,"line_end":972,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4718},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309224,"byte_end":9309233,"line_start":1022,"line_end":1022,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9307963,"byte_end":9308009,"line_start":977,"line_end":977,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308014,"byte_end":9308017,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308022,"byte_end":9308081,"line_start":979,"line_end":979,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308086,"byte_end":9308089,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308094,"byte_end":9308108,"line_start":981,"line_end":981,"column_start":5,"column_end":19}},{"value":"/ For a peer with a local path","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308113,"byte_end":9308145,"line_start":982,"line_end":982,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308150,"byte_end":9308157,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308162,"byte_end":9308190,"line_start":984,"line_end":984,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308195,"byte_end":9308215,"line_start":985,"line_end":985,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308220,"byte_end":9308273,"line_start":986,"line_end":986,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308278,"byte_end":9308311,"line_start":987,"line_end":987,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308316,"byte_end":9308342,"line_start":988,"line_end":988,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308347,"byte_end":9308350,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308355,"byte_end":9308386,"line_start":990,"line_end":990,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308391,"byte_end":9308429,"line_start":991,"line_end":991,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308434,"byte_end":9308437,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308442,"byte_end":9308477,"line_start":993,"line_end":993,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308482,"byte_end":9308507,"line_start":994,"line_end":994,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308512,"byte_end":9308552,"line_start":995,"line_end":995,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308557,"byte_end":9308600,"line_start":996,"line_end":996,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308605,"byte_end":9308608,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308613,"byte_end":9308647,"line_start":998,"line_end":998,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308652,"byte_end":9308678,"line_start":999,"line_end":999,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308683,"byte_end":9308686,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tx.peer_addr()?.as_pathname().unwrap(), &rx_path);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308691,"byte_end":9308756,"line_start":1001,"line_end":1001,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308761,"byte_end":9308764,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308769,"byte_end":9308781,"line_start":1003,"line_end":1003,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308786,"byte_end":9308793,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308798,"byte_end":9308805,"line_start":1005,"line_end":1005,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308810,"byte_end":9308813,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ For an unbound peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308818,"byte_end":9308841,"line_start":1007,"line_end":1007,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308846,"byte_end":9308853,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308858,"byte_end":9308886,"line_start":1009,"line_end":1009,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308891,"byte_end":9308911,"line_start":1010,"line_end":1010,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308916,"byte_end":9308969,"line_start":1011,"line_end":1011,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9308974,"byte_end":9309007,"line_start":1012,"line_end":1012,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309012,"byte_end":9309015,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309020,"byte_end":9309053,"line_start":1014,"line_end":1014,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309058,"byte_end":9309105,"line_start":1015,"line_end":1015,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309110,"byte_end":9309113,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ assert!(sock1.peer_addr()?.is_unnamed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309118,"byte_end":9309163,"line_start":1017,"line_end":1017,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309168,"byte_end":9309171,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309176,"byte_end":9309188,"line_start":1019,"line_end":1019,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309193,"byte_end":9309200,"line_start":1020,"line_end":1020,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309205,"byte_end":9309212,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4719},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309833,"byte_end":9309843,"line_start":1045,"line_end":1045,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309324,"byte_end":9309371,"line_start":1026,"line_end":1026,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309376,"byte_end":9309379,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309384,"byte_end":9309398,"line_start":1028,"line_end":1028,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309403,"byte_end":9309410,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309415,"byte_end":9309443,"line_start":1030,"line_end":1030,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309448,"byte_end":9309468,"line_start":1031,"line_end":1031,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309473,"byte_end":9309526,"line_start":1032,"line_end":1032,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309531,"byte_end":9309564,"line_start":1033,"line_end":1033,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309569,"byte_end":9309572,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309577,"byte_end":9309608,"line_start":1035,"line_end":1035,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309613,"byte_end":9309655,"line_start":1036,"line_end":1036,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309660,"byte_end":9309663,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309668,"byte_end":9309716,"line_start":1038,"line_end":1038,"column_start":5,"column_end":53}},{"value":"/     println!(\"Got error: {:?}\", err);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309721,"byte_end":9309762,"line_start":1039,"line_end":1039,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309767,"byte_end":9309772,"line_start":1040,"line_end":1040,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309777,"byte_end":9309780,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309785,"byte_end":9309797,"line_start":1042,"line_end":1042,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309802,"byte_end":9309809,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309814,"byte_end":9309821,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4720},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311084,"byte_end":9311092,"line_start":1081,"line_end":1081,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309926,"byte_end":9309992,"line_start":1049,"line_end":1049,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9309997,"byte_end":9310000,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310005,"byte_end":9310073,"line_start":1051,"line_end":1051,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310078,"byte_end":9310148,"line_start":1052,"line_end":1052,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310153,"byte_end":9310195,"line_start":1053,"line_end":1053,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310200,"byte_end":9310203,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310208,"byte_end":9310222,"line_start":1055,"line_end":1055,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310227,"byte_end":9310234,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310239,"byte_end":9310267,"line_start":1057,"line_end":1057,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310272,"byte_end":9310292,"line_start":1058,"line_end":1058,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310297,"byte_end":9310350,"line_start":1059,"line_end":1059,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310355,"byte_end":9310388,"line_start":1060,"line_end":1060,"column_start":5,"column_end":38}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310393,"byte_end":9310420,"line_start":1061,"line_end":1061,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310425,"byte_end":9310428,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310433,"byte_end":9310464,"line_start":1063,"line_end":1063,"column_start":5,"column_end":36}},{"value":"/ let (socket, other) = UnixDatagram::pair()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310469,"byte_end":9310517,"line_start":1064,"line_end":1064,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310522,"byte_end":9310525,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310530,"byte_end":9310567,"line_start":1066,"line_end":1066,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310572,"byte_end":9310575,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ // NOTE: the following commented out code does NOT work as expected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310580,"byte_end":9310652,"line_start":1068,"line_end":1068,"column_start":5,"column_end":77}},{"value":"/ // Due to an underlying issue, the recv call will block indefinitely.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310657,"byte_end":9310730,"line_start":1069,"line_end":1069,"column_start":5,"column_end":78}},{"value":"/ // See: https://github.com/tokio-rs/tokio/issues/1679","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310735,"byte_end":9310792,"line_start":1070,"line_end":1070,"column_start":5,"column_end":62}},{"value":"/ //let mut buff = vec![0u8; 24];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310797,"byte_end":9310832,"line_start":1071,"line_end":1071,"column_start":5,"column_end":40}},{"value":"/ //let size = socket.recv(&mut buff).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310837,"byte_end":9310884,"line_start":1072,"line_end":1072,"column_start":5,"column_end":52}},{"value":"/ //assert_eq!(size, 0);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310889,"byte_end":9310915,"line_start":1073,"line_end":1073,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310920,"byte_end":9310923,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ let send_result = socket.send(b\"hello world\").await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310928,"byte_end":9310984,"line_start":1075,"line_end":1075,"column_start":5,"column_end":61}},{"value":"/ assert!(send_result.is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9310989,"byte_end":9311023,"line_start":1076,"line_end":1076,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311028,"byte_end":9311031,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311036,"byte_end":9311048,"line_start":1078,"line_end":1078,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311053,"byte_end":9311060,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311065,"byte_end":9311072,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5153},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313155,"byte_end":9313167,"line_start":43,"line_end":43,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":5154}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21623,"byte_end":21657,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4773},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313669,"byte_end":9313673,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313252,"byte_end":9313313,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313318,"byte_end":9313321,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313326,"byte_end":9313338,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313343,"byte_end":9313346,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313351,"byte_end":9313411,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313416,"byte_end":9313419,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313424,"byte_end":9313494,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313499,"byte_end":9313572,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313577,"byte_end":9313657,"line_start":57,"line_end":57,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4775},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314604,"byte_end":9314612,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","sig":null,"attributes":[{"value":"/ Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313903,"byte_end":9313977,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313982,"byte_end":9313985,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixListener from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313990,"byte_end":9314062,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314067,"byte_end":9314135,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying listener; it is left up to the user to set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314140,"byte_end":9314215,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314220,"byte_end":9314248,"line_start":72,"line_end":72,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314253,"byte_end":9314256,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314261,"byte_end":9314273,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314278,"byte_end":9314281,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314286,"byte_end":9314346,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314351,"byte_end":9314354,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314359,"byte_end":9314429,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314434,"byte_end":9314507,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314512,"byte_end":9314592,"line_start":80,"line_end":80,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4776},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314894,"byte_end":9314904,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314828,"byte_end":9314882,"line_start":87,"line_end":87,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4777},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315055,"byte_end":9315065,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9314996,"byte_end":9315043,"line_start":92,"line_end":92,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4778},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315221,"byte_end":9315227,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315148,"byte_end":9315203,"line_start":97,"line_end":97,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4782},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315934,"byte_end":9315945,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315556,"byte_end":9315619,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315624,"byte_end":9315627,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315632,"byte_end":9315708,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315713,"byte_end":9315787,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315792,"byte_end":9315868,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9315873,"byte_end":9315922,"line_start":115,"line_end":115,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5156},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317756,"byte_end":9317764,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317419,"byte_end":9317484,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317485,"byte_end":9317488,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317489,"byte_end":9317577,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317578,"byte_end":9317605,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317606,"byte_end":9317609,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317610,"byte_end":9317640,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317641,"byte_end":9317675,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317676,"byte_end":9317727,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5163},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318390,"byte_end":9318399,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317787,"byte_end":9317853,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317854,"byte_end":9317857,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317858,"byte_end":9317944,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9317945,"byte_end":9318004,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318005,"byte_end":9318008,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318009,"byte_end":9318090,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318091,"byte_end":9318126,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318127,"byte_end":9318130,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318131,"byte_end":9318161,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318162,"byte_end":9318196,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318197,"byte_end":9318244,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318245,"byte_end":9318307,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318308,"byte_end":9318361,"line_start":42,"line_end":42,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5170},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320795,"byte_end":9320808,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":5171}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320416,"byte_end":9320483,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320484,"byte_end":9320487,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320488,"byte_end":9320575,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320576,"byte_end":9320610,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320611,"byte_end":9320614,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320615,"byte_end":9320657,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320658,"byte_end":9320714,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320715,"byte_end":9320766,"line_start":28,"line_end":28,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5174},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321554,"byte_end":9321568,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":5175},{"krate":0,"index":5176}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320842,"byte_end":9320910,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320911,"byte_end":9320914,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320915,"byte_end":9320979,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9320980,"byte_end":9321051,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321052,"byte_end":9321129,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321130,"byte_end":9321133,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321134,"byte_end":9321214,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321215,"byte_end":9321256,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321257,"byte_end":9321260,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321261,"byte_end":9321303,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321304,"byte_end":9321360,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321361,"byte_end":9321408,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321409,"byte_end":9321471,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9321472,"byte_end":9321525,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":5179},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322537,"byte_end":9322549,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322405,"byte_end":9322487,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322488,"byte_end":9322508,"line_start":81,"line_end":81,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5181},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322550,"byte_end":9322567,"line_start":83,"line_end":83,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":5179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5182},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322569,"byte_end":9322587,"line_start":83,"line_end":83,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":5179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323147,"byte_end":9323154,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322870,"byte_end":9322940,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322945,"byte_end":9323009,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323014,"byte_end":9323066,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323071,"byte_end":9323074,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323079,"byte_end":9323135,"line_start":101,"line_end":101,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323791,"byte_end":9323798,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323514,"byte_end":9323584,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323589,"byte_end":9323653,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323658,"byte_end":9323710,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323715,"byte_end":9323718,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323723,"byte_end":9323779,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9324104,"byte_end":9324110,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323905,"byte_end":9323977,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323982,"byte_end":9324051,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9324056,"byte_end":9324092,"line_start":129,"line_end":129,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4921},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325736,"byte_end":9325746,"line_start":5,"line_end":5,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::net::unix::socketaddr::SocketAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" An address associated with a Tokio Unix socket.\n","sig":null,"attributes":[{"value":"/ An address associated with a Tokio Unix socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325673,"byte_end":9325724,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4925},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325982,"byte_end":9325992,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"/ Returns `true` if the address is unnamed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325804,"byte_end":9325849,"line_start":8,"line_end":8,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325854,"byte_end":9325857,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325862,"byte_end":9325907,"line_start":10,"line_end":10,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325912,"byte_end":9325915,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325920,"byte_end":9325970,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4926},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9326253,"byte_end":9326264,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[{"value":"/ Returns the contents of this address if it is a `pathname` address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9326049,"byte_end":9326120,"line_start":17,"line_end":17,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9326125,"byte_end":9326128,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9326133,"byte_end":9326178,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9326183,"byte_end":9326186,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9326191,"byte_end":9326241,"line_start":21,"line_end":21,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5185},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9327704,"byte_end":9327714,"line_start":31,"line_end":31,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":5186}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":21623,"byte_end":21657,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5028},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328037,"byte_end":9328044,"line_start":42,"line_end":42,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9327795,"byte_end":9327838,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9327843,"byte_end":9327846,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9327851,"byte_end":9327922,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9327927,"byte_end":9328003,"line_start":40,"line_end":40,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328008,"byte_end":9328019,"line_start":41,"line_end":41,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":5033},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330707,"byte_end":9330712,"line_start":115,"line_end":115,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328336,"byte_end":9328383,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328388,"byte_end":9328391,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328396,"byte_end":9328470,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328475,"byte_end":9328550,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328555,"byte_end":9328593,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328598,"byte_end":9328601,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328606,"byte_end":9328620,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328625,"byte_end":9328628,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328633,"byte_end":9328703,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328708,"byte_end":9328722,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328727,"byte_end":9328730,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328735,"byte_end":9328748,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328753,"byte_end":9328781,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328786,"byte_end":9328817,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328822,"byte_end":9328848,"line_start":67,"line_end":67,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328853,"byte_end":9328869,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328874,"byte_end":9328877,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328882,"byte_end":9328900,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328905,"byte_end":9328956,"line_start":71,"line_end":71,"column_start":5,"column_end":56}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9328961,"byte_end":9329008,"line_start":72,"line_end":72,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329013,"byte_end":9329066,"line_start":73,"line_end":73,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329071,"byte_end":9329130,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329135,"byte_end":9329138,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329143,"byte_end":9329157,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329162,"byte_end":9329247,"line_start":77,"line_end":77,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329252,"byte_end":9329255,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329260,"byte_end":9329296,"line_start":79,"line_end":79,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329301,"byte_end":9329346,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329351,"byte_end":9329425,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329430,"byte_end":9329492,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329497,"byte_end":9329547,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329552,"byte_end":9329582,"line_start":84,"line_end":84,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329587,"byte_end":9329648,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329653,"byte_end":9329674,"line_start":86,"line_end":86,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329679,"byte_end":9329755,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329760,"byte_end":9329793,"line_start":88,"line_end":88,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329798,"byte_end":9329819,"line_start":89,"line_end":89,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329824,"byte_end":9329855,"line_start":90,"line_end":90,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329860,"byte_end":9329905,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329910,"byte_end":9329931,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329936,"byte_end":9329953,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329958,"byte_end":9329961,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329966,"byte_end":9329979,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329984,"byte_end":9329987,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9329992,"byte_end":9330028,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330033,"byte_end":9330108,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330113,"byte_end":9330175,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330180,"byte_end":9330236,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330241,"byte_end":9330271,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330276,"byte_end":9330330,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330335,"byte_end":9330356,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330361,"byte_end":9330437,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330442,"byte_end":9330475,"line_start":105,"line_end":105,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330480,"byte_end":9330501,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330506,"byte_end":9330537,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330542,"byte_end":9330587,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330592,"byte_end":9330613,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330618,"byte_end":9330635,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330640,"byte_end":9330653,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330658,"byte_end":9330667,"line_start":112,"line_end":112,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330672,"byte_end":9330677,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330682,"byte_end":9330689,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5036},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332337,"byte_end":9332345,"line_start":165,"line_end":165,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330869,"byte_end":9330912,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330917,"byte_end":9330920,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9330925,"byte_end":9331002,"line_start":122,"line_end":122,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331007,"byte_end":9331036,"line_start":123,"line_end":123,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331041,"byte_end":9331044,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331049,"byte_end":9331063,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331068,"byte_end":9331071,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331076,"byte_end":9331089,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331094,"byte_end":9331125,"line_start":128,"line_end":128,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331130,"byte_end":9331156,"line_start":129,"line_end":129,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331161,"byte_end":9331177,"line_start":130,"line_end":130,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331182,"byte_end":9331185,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331190,"byte_end":9331208,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331213,"byte_end":9331264,"line_start":133,"line_end":133,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331269,"byte_end":9331297,"line_start":134,"line_end":134,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331302,"byte_end":9331349,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331354,"byte_end":9331407,"line_start":136,"line_end":136,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331412,"byte_end":9331471,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331476,"byte_end":9331479,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331484,"byte_end":9331520,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331525,"byte_end":9331528,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331533,"byte_end":9331547,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331552,"byte_end":9331601,"line_start":142,"line_end":142,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331606,"byte_end":9331643,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331648,"byte_end":9331651,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331656,"byte_end":9331726,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331731,"byte_end":9331789,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331794,"byte_end":9331839,"line_start":147,"line_end":147,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331844,"byte_end":9331870,"line_start":148,"line_end":148,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331875,"byte_end":9331911,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331916,"byte_end":9331942,"line_start":150,"line_end":150,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331947,"byte_end":9331964,"line_start":151,"line_end":151,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9331969,"byte_end":9332041,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332046,"byte_end":9332075,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332080,"byte_end":9332097,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332102,"byte_end":9332129,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332134,"byte_end":9332175,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332180,"byte_end":9332197,"line_start":157,"line_end":157,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332202,"byte_end":9332215,"line_start":158,"line_end":158,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332220,"byte_end":9332229,"line_start":159,"line_end":159,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332234,"byte_end":9332237,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332242,"byte_end":9332278,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332283,"byte_end":9332297,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332302,"byte_end":9332307,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332312,"byte_end":9332319,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5039},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333708,"byte_end":9333723,"line_start":199,"line_end":199,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<UnixStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332446,"byte_end":9332475,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332480,"byte_end":9332483,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for reading, this method will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332488,"byte_end":9332563,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332568,"byte_end":9332643,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332648,"byte_end":9332721,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332726,"byte_end":9332736,"line_start":175,"line_end":175,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332741,"byte_end":9332744,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready` or `poll_read`, only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332749,"byte_end":9332822,"line_start":177,"line_end":177,"column_start":5,"column_end":78}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332827,"byte_end":9332895,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_write_ready` retains a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332900,"byte_end":9332973,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ second, independent waker.)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9332978,"byte_end":9333009,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333014,"byte_end":9333017,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333022,"byte_end":9333097,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333102,"byte_end":9333177,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333182,"byte_end":9333250,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333255,"byte_end":9333258,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333263,"byte_end":9333281,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333286,"byte_end":9333289,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333294,"byte_end":9333319,"line_start":188,"line_end":188,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333324,"byte_end":9333327,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for reading.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333332,"byte_end":9333398,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for reading.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333403,"byte_end":9333471,"line_start":191,"line_end":191,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333476,"byte_end":9333531,"line_start":192,"line_end":192,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333536,"byte_end":9333539,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333544,"byte_end":9333556,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333561,"byte_end":9333564,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333569,"byte_end":9333644,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333649,"byte_end":9333652,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333657,"byte_end":9333696,"line_start":198,"line_end":198,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5041},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336166,"byte_end":9336174,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"try_read","qualname":"<UnixStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333856,"byte_end":9333932,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333937,"byte_end":9333962,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333967,"byte_end":9333970,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9333975,"byte_end":9334051,"line_start":206,"line_end":206,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334056,"byte_end":9334124,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334129,"byte_end":9334203,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334208,"byte_end":9334263,"line_start":209,"line_end":209,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334268,"byte_end":9334271,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334276,"byte_end":9334346,"line_start":211,"line_end":211,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334351,"byte_end":9334354,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: UnixStream::readable()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334359,"byte_end":9334401,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ [`ready()`]: UnixStream::ready()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334406,"byte_end":9334442,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334447,"byte_end":9334450,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334455,"byte_end":9334467,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334472,"byte_end":9334475,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334480,"byte_end":9334551,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334556,"byte_end":9334632,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334637,"byte_end":9334711,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334716,"byte_end":9334765,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334770,"byte_end":9334773,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334778,"byte_end":9334792,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334797,"byte_end":9334800,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334805,"byte_end":9334818,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334823,"byte_end":9334854,"line_start":226,"line_end":226,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334859,"byte_end":9334885,"line_start":227,"line_end":227,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334890,"byte_end":9334906,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334911,"byte_end":9334914,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334919,"byte_end":9334937,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334942,"byte_end":9334993,"line_start":231,"line_end":231,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9334998,"byte_end":9335026,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335031,"byte_end":9335078,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335083,"byte_end":9335136,"line_start":234,"line_end":234,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335141,"byte_end":9335200,"line_start":235,"line_end":235,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335205,"byte_end":9335208,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335213,"byte_end":9335227,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335232,"byte_end":9335281,"line_start":238,"line_end":238,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335286,"byte_end":9335323,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335328,"byte_end":9335331,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335336,"byte_end":9335409,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335414,"byte_end":9335460,"line_start":242,"line_end":242,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335465,"byte_end":9335501,"line_start":243,"line_end":243,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335506,"byte_end":9335509,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335514,"byte_end":9335584,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335589,"byte_end":9335647,"line_start":246,"line_end":246,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335652,"byte_end":9335697,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335702,"byte_end":9335733,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335738,"byte_end":9335764,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335769,"byte_end":9335818,"line_start":250,"line_end":250,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335823,"byte_end":9335840,"line_start":251,"line_end":251,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335845,"byte_end":9335917,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335922,"byte_end":9335951,"line_start":253,"line_end":253,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335956,"byte_end":9335973,"line_start":254,"line_end":254,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9335978,"byte_end":9336005,"line_start":255,"line_end":255,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336010,"byte_end":9336051,"line_start":256,"line_end":256,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336056,"byte_end":9336073,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336078,"byte_end":9336091,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336096,"byte_end":9336105,"line_start":259,"line_end":259,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336110,"byte_end":9336113,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336118,"byte_end":9336132,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336137,"byte_end":9336142,"line_start":262,"line_end":262,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336147,"byte_end":9336154,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5043},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337688,"byte_end":9337696,"line_start":311,"line_end":311,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336342,"byte_end":9336385,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336390,"byte_end":9336393,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336398,"byte_end":9336475,"line_start":272,"line_end":272,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336480,"byte_end":9336510,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336515,"byte_end":9336518,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336523,"byte_end":9336537,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336542,"byte_end":9336545,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336550,"byte_end":9336563,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336568,"byte_end":9336599,"line_start":278,"line_end":278,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336604,"byte_end":9336630,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336635,"byte_end":9336651,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336656,"byte_end":9336659,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336664,"byte_end":9336682,"line_start":282,"line_end":282,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336687,"byte_end":9336738,"line_start":283,"line_end":283,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336743,"byte_end":9336771,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336776,"byte_end":9336823,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336828,"byte_end":9336881,"line_start":286,"line_end":286,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336886,"byte_end":9336945,"line_start":287,"line_end":287,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336950,"byte_end":9336953,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336958,"byte_end":9336972,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9336977,"byte_end":9337026,"line_start":290,"line_end":290,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337031,"byte_end":9337068,"line_start":291,"line_end":291,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337073,"byte_end":9337076,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337081,"byte_end":9337152,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337157,"byte_end":9337215,"line_start":294,"line_end":294,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337220,"byte_end":9337272,"line_start":295,"line_end":295,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337277,"byte_end":9337303,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337308,"byte_end":9337334,"line_start":297,"line_end":297,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337339,"byte_end":9337356,"line_start":298,"line_end":298,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337361,"byte_end":9337433,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337438,"byte_end":9337467,"line_start":300,"line_end":300,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337472,"byte_end":9337489,"line_start":301,"line_end":301,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337494,"byte_end":9337521,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337526,"byte_end":9337567,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337572,"byte_end":9337589,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337594,"byte_end":9337607,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337612,"byte_end":9337621,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337626,"byte_end":9337629,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337634,"byte_end":9337648,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337653,"byte_end":9337658,"line_start":309,"line_end":309,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337663,"byte_end":9337670,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5046},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339061,"byte_end":9339077,"line_start":345,"line_end":345,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<UnixStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337797,"byte_end":9337827,"line_start":316,"line_end":316,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337832,"byte_end":9337835,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for writing, this method will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337840,"byte_end":9337915,"line_start":318,"line_end":318,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9337920,"byte_end":9337995,"line_start":319,"line_end":319,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338000,"byte_end":9338073,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338078,"byte_end":9338088,"line_start":321,"line_end":321,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338093,"byte_end":9338096,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338101,"byte_end":9338176,"line_start":323,"line_end":323,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338181,"byte_end":9338249,"line_start":324,"line_end":324,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338254,"byte_end":9338326,"line_start":325,"line_end":325,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338331,"byte_end":9338362,"line_start":326,"line_end":326,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338367,"byte_end":9338370,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338375,"byte_end":9338450,"line_start":328,"line_end":328,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338455,"byte_end":9338530,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338535,"byte_end":9338603,"line_start":330,"line_end":330,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338608,"byte_end":9338611,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338616,"byte_end":9338634,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338639,"byte_end":9338642,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338647,"byte_end":9338672,"line_start":334,"line_end":334,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338677,"byte_end":9338680,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for writing.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338685,"byte_end":9338751,"line_start":336,"line_end":336,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for writing.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338756,"byte_end":9338824,"line_start":337,"line_end":337,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338829,"byte_end":9338884,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338889,"byte_end":9338892,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338897,"byte_end":9338909,"line_start":340,"line_end":340,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338914,"byte_end":9338917,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9338922,"byte_end":9338997,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339002,"byte_end":9339005,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339010,"byte_end":9339049,"line_start":344,"line_end":344,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5048},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340911,"byte_end":9340920,"line_start":399,"line_end":399,"column_start":12,"column_end":21},"name":"try_write","qualname":"<UnixStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339211,"byte_end":9339281,"line_start":349,"line_end":349,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339286,"byte_end":9339298,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339303,"byte_end":9339306,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339311,"byte_end":9339383,"line_start":352,"line_end":352,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339388,"byte_end":9339431,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339436,"byte_end":9339439,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339444,"byte_end":9339498,"line_start":355,"line_end":355,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339503,"byte_end":9339506,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339511,"byte_end":9339523,"line_start":357,"line_end":357,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339528,"byte_end":9339531,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339536,"byte_end":9339610,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339615,"byte_end":9339685,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339690,"byte_end":9339739,"line_start":361,"line_end":361,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339744,"byte_end":9339747,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339752,"byte_end":9339766,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339771,"byte_end":9339774,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339779,"byte_end":9339792,"line_start":365,"line_end":365,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339797,"byte_end":9339828,"line_start":366,"line_end":366,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339833,"byte_end":9339859,"line_start":367,"line_end":367,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339864,"byte_end":9339880,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339885,"byte_end":9339888,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339893,"byte_end":9339911,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339916,"byte_end":9339967,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9339972,"byte_end":9340000,"line_start":372,"line_end":372,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340005,"byte_end":9340052,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340057,"byte_end":9340110,"line_start":374,"line_end":374,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340115,"byte_end":9340174,"line_start":375,"line_end":375,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340179,"byte_end":9340182,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340187,"byte_end":9340201,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340206,"byte_end":9340255,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340260,"byte_end":9340297,"line_start":379,"line_end":379,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340302,"byte_end":9340305,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340310,"byte_end":9340381,"line_start":381,"line_end":381,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340386,"byte_end":9340444,"line_start":382,"line_end":382,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340449,"byte_end":9340501,"line_start":383,"line_end":383,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340506,"byte_end":9340532,"line_start":384,"line_end":384,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340537,"byte_end":9340563,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340568,"byte_end":9340585,"line_start":386,"line_end":386,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340590,"byte_end":9340662,"line_start":387,"line_end":387,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340667,"byte_end":9340696,"line_start":388,"line_end":388,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340701,"byte_end":9340718,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340723,"byte_end":9340750,"line_start":390,"line_end":390,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340755,"byte_end":9340796,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340801,"byte_end":9340818,"line_start":392,"line_end":392,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340823,"byte_end":9340836,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340841,"byte_end":9340850,"line_start":394,"line_end":394,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340855,"byte_end":9340858,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340863,"byte_end":9340877,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340882,"byte_end":9340887,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9340892,"byte_end":9340899,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5050},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341777,"byte_end":9341785,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341085,"byte_end":9341154,"line_start":405,"line_end":405,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341159,"byte_end":9341162,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixStream from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341167,"byte_end":9341237,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341242,"byte_end":9341310,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying stream; it is left up to the user to set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341315,"byte_end":9341388,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341393,"byte_end":9341421,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341426,"byte_end":9341429,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341434,"byte_end":9341446,"line_start":412,"line_end":412,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341451,"byte_end":9341454,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341459,"byte_end":9341519,"line_start":414,"line_end":414,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341524,"byte_end":9341527,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341532,"byte_end":9341602,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341607,"byte_end":9341680,"line_start":417,"line_end":417,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341685,"byte_end":9341765,"line_start":418,"line_end":418,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5051},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342266,"byte_end":9342270,"line_start":431,"line_end":431,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9341986,"byte_end":9342035,"line_start":426,"line_end":426,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342040,"byte_end":9342043,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342048,"byte_end":9342119,"line_start":428,"line_end":428,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342124,"byte_end":9342194,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342199,"byte_end":9342254,"line_start":430,"line_end":430,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5053},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342713,"byte_end":9342723,"line_start":445,"line_end":445,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342633,"byte_end":9342701,"line_start":444,"line_end":444,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5054},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342896,"byte_end":9342905,"line_start":450,"line_end":450,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342815,"byte_end":9342884,"line_start":449,"line_end":449,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5055},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9343090,"byte_end":9343099,"line_start":455,"line_end":455,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9342996,"byte_end":9343078,"line_start":454,"line_end":454,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":5056},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9343235,"byte_end":9343245,"line_start":460,"line_end":460,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9343176,"byte_end":9343223,"line_start":459,"line_end":459,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5058},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344221,"byte_end":9344226,"line_start":483,"line_end":483,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9343849,"byte_end":9343885,"line_start":475,"line_end":475,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9343890,"byte_end":9343967,"line_start":476,"line_end":476,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9343972,"byte_end":9344018,"line_start":477,"line_end":477,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344023,"byte_end":9344026,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344031,"byte_end":9344110,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344115,"byte_end":9344158,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344163,"byte_end":9344166,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344171,"byte_end":9344209,"line_start":482,"line_end":482,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5060},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344868,"byte_end":9344878,"line_start":498,"line_end":498,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344311,"byte_end":9344389,"line_start":487,"line_end":487,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344394,"byte_end":9344440,"line_start":488,"line_end":488,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344445,"byte_end":9344448,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344453,"byte_end":9344531,"line_start":490,"line_end":490,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344536,"byte_end":9344584,"line_start":491,"line_end":491,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344589,"byte_end":9344592,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344597,"byte_end":9344671,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `UnixStream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344676,"byte_end":9344753,"line_start":494,"line_end":494,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344758,"byte_end":9344761,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344766,"byte_end":9344794,"line_start":496,"line_end":496,"column_start":5,"column_end":33}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344799,"byte_end":9344856,"line_start":497,"line_end":497,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5187},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9347917,"byte_end":9347922,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred {  }","parent":null,"children":[{"krate":0,"index":5188},{"krate":0,"index":5189},{"krate":0,"index":5190}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9347826,"byte_end":9347854,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5095},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348166,"byte_end":9348169,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"uid","qualname":"<UCred>::uid","value":"pub fn uid(&Self) -> uid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets UID (user ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets UID (user ID) of the process.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348116,"byte_end":9348154,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5096},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348267,"byte_end":9348270,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"gid","qualname":"<UCred>::gid","value":"pub fn gid(&Self) -> gid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets GID (group ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets GID (group ID) of the process.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348216,"byte_end":9348255,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5097},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348524,"byte_end":9348527,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"pid","qualname":"<UCred>::pid","value":"pub fn pid(&Self) -> Option<pid_t>","parent":null,"children":[],"decl_id":null,"docs":" Gets PID (process ID) of the process.","sig":null,"attributes":[{"value":"/ Gets PID (process ID) of the process.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348317,"byte_end":9348358,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348363,"byte_end":9348366,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is only implemented under Linux, Android, iOS, macOS, Solaris and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348371,"byte_end":9348445,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ Illumos. On other plaforms this will always return `None`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348450,"byte_end":9348512,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":865},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":104210,"byte_end":104216,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":104147,"byte_end":104200,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":866},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":104269,"byte_end":104274,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":104231,"byte_end":104259,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":5290},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":5291},{"krate":0,"index":5314},{"krate":0,"index":5990},{"krate":0,"index":6154},{"krate":0,"index":6157},{"krate":0,"index":6336},{"krate":0,"index":6339},{"krate":0,"index":6342},{"krate":0,"index":6418},{"krate":0,"index":6421},{"krate":0,"index":6435},{"krate":0,"index":6467},{"krate":0,"index":6470},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6525},{"krate":0,"index":6528},{"krate":0,"index":6531},{"krate":0,"index":6638},{"krate":0,"index":6641},{"krate":0,"index":6644},{"krate":0,"index":6660},{"krate":0,"index":6664},{"krate":0,"index":6666},{"krate":0,"index":6670},{"krate":0,"index":6647},{"krate":0,"index":6648}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355444,"byte_end":9355466,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355467,"byte_end":9355470,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355471,"byte_end":9355544,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355545,"byte_end":9355618,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355619,"byte_end":9355622,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355623,"byte_end":9355701,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355702,"byte_end":9355759,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355760,"byte_end":9355830,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355831,"byte_end":9355903,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355904,"byte_end":9355907,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355908,"byte_end":9355988,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9355989,"byte_end":9356069,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and user may just use the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356070,"byte_end":9356149,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356150,"byte_end":9356230,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356231,"byte_end":9356234,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356235,"byte_end":9356246,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356247,"byte_end":9356250,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356251,"byte_end":9356330,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356331,"byte_end":9356340,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356341,"byte_end":9356344,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356345,"byte_end":9356358,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356359,"byte_end":9356391,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356392,"byte_end":9356441,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356442,"byte_end":9356445,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356446,"byte_end":9356464,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356465,"byte_end":9356528,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356529,"byte_end":9356595,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356596,"byte_end":9356599,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356600,"byte_end":9356614,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356615,"byte_end":9356674,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356675,"byte_end":9356678,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356679,"byte_end":9356716,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356717,"byte_end":9356757,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356758,"byte_end":9356761,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356762,"byte_end":9356842,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356843,"byte_end":9356865,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356866,"byte_end":9356929,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356930,"byte_end":9356970,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9356971,"byte_end":9357021,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357022,"byte_end":9357057,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357058,"byte_end":9357093,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357094,"byte_end":9357176,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357177,"byte_end":9357212,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357213,"byte_end":9357238,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357239,"byte_end":9357261,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357262,"byte_end":9357265,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357266,"byte_end":9357308,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357309,"byte_end":9357381,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357382,"byte_end":9357459,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357460,"byte_end":9357491,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357492,"byte_end":9357513,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357514,"byte_end":9357531,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357532,"byte_end":9357547,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357548,"byte_end":9357557,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357558,"byte_end":9357563,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357564,"byte_end":9357571,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357572,"byte_end":9357575,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357576,"byte_end":9357654,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357655,"byte_end":9357733,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357734,"byte_end":9357795,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357796,"byte_end":9357799,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357800,"byte_end":9357853,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357854,"byte_end":9357857,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357858,"byte_end":9357871,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357872,"byte_end":9357904,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357905,"byte_end":9357954,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357955,"byte_end":9357987,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357988,"byte_end":9357991,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9357992,"byte_end":9358049,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358050,"byte_end":9358079,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358080,"byte_end":9358114,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358115,"byte_end":9358118,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358119,"byte_end":9358149,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358150,"byte_end":9358177,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358178,"byte_end":9358248,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358249,"byte_end":9358252,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358253,"byte_end":9358271,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358272,"byte_end":9358335,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358336,"byte_end":9358339,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358340,"byte_end":9358381,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358382,"byte_end":9358426,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358427,"byte_end":9358430,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358431,"byte_end":9358515,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358516,"byte_end":9358542,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358543,"byte_end":9358610,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358611,"byte_end":9358655,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358656,"byte_end":9358710,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358711,"byte_end":9358750,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358751,"byte_end":9358790,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358791,"byte_end":9358877,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358878,"byte_end":9358917,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358918,"byte_end":9358947,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358948,"byte_end":9358974,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358975,"byte_end":9358978,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9358979,"byte_end":9359025,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359026,"byte_end":9359102,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359103,"byte_end":9359184,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359185,"byte_end":9359220,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359221,"byte_end":9359246,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359247,"byte_end":9359268,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359269,"byte_end":9359288,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359289,"byte_end":9359302,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359303,"byte_end":9359313,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359314,"byte_end":9359319,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359320,"byte_end":9359327,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359328,"byte_end":9359331,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359332,"byte_end":9359361,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359362,"byte_end":9359365,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359366,"byte_end":9359444,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359445,"byte_end":9359521,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359522,"byte_end":9359564,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359565,"byte_end":9359568,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359569,"byte_end":9359600,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359601,"byte_end":9359604,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359605,"byte_end":9359680,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359681,"byte_end":9359759,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359760,"byte_end":9359839,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359840,"byte_end":9359924,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359925,"byte_end":9359970,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359971,"byte_end":9359978,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9359979,"byte_end":9360002,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360003,"byte_end":9360006,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360007,"byte_end":9360066,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360067,"byte_end":9360114,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360115,"byte_end":9360129,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360130,"byte_end":9360137,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360138,"byte_end":9360141,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360142,"byte_end":9360217,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360218,"byte_end":9360293,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360294,"byte_end":9360297,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360298,"byte_end":9360331,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360332,"byte_end":9360335,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360336,"byte_end":9360414,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360415,"byte_end":9360494,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360495,"byte_end":9360521,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360522,"byte_end":9360529,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360530,"byte_end":9360553,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360554,"byte_end":9360557,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360558,"byte_end":9360617,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360618,"byte_end":9360675,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360676,"byte_end":9360694,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360695,"byte_end":9360709,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360710,"byte_end":9360717,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360718,"byte_end":9360721,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360722,"byte_end":9360747,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360748,"byte_end":9360751,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360752,"byte_end":9360826,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360827,"byte_end":9360907,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360908,"byte_end":9360987,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9360988,"byte_end":9361067,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361068,"byte_end":9361137,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361138,"byte_end":9361141,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361142,"byte_end":9361176,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361177,"byte_end":9361180,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361181,"byte_end":9361260,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361261,"byte_end":9361345,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361346,"byte_end":9361356,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361357,"byte_end":9361360,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361361,"byte_end":9361439,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361440,"byte_end":9361519,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361520,"byte_end":9361578,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361579,"byte_end":9361582,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361583,"byte_end":9361607,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361608,"byte_end":9361632,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361633,"byte_end":9361667,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361668,"byte_end":9361706,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361707,"byte_end":9361753,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361754,"byte_end":9361804,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361805,"byte_end":9361879,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361880,"byte_end":9361960,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9361961,"byte_end":9362023,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9362024,"byte_end":9362090,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9362091,"byte_end":9362155,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":5972},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9396350,"byte_end":9396359,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":5973}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5454},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9396848,"byte_end":9396860,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9396768,"byte_end":9396836,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5455},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397314,"byte_end":9397322,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9396935,"byte_end":9396997,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397002,"byte_end":9397005,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397010,"byte_end":9397024,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397029,"byte_end":9397032,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397037,"byte_end":9397044,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397049,"byte_end":9397068,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397073,"byte_end":9397076,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397081,"byte_end":9397099,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397104,"byte_end":9397125,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397130,"byte_end":9397168,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397173,"byte_end":9397200,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397205,"byte_end":9397235,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397240,"byte_end":9397243,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397248,"byte_end":9397280,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397285,"byte_end":9397290,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397295,"byte_end":9397302,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5456},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398177,"byte_end":9398187,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397396,"byte_end":9397475,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397480,"byte_end":9397483,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397488,"byte_end":9397500,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397505,"byte_end":9397508,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397513,"byte_end":9397587,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397592,"byte_end":9397667,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397672,"byte_end":9397730,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397735,"byte_end":9397738,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397743,"byte_end":9397757,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397762,"byte_end":9397765,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397770,"byte_end":9397789,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397794,"byte_end":9397813,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397818,"byte_end":9397821,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397826,"byte_end":9397844,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397849,"byte_end":9397870,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397875,"byte_end":9397913,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397918,"byte_end":9397945,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397950,"byte_end":9397980,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397985,"byte_end":9397988,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9397993,"byte_end":9398020,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398025,"byte_end":9398073,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398078,"byte_end":9398129,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398134,"byte_end":9398143,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398148,"byte_end":9398153,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398158,"byte_end":9398165,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5457},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398952,"byte_end":9398966,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self)\n-> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398328,"byte_end":9398397,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398402,"byte_end":9398474,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398479,"byte_end":9398492,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398497,"byte_end":9398500,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398505,"byte_end":9398519,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398524,"byte_end":9398527,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398532,"byte_end":9398551,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398556,"byte_end":9398575,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398580,"byte_end":9398583,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398588,"byte_end":9398606,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398611,"byte_end":9398632,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398637,"byte_end":9398675,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398680,"byte_end":9398707,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398712,"byte_end":9398742,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398747,"byte_end":9398750,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398755,"byte_end":9398805,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398810,"byte_end":9398858,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398863,"byte_end":9398904,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398909,"byte_end":9398918,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398923,"byte_end":9398928,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9398933,"byte_end":9398940,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5974},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417283,"byte_end":9417293,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":5976},{"krate":0,"index":5977}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5597},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418596,"byte_end":9418601,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417639,"byte_end":9417685,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417690,"byte_end":9417693,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417698,"byte_end":9417767,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417772,"byte_end":9417842,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417847,"byte_end":9417900,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417905,"byte_end":9417908,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417913,"byte_end":9417924,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417929,"byte_end":9417949,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417954,"byte_end":9417957,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417962,"byte_end":9417980,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417985,"byte_end":9418006,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418011,"byte_end":9418047,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418052,"byte_end":9418055,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418060,"byte_end":9418100,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418105,"byte_end":9418164,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418169,"byte_end":9418183,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418188,"byte_end":9418199,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418204,"byte_end":9418207,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418212,"byte_end":9418252,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418257,"byte_end":9418316,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418321,"byte_end":9418336,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418341,"byte_end":9418352,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418357,"byte_end":9418360,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418365,"byte_end":9418396,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418401,"byte_end":9418427,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418432,"byte_end":9418440,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418445,"byte_end":9418448,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418453,"byte_end":9418483,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418488,"byte_end":9418549,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418554,"byte_end":9418562,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418567,"byte_end":9418572,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418577,"byte_end":9418584,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6371},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470323,"byte_end":9470330,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":6372},{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469367,"byte_end":9469425,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469426,"byte_end":9469429,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469430,"byte_end":9469502,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469503,"byte_end":9469551,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469552,"byte_end":9469555,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469556,"byte_end":9469633,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469634,"byte_end":9469673,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469674,"byte_end":9469677,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469678,"byte_end":9469755,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469756,"byte_end":9469769,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469770,"byte_end":9469773,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469774,"byte_end":9469807,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469808,"byte_end":9469872,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469873,"byte_end":9469941,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469942,"byte_end":9469945,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469946,"byte_end":9469960,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469961,"byte_end":9469964,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469965,"byte_end":9469972,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9469973,"byte_end":9470005,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470006,"byte_end":9470009,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470010,"byte_end":9470025,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470026,"byte_end":9470050,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470051,"byte_end":9470100,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470101,"byte_end":9470131,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470132,"byte_end":9470174,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470175,"byte_end":9470222,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470223,"byte_end":9470243,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470244,"byte_end":9470266,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470267,"byte_end":9470270,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470271,"byte_end":9470297,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470298,"byte_end":9470303,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9470304,"byte_end":9470311,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6387},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9471612,"byte_end":9471630,"line_start":86,"line_end":86,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9471457,"byte_end":9471526,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9471531,"byte_end":9471534,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9471539,"byte_end":9471600,"line_start":85,"line_end":85,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6390},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473424,"byte_end":9473434,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9472931,"byte_end":9472969,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9472974,"byte_end":9472977,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9472982,"byte_end":9473053,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473058,"byte_end":9473134,"line_start":135,"line_end":135,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473139,"byte_end":9473193,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473198,"byte_end":9473201,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473206,"byte_end":9473220,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473225,"byte_end":9473228,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473233,"byte_end":9473240,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473245,"byte_end":9473268,"line_start":141,"line_end":141,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473273,"byte_end":9473276,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473281,"byte_end":9473330,"line_start":143,"line_end":143,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473335,"byte_end":9473356,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473361,"byte_end":9473377,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473382,"byte_end":9473400,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473405,"byte_end":9473412,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6391},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475125,"byte_end":9475139,"line_start":206,"line_end":206,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473662,"byte_end":9473723,"line_start":157,"line_end":157,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473728,"byte_end":9473731,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 0 and 32,768 though it is advised to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473736,"byte_end":9473808,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ keep this value on the smaller side.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473813,"byte_end":9473853,"line_start":160,"line_end":160,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473858,"byte_end":9473861,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473866,"byte_end":9473879,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473884,"byte_end":9473887,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473892,"byte_end":9473961,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473966,"byte_end":9473969,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473974,"byte_end":9473985,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473990,"byte_end":9473993,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9473998,"byte_end":9474071,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474076,"byte_end":9474137,"line_start":169,"line_end":169,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474142,"byte_end":9474145,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474150,"byte_end":9474153,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474158,"byte_end":9474172,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474177,"byte_end":9474180,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474185,"byte_end":9474229,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474234,"byte_end":9474237,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474242,"byte_end":9474249,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474254,"byte_end":9474277,"line_start":177,"line_end":177,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474282,"byte_end":9474285,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474290,"byte_end":9474359,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474364,"byte_end":9474413,"line_start":180,"line_end":180,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474418,"byte_end":9474444,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474449,"byte_end":9474465,"line_start":182,"line_end":182,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474470,"byte_end":9474488,"line_start":183,"line_end":183,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474493,"byte_end":9474496,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474501,"byte_end":9474529,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474534,"byte_end":9474541,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474546,"byte_end":9474549,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474554,"byte_end":9474645,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474650,"byte_end":9474653,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474658,"byte_end":9474665,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474670,"byte_end":9474693,"line_start":191,"line_end":191,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474698,"byte_end":9474701,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474706,"byte_end":9474763,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474768,"byte_end":9474798,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474803,"byte_end":9474854,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474859,"byte_end":9474875,"line_start":196,"line_end":196,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474880,"byte_end":9474898,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474903,"byte_end":9474906,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474911,"byte_end":9474976,"line_start":199,"line_end":199,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9474981,"byte_end":9475012,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475017,"byte_end":9475024,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475029,"byte_end":9475032,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475037,"byte_end":9475048,"line_start":203,"line_end":203,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475053,"byte_end":9475056,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475061,"byte_end":9475113,"line_start":205,"line_end":205,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6392},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475771,"byte_end":9475791,"line_start":225,"line_end":225,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads spawned by the Runtime used for blocking operations.","sig":null,"attributes":[{"value":"/ Specifies limit for threads spawned by the Runtime used for blocking operations.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475306,"byte_end":9475390,"line_start":212,"line_end":212,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475395,"byte_end":9475398,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475403,"byte_end":9475406,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `worker_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475411,"byte_end":9475493,"line_start":215,"line_end":215,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475498,"byte_end":9475501,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475506,"byte_end":9475535,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475540,"byte_end":9475543,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `worker_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475548,"byte_end":9475639,"line_start":219,"line_end":219,"column_start":5,"column_end":96}},{"value":"/ blocking annotations).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475644,"byte_end":9475670,"line_start":220,"line_end":220,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475675,"byte_end":9475678,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475683,"byte_end":9475694,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475699,"byte_end":9475702,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475707,"byte_end":9475759,"line_start":224,"line_end":224,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6393},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476347,"byte_end":9476358,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9475964,"byte_end":9476028,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476033,"byte_end":9476036,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476041,"byte_end":9476088,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476093,"byte_end":9476096,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476101,"byte_end":9476115,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476120,"byte_end":9476123,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476128,"byte_end":9476135,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476140,"byte_end":9476165,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476170,"byte_end":9476173,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476178,"byte_end":9476199,"line_start":240,"line_end":240,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476204,"byte_end":9476253,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476258,"byte_end":9476289,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476294,"byte_end":9476311,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476316,"byte_end":9476323,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476328,"byte_end":9476335,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6396},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477207,"byte_end":9477221,"line_start":272,"line_end":272,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476532,"byte_end":9476628,"line_start":252,"line_end":252,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476633,"byte_end":9476636,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476641,"byte_end":9476703,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476708,"byte_end":9476711,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476716,"byte_end":9476730,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476735,"byte_end":9476738,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476743,"byte_end":9476750,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476755,"byte_end":9476780,"line_start":259,"line_end":259,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476785,"byte_end":9476838,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476843,"byte_end":9476846,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476851,"byte_end":9476872,"line_start":262,"line_end":262,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476877,"byte_end":9476926,"line_start":263,"line_end":263,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476931,"byte_end":9476959,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9476964,"byte_end":9477027,"line_start":265,"line_end":265,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477032,"byte_end":9477093,"line_start":266,"line_end":266,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477098,"byte_end":9477134,"line_start":267,"line_end":267,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477139,"byte_end":9477149,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477154,"byte_end":9477171,"line_start":269,"line_end":269,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477176,"byte_end":9477183,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477188,"byte_end":9477195,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6398},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477986,"byte_end":9478003,"line_start":299,"line_end":299,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477397,"byte_end":9477451,"line_start":280,"line_end":280,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477456,"byte_end":9477459,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477464,"byte_end":9477536,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477541,"byte_end":9477574,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477579,"byte_end":9477582,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477587,"byte_end":9477655,"line_start":285,"line_end":285,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477660,"byte_end":9477721,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477726,"byte_end":9477729,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477734,"byte_end":9477748,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477753,"byte_end":9477756,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477761,"byte_end":9477768,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477773,"byte_end":9477798,"line_start":291,"line_end":291,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477803,"byte_end":9477806,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477811,"byte_end":9477832,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477837,"byte_end":9477886,"line_start":294,"line_end":294,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477891,"byte_end":9477928,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477933,"byte_end":9477950,"line_start":296,"line_end":296,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477955,"byte_end":9477962,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9477967,"byte_end":9477974,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6399},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478623,"byte_end":9478638,"line_start":323,"line_end":323,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478110,"byte_end":9478185,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478190,"byte_end":9478205,"line_start":305,"line_end":305,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478210,"byte_end":9478213,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478218,"byte_end":9478280,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478285,"byte_end":9478288,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478293,"byte_end":9478307,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478312,"byte_end":9478315,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478320,"byte_end":9478327,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478332,"byte_end":9478357,"line_start":312,"line_end":312,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478362,"byte_end":9478365,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478370,"byte_end":9478391,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478396,"byte_end":9478450,"line_start":315,"line_end":315,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478455,"byte_end":9478484,"line_start":316,"line_end":316,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478489,"byte_end":9478528,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478533,"byte_end":9478543,"line_start":318,"line_end":318,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478548,"byte_end":9478565,"line_start":319,"line_end":319,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478570,"byte_end":9478577,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478582,"byte_end":9478589,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478594,"byte_end":9478611,"line_start":322,"line_end":322,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6401},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479279,"byte_end":9479293,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478810,"byte_end":9478861,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478866,"byte_end":9478869,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478874,"byte_end":9478936,"line_start":333,"line_end":333,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478941,"byte_end":9478944,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478949,"byte_end":9478963,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478968,"byte_end":9478971,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478976,"byte_end":9478983,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9478988,"byte_end":9479013,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479018,"byte_end":9479021,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479026,"byte_end":9479047,"line_start":340,"line_end":340,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479052,"byte_end":9479106,"line_start":341,"line_end":341,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479111,"byte_end":9479139,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479144,"byte_end":9479184,"line_start":343,"line_end":343,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479189,"byte_end":9479199,"line_start":344,"line_end":344,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479204,"byte_end":9479221,"line_start":345,"line_end":345,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479226,"byte_end":9479233,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479238,"byte_end":9479245,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479250,"byte_end":9479267,"line_start":348,"line_end":348,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6403},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479857,"byte_end":9479862,"line_start":372,"line_end":372,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479465,"byte_end":9479502,"line_start":357,"line_end":357,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479507,"byte_end":9479510,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479515,"byte_end":9479575,"line_start":359,"line_end":359,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479580,"byte_end":9479583,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479588,"byte_end":9479602,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479607,"byte_end":9479610,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479615,"byte_end":9479622,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479627,"byte_end":9479659,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479664,"byte_end":9479667,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479672,"byte_end":9479731,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479736,"byte_end":9479739,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479744,"byte_end":9479767,"line_start":368,"line_end":368,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479772,"byte_end":9479821,"line_start":369,"line_end":369,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479826,"byte_end":9479833,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9479838,"byte_end":9479845,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6405},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480996,"byte_end":9481013,"line_start":409,"line_end":409,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480487,"byte_end":9480547,"line_start":392,"line_end":392,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480552,"byte_end":9480555,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480560,"byte_end":9480631,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480636,"byte_end":9480680,"line_start":395,"line_end":395,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480685,"byte_end":9480688,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480693,"byte_end":9480706,"line_start":397,"line_end":397,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480711,"byte_end":9480714,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480719,"byte_end":9480726,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480731,"byte_end":9480756,"line_start":400,"line_end":400,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480761,"byte_end":9480791,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480796,"byte_end":9480799,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480804,"byte_end":9480825,"line_start":403,"line_end":403,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480830,"byte_end":9480879,"line_start":404,"line_end":404,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480884,"byte_end":9480938,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480943,"byte_end":9480960,"line_start":406,"line_end":406,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480965,"byte_end":9480972,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9480977,"byte_end":9480984,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6558},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9482760,"byte_end":9482769,"line_start":462,"line_end":462,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6560},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9483293,"byte_end":9483304,"line_start":485,"line_end":485,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6600},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493323,"byte_end":9493329,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6605},{"krate":0,"index":6606}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493054,"byte_end":9493080,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493081,"byte_end":9493084,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493085,"byte_end":9493173,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493174,"byte_end":9493224,"line_start":11,"line_end":11,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493225,"byte_end":9493228,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493229,"byte_end":9493287,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6611},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494016,"byte_end":9494026,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":6613},{"krate":0,"index":6614}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493780,"byte_end":9493806,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493807,"byte_end":9493810,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493811,"byte_end":9493892,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493893,"byte_end":9493925,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493926,"byte_end":9493929,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9493930,"byte_end":9493987,"line_start":39,"line_end":39,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6505},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494500,"byte_end":9494505,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494110,"byte_end":9494185,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494190,"byte_end":9494268,"line_start":48,"line_end":48,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494273,"byte_end":9494341,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494346,"byte_end":9494349,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494354,"byte_end":9494394,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494399,"byte_end":9494446,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494451,"byte_end":9494488,"line_start":53,"line_end":53,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":6506},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495999,"byte_end":9496006,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494650,"byte_end":9494714,"line_start":61,"line_end":61,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494719,"byte_end":9494722,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494727,"byte_end":9494738,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494743,"byte_end":9494746,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494751,"byte_end":9494845,"line_start":65,"line_end":65,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494850,"byte_end":9494942,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494947,"byte_end":9495023,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495028,"byte_end":9495031,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495036,"byte_end":9495050,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495055,"byte_end":9495058,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495063,"byte_end":9495145,"line_start":71,"line_end":71,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495150,"byte_end":9495196,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495201,"byte_end":9495204,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495209,"byte_end":9495216,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495221,"byte_end":9495243,"line_start":75,"line_end":75,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495248,"byte_end":9495282,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495287,"byte_end":9495303,"line_start":77,"line_end":77,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495308,"byte_end":9495347,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495352,"byte_end":9495374,"line_start":79,"line_end":79,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495379,"byte_end":9495410,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495415,"byte_end":9495418,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495423,"byte_end":9495464,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495469,"byte_end":9495504,"line_start":83,"line_end":83,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495509,"byte_end":9495533,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495538,"byte_end":9495594,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495599,"byte_end":9495606,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495611,"byte_end":9495614,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495619,"byte_end":9495637,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495642,"byte_end":9495669,"line_start":89,"line_end":89,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495674,"byte_end":9495759,"line_start":90,"line_end":90,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495764,"byte_end":9495805,"line_start":91,"line_end":91,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495810,"byte_end":9495855,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495860,"byte_end":9495903,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495908,"byte_end":9495915,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495920,"byte_end":9495949,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495954,"byte_end":9495963,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495968,"byte_end":9495975,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9495980,"byte_end":9495987,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6507},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496304,"byte_end":9496315,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496111,"byte_end":9496171,"line_start":103,"line_end":103,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496176,"byte_end":9496179,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496184,"byte_end":9496235,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496240,"byte_end":9496243,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496248,"byte_end":9496292,"line_start":107,"line_end":107,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6508},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497270,"byte_end":9497275,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496418,"byte_end":9496460,"line_start":112,"line_end":112,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496465,"byte_end":9496468,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496473,"byte_end":9496544,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496549,"byte_end":9496624,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496629,"byte_end":9496652,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496657,"byte_end":9496660,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496665,"byte_end":9496724,"line_start":118,"line_end":118,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496729,"byte_end":9496732,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496737,"byte_end":9496758,"line_start":120,"line_end":120,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496763,"byte_end":9496766,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496771,"byte_end":9496785,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496790,"byte_end":9496793,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496798,"byte_end":9496805,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496810,"byte_end":9496842,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496847,"byte_end":9496850,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496855,"byte_end":9496871,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496876,"byte_end":9496901,"line_start":128,"line_end":128,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496906,"byte_end":9496943,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496948,"byte_end":9496985,"line_start":130,"line_end":130,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9496990,"byte_end":9497019,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497024,"byte_end":9497027,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497032,"byte_end":9497087,"line_start":133,"line_end":133,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497092,"byte_end":9497116,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497121,"byte_end":9497172,"line_start":135,"line_end":135,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497177,"byte_end":9497184,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497189,"byte_end":9497196,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497201,"byte_end":9497208,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497244,"byte_end":9497256,"line_start":139,"line_end":139,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6510},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9498178,"byte_end":9498192,"line_start":170,"line_end":170,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497575,"byte_end":9497641,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497646,"byte_end":9497661,"line_start":151,"line_end":151,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497666,"byte_end":9497669,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497674,"byte_end":9497688,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497693,"byte_end":9497696,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497701,"byte_end":9497708,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497713,"byte_end":9497745,"line_start":156,"line_end":156,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497750,"byte_end":9497753,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497758,"byte_end":9497774,"line_start":158,"line_end":158,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497779,"byte_end":9497804,"line_start":159,"line_end":159,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497809,"byte_end":9497846,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497851,"byte_end":9497888,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497893,"byte_end":9497922,"line_start":162,"line_end":162,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497927,"byte_end":9497930,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9497935,"byte_end":9498001,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9498006,"byte_end":9498036,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9498041,"byte_end":9498092,"line_start":166,"line_end":166,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9498097,"byte_end":9498104,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9498109,"byte_end":9498116,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9498152,"byte_end":9498164,"line_start":169,"line_end":169,"column_start":36,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6513},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9499461,"byte_end":9499476,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9499381,"byte_end":9499449,"line_start":205,"line_end":205,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6660},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9364532,"byte_end":9364539,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":6649},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9367163,"byte_end":9367169,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6650},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9368093,"byte_end":9368098,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9368063,"byte_end":9368075,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":6652},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9368871,"byte_end":9368885,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9368841,"byte_end":9368853,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":6655},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9370810,"byte_end":9370818,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6657},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9372306,"byte_end":9372311,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6658},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9373881,"byte_end":9373897,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6659},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9375326,"byte_end":9375345,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6706},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":6707},{"krate":0,"index":6721},{"krate":0,"index":6722},{"krate":0,"index":6725},{"krate":0,"index":6728},{"krate":0,"index":6941},{"krate":0,"index":7490},{"krate":0,"index":7593},{"krate":0,"index":7594},{"krate":0,"index":7597},{"krate":0,"index":7600},{"krate":0,"index":7603},{"krate":0,"index":7606},{"krate":0,"index":7690},{"krate":0,"index":7693},{"krate":0,"index":7848},{"krate":0,"index":7970},{"krate":0,"index":7971},{"krate":0,"index":7974},{"krate":0,"index":7977},{"krate":0,"index":8018},{"krate":0,"index":8019},{"krate":0,"index":8022},{"krate":0,"index":8025},{"krate":0,"index":8028},{"krate":0,"index":8139},{"krate":0,"index":8140},{"krate":0,"index":8143},{"krate":0,"index":8146},{"krate":0,"index":8149},{"krate":0,"index":8211},{"krate":0,"index":8214}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23059,"byte_end":23083,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501032,"byte_end":9501096,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501097,"byte_end":9501100,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501101,"byte_end":9501176,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501177,"byte_end":9501257,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501258,"byte_end":9501337,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501338,"byte_end":9501372,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501373,"byte_end":9501376,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501377,"byte_end":9501401,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501402,"byte_end":9501405,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501406,"byte_end":9501427,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501428,"byte_end":9501431,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501432,"byte_end":9501505,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501506,"byte_end":9501585,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501586,"byte_end":9501655,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501656,"byte_end":9501659,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501660,"byte_end":9501739,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501740,"byte_end":9501817,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501818,"byte_end":9501893,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501894,"byte_end":9501966,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9501967,"byte_end":9502039,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502040,"byte_end":9502118,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502119,"byte_end":9502132,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502133,"byte_end":9502136,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502137,"byte_end":9502215,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502216,"byte_end":9502277,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502278,"byte_end":9502281,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502282,"byte_end":9502306,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502307,"byte_end":9502310,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502311,"byte_end":9502390,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502391,"byte_end":9502469,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502470,"byte_end":9502514,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502515,"byte_end":9502518,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502519,"byte_end":9502599,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502600,"byte_end":9502616,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502617,"byte_end":9502620,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502621,"byte_end":9502628,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502629,"byte_end":9502658,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502659,"byte_end":9502662,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502663,"byte_end":9502706,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502707,"byte_end":9502769,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502770,"byte_end":9502775,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502776,"byte_end":9502779,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502780,"byte_end":9502798,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502799,"byte_end":9502820,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502821,"byte_end":9502863,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502864,"byte_end":9502867,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502868,"byte_end":9502901,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502902,"byte_end":9502949,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502950,"byte_end":9502984,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502985,"byte_end":9502996,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9502997,"byte_end":9503000,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503001,"byte_end":9503078,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503079,"byte_end":9503082,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503083,"byte_end":9503125,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503126,"byte_end":9503162,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503163,"byte_end":9503168,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503169,"byte_end":9503176,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503177,"byte_end":9503180,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503181,"byte_end":9503245,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503246,"byte_end":9503310,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503311,"byte_end":9503373,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503374,"byte_end":9503444,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503445,"byte_end":9503510,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503511,"byte_end":9503521,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503522,"byte_end":9503525,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503526,"byte_end":9503542,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503543,"byte_end":9503546,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503547,"byte_end":9503554,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503555,"byte_end":9503598,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503599,"byte_end":9503650,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503651,"byte_end":9503656,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503657,"byte_end":9503660,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503661,"byte_end":9503679,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503680,"byte_end":9503701,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503702,"byte_end":9503753,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503754,"byte_end":9503790,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503791,"byte_end":9503802,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503803,"byte_end":9503806,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503807,"byte_end":9503884,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503885,"byte_end":9503888,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503889,"byte_end":9503931,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503932,"byte_end":9503977,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503978,"byte_end":9503983,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503984,"byte_end":9503991,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503992,"byte_end":9503995,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9503996,"byte_end":9504018,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504019,"byte_end":9504062,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504063,"byte_end":9504066,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504067,"byte_end":9504088,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504089,"byte_end":9504092,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504093,"byte_end":9504170,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504171,"byte_end":9504251,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504252,"byte_end":9504307,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504308,"byte_end":9504311,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504312,"byte_end":9504390,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504391,"byte_end":9504411,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504412,"byte_end":9504415,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504416,"byte_end":9504423,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504424,"byte_end":9504450,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504451,"byte_end":9504454,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504455,"byte_end":9504508,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504509,"byte_end":9504563,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504564,"byte_end":9504569,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504570,"byte_end":9504573,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504574,"byte_end":9504592,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504593,"byte_end":9504614,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504615,"byte_end":9504661,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504662,"byte_end":9504665,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504666,"byte_end":9504699,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504700,"byte_end":9504728,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504729,"byte_end":9504781,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504782,"byte_end":9504826,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504827,"byte_end":9504840,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504841,"byte_end":9504852,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504853,"byte_end":9504856,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504857,"byte_end":9504904,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504905,"byte_end":9504943,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504944,"byte_end":9504953,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504954,"byte_end":9504959,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504960,"byte_end":9504967,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504968,"byte_end":9504971,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9504972,"byte_end":9505052,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505053,"byte_end":9505130,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505131,"byte_end":9505204,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505205,"byte_end":9505280,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505281,"byte_end":9505294,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505295,"byte_end":9505298,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505299,"byte_end":9505374,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505375,"byte_end":9505454,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505455,"byte_end":9505533,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505534,"byte_end":9505613,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505614,"byte_end":9505694,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505695,"byte_end":9505760,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505761,"byte_end":9505764,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505765,"byte_end":9505845,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505846,"byte_end":9505858,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505859,"byte_end":9505862,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505863,"byte_end":9505876,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505877,"byte_end":9505918,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505919,"byte_end":9505949,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505950,"byte_end":9505976,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505977,"byte_end":9505980,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9505981,"byte_end":9505999,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506000,"byte_end":9506039,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506040,"byte_end":9506115,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506116,"byte_end":9506162,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506163,"byte_end":9506166,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506167,"byte_end":9506191,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506192,"byte_end":9506271,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506272,"byte_end":9506303,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506304,"byte_end":9506336,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506337,"byte_end":9506340,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506341,"byte_end":9506378,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506379,"byte_end":9506441,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506442,"byte_end":9506457,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506458,"byte_end":9506467,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506468,"byte_end":9506471,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506472,"byte_end":9506551,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506552,"byte_end":9506627,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506628,"byte_end":9506706,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506707,"byte_end":9506754,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506755,"byte_end":9506772,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506773,"byte_end":9506776,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506777,"byte_end":9506824,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506825,"byte_end":9506866,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506867,"byte_end":9506876,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506877,"byte_end":9506880,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506881,"byte_end":9506895,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506896,"byte_end":9506901,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506902,"byte_end":9506909,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506910,"byte_end":9506913,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506914,"byte_end":9506989,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9506990,"byte_end":9507065,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507066,"byte_end":9507145,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507146,"byte_end":9507211,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507212,"byte_end":9507289,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507290,"byte_end":9507293,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507294,"byte_end":9507372,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507373,"byte_end":9507453,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507454,"byte_end":9507499,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507500,"byte_end":9507503,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507504,"byte_end":9507511,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507512,"byte_end":9507549,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507550,"byte_end":9507577,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507578,"byte_end":9507581,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507582,"byte_end":9507600,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507601,"byte_end":9507619,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507620,"byte_end":9507663,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507664,"byte_end":9507669,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507670,"byte_end":9507673,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507674,"byte_end":9507692,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507693,"byte_end":9507714,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507715,"byte_end":9507804,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507805,"byte_end":9507808,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507809,"byte_end":9507854,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507855,"byte_end":9507888,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507889,"byte_end":9507926,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507927,"byte_end":9507930,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507931,"byte_end":9507998,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9507999,"byte_end":9508026,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508027,"byte_end":9508061,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508062,"byte_end":9508105,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508106,"byte_end":9508143,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508144,"byte_end":9508197,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508198,"byte_end":9508219,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508220,"byte_end":9508237,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508238,"byte_end":9508251,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508252,"byte_end":9508263,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508264,"byte_end":9508267,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508268,"byte_end":9508306,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508307,"byte_end":9508310,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508311,"byte_end":9508371,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508372,"byte_end":9508396,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508397,"byte_end":9508437,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508438,"byte_end":9508441,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508442,"byte_end":9508497,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508498,"byte_end":9508558,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508559,"byte_end":9508562,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508563,"byte_end":9508633,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508634,"byte_end":9508683,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508684,"byte_end":9508687,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508688,"byte_end":9508741,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508742,"byte_end":9508758,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508759,"byte_end":9508768,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508769,"byte_end":9508772,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508773,"byte_end":9508814,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508815,"byte_end":9508866,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508867,"byte_end":9508906,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508907,"byte_end":9508916,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508917,"byte_end":9508922,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508923,"byte_end":9508930,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508931,"byte_end":9508934,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508935,"byte_end":9508951,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508952,"byte_end":9508955,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508956,"byte_end":9508982,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508983,"byte_end":9508986,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9508987,"byte_end":9509054,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509055,"byte_end":9509127,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509128,"byte_end":9509201,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509202,"byte_end":9509255,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509256,"byte_end":9509259,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509260,"byte_end":9509340,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509341,"byte_end":9509363,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509364,"byte_end":9509367,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509368,"byte_end":9509383,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509384,"byte_end":9509387,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509388,"byte_end":9509395,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509396,"byte_end":9509427,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509428,"byte_end":9509431,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509432,"byte_end":9509450,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509451,"byte_end":9509472,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509473,"byte_end":9509524,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509525,"byte_end":9509562,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509563,"byte_end":9509566,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509567,"byte_end":9509600,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509601,"byte_end":9509655,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509656,"byte_end":9509710,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509711,"byte_end":9509722,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509723,"byte_end":9509726,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509727,"byte_end":9509760,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509761,"byte_end":9509815,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509816,"byte_end":9509870,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509871,"byte_end":9509882,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509883,"byte_end":9509886,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509887,"byte_end":9509916,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509917,"byte_end":9509946,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509947,"byte_end":9509952,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509953,"byte_end":9509960,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509961,"byte_end":9509964,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9509965,"byte_end":9510014,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510015,"byte_end":9510018,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510019,"byte_end":9510041,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510042,"byte_end":9510045,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510046,"byte_end":9510122,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510123,"byte_end":9510201,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510202,"byte_end":9510281,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510282,"byte_end":9510347,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510348,"byte_end":9510351,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510352,"byte_end":9510432,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510433,"byte_end":9510436,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510437,"byte_end":9510511,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510512,"byte_end":9510585,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510586,"byte_end":9510599,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510600,"byte_end":9510603,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510604,"byte_end":9510677,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510678,"byte_end":9510758,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510759,"byte_end":9510834,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510835,"byte_end":9510838,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510839,"byte_end":9510846,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510847,"byte_end":9510874,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510875,"byte_end":9510922,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510923,"byte_end":9510926,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510927,"byte_end":9510943,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510944,"byte_end":9510947,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510948,"byte_end":9510990,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9510991,"byte_end":9511010,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511011,"byte_end":9511037,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511038,"byte_end":9511043,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511044,"byte_end":9511047,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511048,"byte_end":9511065,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511066,"byte_end":9511123,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511124,"byte_end":9511182,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511183,"byte_end":9511235,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511236,"byte_end":9511245,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511246,"byte_end":9511251,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511252,"byte_end":9511255,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511256,"byte_end":9511291,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511292,"byte_end":9511320,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511321,"byte_end":9511326,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511327,"byte_end":9511330,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511331,"byte_end":9511349,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511350,"byte_end":9511371,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511372,"byte_end":9511415,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511416,"byte_end":9511481,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511482,"byte_end":9511485,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511486,"byte_end":9511564,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511565,"byte_end":9511619,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511620,"byte_end":9511623,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511624,"byte_end":9511668,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511669,"byte_end":9511702,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511703,"byte_end":9511721,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511722,"byte_end":9511771,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511772,"byte_end":9511831,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511832,"byte_end":9511835,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511836,"byte_end":9511882,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511883,"byte_end":9511956,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511957,"byte_end":9511960,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9511961,"byte_end":9512035,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512036,"byte_end":9512076,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512077,"byte_end":9512118,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512119,"byte_end":9512176,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512177,"byte_end":9512217,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512218,"byte_end":9512235,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512236,"byte_end":9512249,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512250,"byte_end":9512261,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512262,"byte_end":9512265,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512266,"byte_end":9512299,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512300,"byte_end":9512303,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512304,"byte_end":9512382,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512383,"byte_end":9512437,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512438,"byte_end":9512448,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512449,"byte_end":9512526,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512527,"byte_end":9512605,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512606,"byte_end":9512641,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512642,"byte_end":9512665,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512666,"byte_end":9512729,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512730,"byte_end":9512766,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512767,"byte_end":9512770,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512771,"byte_end":9512821,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512822,"byte_end":9512901,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512902,"byte_end":9512977,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9512978,"byte_end":9513031,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513032,"byte_end":9513078,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513079,"byte_end":9513111,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513112,"byte_end":9513115,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513116,"byte_end":9513163,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513164,"byte_end":9513215,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513216,"byte_end":9513219,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513220,"byte_end":9513270,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513271,"byte_end":9513342,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513343,"byte_end":9513378,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513379,"byte_end":9513382,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513383,"byte_end":9513405,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513406,"byte_end":9513442,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513443,"byte_end":9513486,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513487,"byte_end":9513551,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513552,"byte_end":9513609,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513610,"byte_end":9513613,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513614,"byte_end":9513669,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513670,"byte_end":9513724,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513725,"byte_end":9513728,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513729,"byte_end":9513779,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513780,"byte_end":9513862,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513863,"byte_end":9513888,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513889,"byte_end":9513934,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513935,"byte_end":9513990,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513991,"byte_end":9513994,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9513995,"byte_end":9514072,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514073,"byte_end":9514142,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514143,"byte_end":9514217,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514218,"byte_end":9514243,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514244,"byte_end":9514284,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514285,"byte_end":9514340,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514341,"byte_end":9514375,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514376,"byte_end":9514401,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514402,"byte_end":9514423,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514424,"byte_end":9514441,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514442,"byte_end":9514457,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514458,"byte_end":9514461,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514462,"byte_end":9514495,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514496,"byte_end":9514505,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514506,"byte_end":9514509,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514510,"byte_end":9514551,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514552,"byte_end":9514586,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514587,"byte_end":9514596,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514597,"byte_end":9514602,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514603,"byte_end":9514610,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514611,"byte_end":9514614,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514615,"byte_end":9514660,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514661,"byte_end":9514714,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514715,"byte_end":9514718,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514719,"byte_end":9514746,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514747,"byte_end":9514750,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514751,"byte_end":9514825,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514826,"byte_end":9514900,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514901,"byte_end":9514971,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9514972,"byte_end":9515022,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515023,"byte_end":9515026,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515027,"byte_end":9515104,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515105,"byte_end":9515182,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515183,"byte_end":9515186,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515187,"byte_end":9515264,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515265,"byte_end":9515320,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515321,"byte_end":9515324,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515325,"byte_end":9515404,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515405,"byte_end":9515483,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515484,"byte_end":9515509,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515510,"byte_end":9515513,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515514,"byte_end":9515589,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515590,"byte_end":9515666,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515667,"byte_end":9515734,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515735,"byte_end":9515738,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515739,"byte_end":9515815,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515816,"byte_end":9515892,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515893,"byte_end":9515967,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9515968,"byte_end":9515995,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8285},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518304,"byte_end":9518311,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":8286},{"krate":0,"index":8287},{"krate":0,"index":8288}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517351,"byte_end":9517439,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517440,"byte_end":9517443,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517444,"byte_end":9517451,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517452,"byte_end":9517472,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517473,"byte_end":9517496,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517497,"byte_end":9517526,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517527,"byte_end":9517530,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517531,"byte_end":9517565,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517566,"byte_end":9517589,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517590,"byte_end":9517593,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517594,"byte_end":9517639,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517640,"byte_end":9517685,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517686,"byte_end":9517706,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517707,"byte_end":9517739,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517740,"byte_end":9517794,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517795,"byte_end":9517840,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517841,"byte_end":9517874,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517875,"byte_end":9517911,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517912,"byte_end":9517948,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517949,"byte_end":9517984,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9517985,"byte_end":9517999,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518000,"byte_end":9518011,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518012,"byte_end":9518017,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518018,"byte_end":9518092,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518093,"byte_end":9518131,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518132,"byte_end":9518187,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518188,"byte_end":9518259,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518260,"byte_end":9518267,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518268,"byte_end":9518275,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6715},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518774,"byte_end":9518777,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518534,"byte_end":9518601,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518606,"byte_end":9518609,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518614,"byte_end":9518702,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518707,"byte_end":9518762,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6716},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519850,"byte_end":9519854,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519376,"byte_end":9519436,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519441,"byte_end":9519444,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519449,"byte_end":9519525,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519530,"byte_end":9519555,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519560,"byte_end":9519563,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519568,"byte_end":9519661,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519666,"byte_end":9519759,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9519764,"byte_end":9519832,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":8297},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9521775,"byte_end":9521792,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9521639,"byte_end":9521739,"line_start":126,"line_end":126,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":6720},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9522040,"byte_end":9522049,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9521830,"byte_end":9521897,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9521902,"byte_end":9521905,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9521910,"byte_end":9522002,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9522007,"byte_end":9522028,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":6728},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":6729},{"krate":0,"index":6732},{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":6739},{"krate":0,"index":6742},{"krate":0,"index":6745},{"krate":0,"index":6748},{"krate":0,"index":6749},{"krate":0,"index":6752},{"krate":0,"index":6755},{"krate":0,"index":6758},{"krate":0,"index":6761},{"krate":0,"index":6762},{"krate":0,"index":6764},{"krate":0,"index":6767},{"krate":0,"index":6770},{"krate":0,"index":6771},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6777},{"krate":0,"index":6780},{"krate":0,"index":6783},{"krate":0,"index":6786},{"krate":0,"index":6789},{"krate":0,"index":6793},{"krate":0,"index":6808},{"krate":0,"index":6809},{"krate":0,"index":6815},{"krate":0,"index":6820},{"krate":0,"index":6826},{"krate":0,"index":6831},{"krate":0,"index":6835},{"krate":0,"index":6841},{"krate":0,"index":6845},{"krate":0,"index":6848},{"krate":0,"index":6852},{"krate":0,"index":6855},{"krate":0,"index":6858},{"krate":0,"index":6859},{"krate":0,"index":6861},{"krate":0,"index":6863},{"krate":0,"index":6865},{"krate":0,"index":6867},{"krate":0,"index":6869},{"krate":0,"index":6878},{"krate":0,"index":6880},{"krate":0,"index":6882},{"krate":0,"index":6885},{"krate":0,"index":6888},{"krate":0,"index":6892},{"krate":0,"index":6898},{"krate":0,"index":6901},{"krate":0,"index":6906},{"krate":0,"index":6911},{"krate":0,"index":6917},{"krate":0,"index":6923},{"krate":0,"index":6926},{"krate":0,"index":6929},{"krate":0,"index":6934},{"krate":0,"index":6939}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23059,"byte_end":23083,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522091,"byte_end":9522171,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522172,"byte_end":9522190,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522191,"byte_end":9522194,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522195,"byte_end":9522273,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522274,"byte_end":9522349,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522350,"byte_end":9522428,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522429,"byte_end":9522483,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522484,"byte_end":9522487,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522488,"byte_end":9522564,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522565,"byte_end":9522645,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522646,"byte_end":9522723,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522724,"byte_end":9522774,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522775,"byte_end":9522778,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522779,"byte_end":9522857,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522858,"byte_end":9522915,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522916,"byte_end":9522919,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522920,"byte_end":9522998,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9522999,"byte_end":9523071,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523072,"byte_end":9523088,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523089,"byte_end":9523092,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523093,"byte_end":9523107,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523108,"byte_end":9523111,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523112,"byte_end":9523192,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523193,"byte_end":9523272,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523273,"byte_end":9523350,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523351,"byte_end":9523429,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523430,"byte_end":9523437,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523438,"byte_end":9523441,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523442,"byte_end":9523519,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523520,"byte_end":9523595,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523596,"byte_end":9523676,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523677,"byte_end":9523680,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523681,"byte_end":9523753,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523754,"byte_end":9523832,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523833,"byte_end":9523909,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523910,"byte_end":9523969,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523970,"byte_end":9523973,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9523974,"byte_end":9524052,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524053,"byte_end":9524127,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524128,"byte_end":9524164,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524165,"byte_end":9524168,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524169,"byte_end":9524248,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524249,"byte_end":9524326,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524327,"byte_end":9524402,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524403,"byte_end":9524434,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524435,"byte_end":9524438,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524439,"byte_end":9524453,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524454,"byte_end":9524457,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524458,"byte_end":9524533,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524534,"byte_end":9524612,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524613,"byte_end":9524690,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524691,"byte_end":9524722,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524723,"byte_end":9524726,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524727,"byte_end":9524773,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524774,"byte_end":9524842,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524843,"byte_end":9524893,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524894,"byte_end":9524942,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9524943,"byte_end":9525018,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525019,"byte_end":9525094,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525095,"byte_end":9525147,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525148,"byte_end":9525151,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525152,"byte_end":9525166,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525167,"byte_end":9525170,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525171,"byte_end":9525186,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525187,"byte_end":9525190,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525191,"byte_end":9525198,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525199,"byte_end":9525230,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525231,"byte_end":9525234,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525235,"byte_end":9525253,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525254,"byte_end":9525275,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525276,"byte_end":9525327,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525328,"byte_end":9525365,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525366,"byte_end":9525369,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525370,"byte_end":9525403,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525404,"byte_end":9525458,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525459,"byte_end":9525513,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525514,"byte_end":9525525,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525526,"byte_end":9525529,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525530,"byte_end":9525563,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525564,"byte_end":9525618,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525619,"byte_end":9525673,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525674,"byte_end":9525685,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525686,"byte_end":9525689,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525690,"byte_end":9525719,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525720,"byte_end":9525749,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525750,"byte_end":9525755,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525756,"byte_end":9525763,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525764,"byte_end":9525767,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525768,"byte_end":9525784,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525785,"byte_end":9525788,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525789,"byte_end":9525796,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525797,"byte_end":9525828,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525829,"byte_end":9525832,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525833,"byte_end":9525851,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525852,"byte_end":9525873,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525874,"byte_end":9525923,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525924,"byte_end":9525927,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525928,"byte_end":9525957,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525958,"byte_end":9525987,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9525988,"byte_end":9526017,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526018,"byte_end":9526021,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526022,"byte_end":9526059,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526060,"byte_end":9526102,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526103,"byte_end":9526106,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526107,"byte_end":9526176,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526177,"byte_end":9526180,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526181,"byte_end":9526230,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526231,"byte_end":9526280,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526281,"byte_end":9526286,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526287,"byte_end":9526294,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6786},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527491,"byte_end":9527497,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6788}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526698,"byte_end":9526744,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526745,"byte_end":9526748,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526749,"byte_end":9526809,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526810,"byte_end":9526837,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526838,"byte_end":9526841,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526842,"byte_end":9526856,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526857,"byte_end":9526860,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526861,"byte_end":9526868,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526869,"byte_end":9526900,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526901,"byte_end":9526904,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526905,"byte_end":9526923,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526924,"byte_end":9526945,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526946,"byte_end":9526997,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9526998,"byte_end":9527035,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527036,"byte_end":9527039,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527040,"byte_end":9527073,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527074,"byte_end":9527128,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527129,"byte_end":9527183,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527184,"byte_end":9527195,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527196,"byte_end":9527199,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527200,"byte_end":9527233,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527234,"byte_end":9527288,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527289,"byte_end":9527343,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527344,"byte_end":9527355,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527356,"byte_end":9527359,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527360,"byte_end":9527389,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527390,"byte_end":9527419,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527420,"byte_end":9527425,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527426,"byte_end":9527433,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527434,"byte_end":9527437,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527438,"byte_end":9527479,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6789},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528337,"byte_end":9528345,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6791},{"krate":0,"index":6792}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527534,"byte_end":9527582,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527583,"byte_end":9527586,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527587,"byte_end":9527653,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527654,"byte_end":9527683,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527684,"byte_end":9527687,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527688,"byte_end":9527702,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527703,"byte_end":9527706,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527707,"byte_end":9527714,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527715,"byte_end":9527746,"line_start":169,"line_end":169,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527747,"byte_end":9527750,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527751,"byte_end":9527769,"line_start":171,"line_end":171,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527770,"byte_end":9527791,"line_start":172,"line_end":172,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527792,"byte_end":9527843,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527844,"byte_end":9527881,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527882,"byte_end":9527885,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527886,"byte_end":9527919,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527920,"byte_end":9527974,"line_start":177,"line_end":177,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9527975,"byte_end":9528029,"line_start":178,"line_end":178,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528030,"byte_end":9528041,"line_start":179,"line_end":179,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528042,"byte_end":9528045,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528046,"byte_end":9528079,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528080,"byte_end":9528134,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528135,"byte_end":9528189,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528190,"byte_end":9528201,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528202,"byte_end":9528205,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528206,"byte_end":9528235,"line_start":186,"line_end":186,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528236,"byte_end":9528265,"line_start":187,"line_end":187,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528266,"byte_end":9528271,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528272,"byte_end":9528279,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528280,"byte_end":9528283,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528284,"byte_end":9528325,"line_start":191,"line_end":191,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":6793},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528494,"byte_end":9528499,"line_start":200,"line_end":200,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":6794},{"krate":0,"index":8304},{"krate":0,"index":8308},{"krate":0,"index":6797},{"krate":0,"index":6800},{"krate":0,"index":8311},{"krate":0,"index":8317},{"krate":0,"index":8319},{"krate":0,"index":8320},{"krate":0,"index":6802},{"krate":0,"index":6804},{"krate":0,"index":8323},{"krate":0,"index":8331},{"krate":0,"index":8333},{"krate":0,"index":8334},{"krate":0,"index":6805},{"krate":0,"index":6807}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528506,"byte_end":9528531,"line_start":201,"line_end":201,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":8304},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529003,"byte_end":9529012,"line_start":214,"line_end":214,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528556,"byte_end":9528621,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528626,"byte_end":9528629,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528634,"byte_end":9528706,"line_start":207,"line_end":207,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528711,"byte_end":9528788,"line_start":208,"line_end":208,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528793,"byte_end":9528852,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528857,"byte_end":9528860,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528865,"byte_end":9528915,"line_start":211,"line_end":211,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9528920,"byte_end":9528966,"line_start":212,"line_end":212,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":8307},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529016,"byte_end":9529021,"line_start":214,"line_end":214,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8312},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529618,"byte_end":9529624,"line_start":232,"line_end":232,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529513,"byte_end":9529588,"line_start":230,"line_end":230,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529597,"byte_end":9529609,"line_start":231,"line_end":231,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8314},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529850,"byte_end":9529856,"line_start":238,"line_end":238,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":8311},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529635,"byte_end":9529707,"line_start":234,"line_end":234,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529716,"byte_end":9529776,"line_start":235,"line_end":235,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529785,"byte_end":9529788,"line_start":236,"line_end":236,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529797,"byte_end":9529841,"line_start":237,"line_end":237,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":8311},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529493,"byte_end":9529502,"line_start":229,"line_end":229,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError { Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":8312},{"krate":0,"index":8314}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529260,"byte_end":9529327,"line_start":224,"line_end":224,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529332,"byte_end":9529335,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529340,"byte_end":9529392,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529397,"byte_end":9529447,"line_start":227,"line_end":227,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8324},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530696,"byte_end":9530701,"line_start":262,"line_end":262,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8323},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530496,"byte_end":9530554,"line_start":258,"line_end":258,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530563,"byte_end":9530620,"line_start":259,"line_end":259,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530629,"byte_end":9530632,"line_start":260,"line_end":260,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530641,"byte_end":9530687,"line_start":261,"line_end":261,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8326},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530817,"byte_end":9530823,"line_start":266,"line_end":266,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8323},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530712,"byte_end":9530787,"line_start":264,"line_end":264,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530796,"byte_end":9530808,"line_start":265,"line_end":265,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8328},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9531096,"byte_end":9531102,"line_start":273,"line_end":273,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":8323},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530834,"byte_end":9530908,"line_start":268,"line_end":268,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530917,"byte_end":9530985,"line_start":269,"line_end":269,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530994,"byte_end":9531022,"line_start":270,"line_end":270,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9531031,"byte_end":9531034,"line_start":271,"line_end":271,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9531043,"byte_end":9531087,"line_start":272,"line_end":272,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":8323},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530473,"byte_end":9530485,"line_start":257,"line_end":257,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":8324},{"krate":0,"index":8326},{"krate":0,"index":8328}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530228,"byte_end":9530299,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530304,"byte_end":9530307,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530312,"byte_end":9530372,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530377,"byte_end":9530427,"line_start":255,"line_end":255,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":6859},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535916,"byte_end":9535923,"line_start":445,"line_end":445,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534290,"byte_end":9534366,"line_start":400,"line_end":400,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534367,"byte_end":9534416,"line_start":401,"line_end":401,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534417,"byte_end":9534420,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534421,"byte_end":9534490,"line_start":403,"line_end":403,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534491,"byte_end":9534541,"line_start":404,"line_end":404,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534542,"byte_end":9534545,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534546,"byte_end":9534620,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534621,"byte_end":9534696,"line_start":407,"line_end":407,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534697,"byte_end":9534765,"line_start":408,"line_end":408,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534766,"byte_end":9534769,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534770,"byte_end":9534846,"line_start":410,"line_end":410,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534847,"byte_end":9534928,"line_start":411,"line_end":411,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534929,"byte_end":9534968,"line_start":412,"line_end":412,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534969,"byte_end":9534972,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534973,"byte_end":9535019,"line_start":414,"line_end":414,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535020,"byte_end":9535088,"line_start":415,"line_end":415,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535089,"byte_end":9535139,"line_start":416,"line_end":416,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535140,"byte_end":9535192,"line_start":417,"line_end":417,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535193,"byte_end":9535252,"line_start":418,"line_end":418,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535253,"byte_end":9535312,"line_start":419,"line_end":419,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535313,"byte_end":9535316,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535317,"byte_end":9535331,"line_start":421,"line_end":421,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535332,"byte_end":9535335,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535336,"byte_end":9535343,"line_start":423,"line_end":423,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535344,"byte_end":9535375,"line_start":424,"line_end":424,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535376,"byte_end":9535379,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535380,"byte_end":9535398,"line_start":426,"line_end":426,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535399,"byte_end":9535420,"line_start":427,"line_end":427,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535421,"byte_end":9535472,"line_start":428,"line_end":428,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535473,"byte_end":9535510,"line_start":429,"line_end":429,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535511,"byte_end":9535514,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535515,"byte_end":9535548,"line_start":431,"line_end":431,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535549,"byte_end":9535603,"line_start":432,"line_end":432,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535604,"byte_end":9535658,"line_start":433,"line_end":433,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535659,"byte_end":9535670,"line_start":434,"line_end":434,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535671,"byte_end":9535674,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535675,"byte_end":9535708,"line_start":436,"line_end":436,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535709,"byte_end":9535763,"line_start":437,"line_end":437,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535764,"byte_end":9535818,"line_start":438,"line_end":438,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535819,"byte_end":9535830,"line_start":439,"line_end":439,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535831,"byte_end":9535834,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535835,"byte_end":9535864,"line_start":441,"line_end":441,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535865,"byte_end":9535894,"line_start":442,"line_end":442,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535895,"byte_end":9535900,"line_start":443,"line_end":443,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9535901,"byte_end":9535908,"line_start":444,"line_end":444,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6871},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538975,"byte_end":9538979,"line_start":542,"line_end":542,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537125,"byte_end":9537199,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537204,"byte_end":9537240,"line_start":493,"line_end":493,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537245,"byte_end":9537248,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537253,"byte_end":9537328,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537333,"byte_end":9537399,"line_start":496,"line_end":496,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537404,"byte_end":9537455,"line_start":497,"line_end":497,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537460,"byte_end":9537463,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537468,"byte_end":9537480,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537485,"byte_end":9537488,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537493,"byte_end":9537567,"line_start":501,"line_end":501,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537572,"byte_end":9537648,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537653,"byte_end":9537706,"line_start":503,"line_end":503,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537711,"byte_end":9537714,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537719,"byte_end":9537729,"line_start":505,"line_end":505,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537734,"byte_end":9537737,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537742,"byte_end":9537814,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537819,"byte_end":9537894,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537899,"byte_end":9537960,"line_start":509,"line_end":509,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537965,"byte_end":9537968,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537973,"byte_end":9538046,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538051,"byte_end":9538116,"line_start":512,"line_end":512,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538121,"byte_end":9538139,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538144,"byte_end":9538147,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538152,"byte_end":9538202,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538207,"byte_end":9538267,"line_start":516,"line_end":516,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538272,"byte_end":9538275,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538280,"byte_end":9538294,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538299,"byte_end":9538302,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538307,"byte_end":9538314,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538319,"byte_end":9538350,"line_start":521,"line_end":521,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538355,"byte_end":9538358,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538363,"byte_end":9538381,"line_start":523,"line_end":523,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538386,"byte_end":9538407,"line_start":524,"line_end":524,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538412,"byte_end":9538463,"line_start":525,"line_end":525,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538468,"byte_end":9538505,"line_start":526,"line_end":526,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538510,"byte_end":9538513,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538518,"byte_end":9538551,"line_start":528,"line_end":528,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538556,"byte_end":9538610,"line_start":529,"line_end":529,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538615,"byte_end":9538669,"line_start":530,"line_end":530,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538674,"byte_end":9538685,"line_start":531,"line_end":531,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538690,"byte_end":9538693,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538698,"byte_end":9538731,"line_start":533,"line_end":533,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538736,"byte_end":9538790,"line_start":534,"line_end":534,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538795,"byte_end":9538849,"line_start":535,"line_end":535,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538854,"byte_end":9538865,"line_start":536,"line_end":536,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538870,"byte_end":9538873,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538878,"byte_end":9538907,"line_start":538,"line_end":538,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538912,"byte_end":9538941,"line_start":539,"line_end":539,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538946,"byte_end":9538951,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9538956,"byte_end":9538963,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6873},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539739,"byte_end":9539748,"line_start":570,"line_end":570,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539144,"byte_end":9539221,"line_start":547,"line_end":547,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539226,"byte_end":9539255,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539260,"byte_end":9539263,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539268,"byte_end":9539282,"line_start":550,"line_end":550,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539287,"byte_end":9539290,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539295,"byte_end":9539302,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539307,"byte_end":9539338,"line_start":553,"line_end":553,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539343,"byte_end":9539346,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539351,"byte_end":9539369,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539374,"byte_end":9539395,"line_start":556,"line_end":556,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539400,"byte_end":9539447,"line_start":557,"line_end":557,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539452,"byte_end":9539455,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539460,"byte_end":9539487,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539492,"byte_end":9539521,"line_start":560,"line_end":560,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539526,"byte_end":9539529,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539534,"byte_end":9539570,"line_start":562,"line_end":562,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539575,"byte_end":9539578,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539583,"byte_end":9539612,"line_start":564,"line_end":564,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539617,"byte_end":9539620,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539625,"byte_end":9539670,"line_start":566,"line_end":566,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539675,"byte_end":9539705,"line_start":567,"line_end":567,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539710,"byte_end":9539715,"line_start":568,"line_end":568,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539720,"byte_end":9539727,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6874},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9541007,"byte_end":9541021,"line_start":611,"line_end":611,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539855,"byte_end":9539897,"line_start":575,"line_end":575,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539902,"byte_end":9539905,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539910,"byte_end":9539986,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9539991,"byte_end":9540064,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540069,"byte_end":9540089,"line_start":579,"line_end":579,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540094,"byte_end":9540097,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540102,"byte_end":9540112,"line_start":581,"line_end":581,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540117,"byte_end":9540120,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540125,"byte_end":9540195,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540200,"byte_end":9540268,"line_start":584,"line_end":584,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540273,"byte_end":9540286,"line_start":585,"line_end":585,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540291,"byte_end":9540294,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540299,"byte_end":9540351,"line_start":587,"line_end":587,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540356,"byte_end":9540406,"line_start":588,"line_end":588,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540411,"byte_end":9540457,"line_start":589,"line_end":589,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540462,"byte_end":9540522,"line_start":590,"line_end":590,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540527,"byte_end":9540575,"line_start":591,"line_end":591,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540580,"byte_end":9540583,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540588,"byte_end":9540602,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540607,"byte_end":9540610,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540615,"byte_end":9540622,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540627,"byte_end":9540658,"line_start":596,"line_end":596,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540663,"byte_end":9540666,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540671,"byte_end":9540689,"line_start":598,"line_end":598,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540694,"byte_end":9540715,"line_start":599,"line_end":599,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540720,"byte_end":9540768,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540773,"byte_end":9540776,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540781,"byte_end":9540824,"line_start":602,"line_end":602,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540829,"byte_end":9540832,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540837,"byte_end":9540875,"line_start":604,"line_end":604,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540880,"byte_end":9540883,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540888,"byte_end":9540931,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540936,"byte_end":9540939,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540944,"byte_end":9540973,"line_start":608,"line_end":608,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540978,"byte_end":9540983,"line_start":609,"line_end":609,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9540988,"byte_end":9540995,"line_start":610,"line_end":610,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6894},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550584,"byte_end":9550588,"line_start":894,"line_end":894,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548356,"byte_end":9548402,"line_start":829,"line_end":829,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548407,"byte_end":9548410,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548415,"byte_end":9548483,"line_start":831,"line_end":831,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548488,"byte_end":9548520,"line_start":832,"line_end":832,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548525,"byte_end":9548528,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548533,"byte_end":9548603,"line_start":834,"line_end":834,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548608,"byte_end":9548682,"line_start":835,"line_end":835,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548687,"byte_end":9548690,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548695,"byte_end":9548771,"line_start":837,"line_end":837,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548776,"byte_end":9548852,"line_start":838,"line_end":838,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548857,"byte_end":9548925,"line_start":839,"line_end":839,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548930,"byte_end":9549003,"line_start":840,"line_end":840,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549008,"byte_end":9549077,"line_start":841,"line_end":841,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549082,"byte_end":9549127,"line_start":842,"line_end":842,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549132,"byte_end":9549135,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549140,"byte_end":9549190,"line_start":844,"line_end":844,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549195,"byte_end":9549247,"line_start":845,"line_end":845,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549252,"byte_end":9549255,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549260,"byte_end":9549274,"line_start":847,"line_end":847,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549279,"byte_end":9549282,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549287,"byte_end":9549294,"line_start":849,"line_end":849,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549299,"byte_end":9549330,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549335,"byte_end":9549338,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549343,"byte_end":9549361,"line_start":852,"line_end":852,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549366,"byte_end":9549387,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549392,"byte_end":9549443,"line_start":854,"line_end":854,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549448,"byte_end":9549485,"line_start":855,"line_end":855,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549490,"byte_end":9549493,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549498,"byte_end":9549531,"line_start":857,"line_end":857,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549536,"byte_end":9549590,"line_start":858,"line_end":858,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549595,"byte_end":9549649,"line_start":859,"line_end":859,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549654,"byte_end":9549665,"line_start":860,"line_end":860,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549670,"byte_end":9549673,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549678,"byte_end":9549711,"line_start":862,"line_end":862,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549716,"byte_end":9549770,"line_start":863,"line_end":863,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549775,"byte_end":9549829,"line_start":864,"line_end":864,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549834,"byte_end":9549845,"line_start":865,"line_end":865,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549850,"byte_end":9549853,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549858,"byte_end":9549887,"line_start":867,"line_end":867,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549892,"byte_end":9549921,"line_start":868,"line_end":868,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549926,"byte_end":9549931,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549936,"byte_end":9549943,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549948,"byte_end":9549951,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549956,"byte_end":9549972,"line_start":872,"line_end":872,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549977,"byte_end":9549980,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549985,"byte_end":9549992,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9549997,"byte_end":9550028,"line_start":875,"line_end":875,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550033,"byte_end":9550036,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550041,"byte_end":9550059,"line_start":877,"line_end":877,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550064,"byte_end":9550085,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550090,"byte_end":9550139,"line_start":879,"line_end":879,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550144,"byte_end":9550147,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550152,"byte_end":9550181,"line_start":881,"line_end":881,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550186,"byte_end":9550215,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550220,"byte_end":9550249,"line_start":883,"line_end":883,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550254,"byte_end":9550257,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550262,"byte_end":9550299,"line_start":885,"line_end":885,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550304,"byte_end":9550346,"line_start":886,"line_end":886,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550351,"byte_end":9550354,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550359,"byte_end":9550428,"line_start":888,"line_end":888,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550433,"byte_end":9550436,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550441,"byte_end":9550490,"line_start":890,"line_end":890,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550495,"byte_end":9550544,"line_start":891,"line_end":891,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550549,"byte_end":9550554,"line_start":892,"line_end":892,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550559,"byte_end":9550566,"line_start":893,"line_end":893,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6897},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552365,"byte_end":9552373,"line_start":939,"line_end":939,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550706,"byte_end":9550779,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550784,"byte_end":9550787,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550792,"byte_end":9550864,"line_start":901,"line_end":901,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550869,"byte_end":9550893,"line_start":902,"line_end":902,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550898,"byte_end":9550901,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550906,"byte_end":9550986,"line_start":904,"line_end":904,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9550991,"byte_end":9551065,"line_start":905,"line_end":905,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551070,"byte_end":9551073,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551078,"byte_end":9551151,"line_start":907,"line_end":907,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551156,"byte_end":9551230,"line_start":908,"line_end":908,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551235,"byte_end":9551238,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551243,"byte_end":9551319,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551324,"byte_end":9551400,"line_start":911,"line_end":911,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551405,"byte_end":9551476,"line_start":912,"line_end":912,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551481,"byte_end":9551554,"line_start":913,"line_end":913,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551559,"byte_end":9551632,"line_start":914,"line_end":914,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551637,"byte_end":9551708,"line_start":915,"line_end":915,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551713,"byte_end":9551765,"line_start":916,"line_end":916,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551770,"byte_end":9551773,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551778,"byte_end":9551830,"line_start":918,"line_end":918,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551835,"byte_end":9551895,"line_start":919,"line_end":919,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551900,"byte_end":9551950,"line_start":920,"line_end":920,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551955,"byte_end":9551958,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551963,"byte_end":9551977,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551982,"byte_end":9551985,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9551990,"byte_end":9551997,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552002,"byte_end":9552033,"line_start":925,"line_end":925,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552038,"byte_end":9552041,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552046,"byte_end":9552064,"line_start":927,"line_end":927,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552069,"byte_end":9552090,"line_start":928,"line_end":928,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552095,"byte_end":9552145,"line_start":929,"line_end":929,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552150,"byte_end":9552153,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552158,"byte_end":9552198,"line_start":931,"line_end":931,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552203,"byte_end":9552206,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552211,"byte_end":9552240,"line_start":933,"line_end":933,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552245,"byte_end":9552248,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552253,"byte_end":9552296,"line_start":935,"line_end":935,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552301,"byte_end":9552331,"line_start":936,"line_end":936,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552336,"byte_end":9552341,"line_start":937,"line_end":937,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552346,"byte_end":9552353,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6941},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":6942},{"krate":0,"index":7040},{"krate":0,"index":7138},{"krate":0,"index":7139},{"krate":0,"index":7142},{"krate":0,"index":7145},{"krate":0,"index":7148},{"krate":0,"index":7151},{"krate":0,"index":7319},{"krate":0,"index":7386},{"krate":0,"index":7456},{"krate":0,"index":7457},{"krate":0,"index":7460},{"krate":0,"index":7463},{"krate":0,"index":7466},{"krate":0,"index":7489}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23059,"byte_end":23083,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9556775,"byte_end":9556845,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9556846,"byte_end":9556869,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9556870,"byte_end":9556873,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9556874,"byte_end":9556954,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9556955,"byte_end":9557033,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557034,"byte_end":9557110,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557111,"byte_end":9557190,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557191,"byte_end":9557271,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557272,"byte_end":9557343,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557344,"byte_end":9557366,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557367,"byte_end":9557370,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557371,"byte_end":9557448,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557449,"byte_end":9557520,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557521,"byte_end":9557586,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557587,"byte_end":9557671,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557672,"byte_end":9557750,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557751,"byte_end":9557828,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557829,"byte_end":9557907,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557908,"byte_end":9557987,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9557988,"byte_end":9558005,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558006,"byte_end":9558009,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558010,"byte_end":9558013,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558014,"byte_end":9558033,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558034,"byte_end":9558037,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558038,"byte_end":9558104,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558105,"byte_end":9558185,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558186,"byte_end":9558263,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558264,"byte_end":9558267,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558268,"byte_end":9558338,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558339,"byte_end":9558418,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558419,"byte_end":9558442,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558443,"byte_end":9558446,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558447,"byte_end":9558467,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558468,"byte_end":9558471,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558472,"byte_end":9558552,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558553,"byte_end":9558633,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558634,"byte_end":9558712,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558713,"byte_end":9558785,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558786,"byte_end":9558860,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558861,"byte_end":9558873,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558874,"byte_end":9558877,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558878,"byte_end":9558925,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558926,"byte_end":9558929,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9558930,"byte_end":9559011,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559012,"byte_end":9559047,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559048,"byte_end":9559051,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559052,"byte_end":9559132,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559133,"byte_end":9559214,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559215,"byte_end":9559289,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559290,"byte_end":9559371,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559372,"byte_end":9559417,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559418,"byte_end":9559421,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559422,"byte_end":9559502,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559503,"byte_end":9559581,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559582,"byte_end":9559648,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559649,"byte_end":9559731,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559732,"byte_end":9559796,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559797,"byte_end":9559800,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559801,"byte_end":9559842,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559843,"byte_end":9559888,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559889,"byte_end":9559942,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559943,"byte_end":9559998,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9559999,"byte_end":9560062,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560063,"byte_end":9560128,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560129,"byte_end":9560188,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560189,"byte_end":9560252,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560253,"byte_end":9560313,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560314,"byte_end":9560359,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560360,"byte_end":9560450,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":7068},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574451,"byte_end":9574457,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7070}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574326,"byte_end":9574371,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574372,"byte_end":9574375,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574376,"byte_end":9574439,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7071},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574751,"byte_end":9574757,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":7074}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574500,"byte_end":9574546,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574547,"byte_end":9574550,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and are used to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574551,"byte_end":9574624,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ guarantee channel capacity before generating a message to send.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574625,"byte_end":9574692,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574693,"byte_end":9574696,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574697,"byte_end":9574739,"line_start":28,"line_end":28,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7075},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574936,"byte_end":9574944,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7077}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574808,"byte_end":9574856,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574857,"byte_end":9574860,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9574861,"byte_end":9574924,"line_start":35,"line_end":35,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":7078},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576402,"byte_end":9576409,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575016,"byte_end":9575095,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575096,"byte_end":9575118,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575119,"byte_end":9575122,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575123,"byte_end":9575199,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575200,"byte_end":9575280,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575281,"byte_end":9575360,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575361,"byte_end":9575364,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575365,"byte_end":9575442,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575443,"byte_end":9575468,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575469,"byte_end":9575472,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575473,"byte_end":9575552,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575553,"byte_end":9575601,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575602,"byte_end":9575605,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575606,"byte_end":9575685,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575686,"byte_end":9575761,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575762,"byte_end":9575828,"line_start":56,"line_end":56,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575829,"byte_end":9575832,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575833,"byte_end":9575845,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575846,"byte_end":9575849,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575850,"byte_end":9575889,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575890,"byte_end":9575893,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575894,"byte_end":9575908,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575909,"byte_end":9575912,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575913,"byte_end":9575924,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575925,"byte_end":9575951,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575952,"byte_end":9575955,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575956,"byte_end":9575974,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575975,"byte_end":9575996,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9575997,"byte_end":9576043,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576044,"byte_end":9576047,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576048,"byte_end":9576081,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576082,"byte_end":9576110,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576111,"byte_end":9576161,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576162,"byte_end":9576211,"line_start":74,"line_end":74,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576212,"byte_end":9576239,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576240,"byte_end":9576257,"line_start":76,"line_end":76,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576258,"byte_end":9576271,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576272,"byte_end":9576283,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576284,"byte_end":9576287,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576288,"byte_end":9576333,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576334,"byte_end":9576370,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576371,"byte_end":9576380,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576381,"byte_end":9576386,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576387,"byte_end":9576394,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7084},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578083,"byte_end":9578087,"line_start":144,"line_end":144,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577009,"byte_end":9577055,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577060,"byte_end":9577063,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577068,"byte_end":9577140,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577145,"byte_end":9577199,"line_start":108,"line_end":108,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577204,"byte_end":9577207,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577212,"byte_end":9577226,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577231,"byte_end":9577234,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577239,"byte_end":9577246,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577251,"byte_end":9577277,"line_start":113,"line_end":113,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577282,"byte_end":9577285,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577290,"byte_end":9577308,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577313,"byte_end":9577334,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577339,"byte_end":9577385,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577390,"byte_end":9577393,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577398,"byte_end":9577431,"line_start":119,"line_end":119,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577436,"byte_end":9577480,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577485,"byte_end":9577496,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577501,"byte_end":9577504,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577509,"byte_end":9577560,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577565,"byte_end":9577607,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577612,"byte_end":9577617,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577622,"byte_end":9577629,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577634,"byte_end":9577637,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577642,"byte_end":9577666,"line_start":128,"line_end":128,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577671,"byte_end":9577674,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577679,"byte_end":9577686,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577691,"byte_end":9577717,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577722,"byte_end":9577725,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577730,"byte_end":9577748,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577753,"byte_end":9577774,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577779,"byte_end":9577825,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577830,"byte_end":9577833,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577838,"byte_end":9577878,"line_start":137,"line_end":137,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577883,"byte_end":9577923,"line_start":138,"line_end":138,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577928,"byte_end":9577931,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577936,"byte_end":9577987,"line_start":140,"line_end":140,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9577992,"byte_end":9578043,"line_start":141,"line_end":141,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578048,"byte_end":9578053,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578058,"byte_end":9578065,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7091},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9579018,"byte_end":9579031,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578208,"byte_end":9578270,"line_start":149,"line_end":149,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578275,"byte_end":9578278,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578283,"byte_end":9578295,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578300,"byte_end":9578303,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578308,"byte_end":9578375,"line_start":153,"line_end":153,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578380,"byte_end":9578392,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578397,"byte_end":9578400,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578405,"byte_end":9578419,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578424,"byte_end":9578427,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578432,"byte_end":9578439,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578444,"byte_end":9578464,"line_start":159,"line_end":159,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578469,"byte_end":9578501,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578506,"byte_end":9578532,"line_start":161,"line_end":161,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578537,"byte_end":9578540,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578545,"byte_end":9578560,"line_start":163,"line_end":163,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578565,"byte_end":9578616,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578621,"byte_end":9578624,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578629,"byte_end":9578676,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578681,"byte_end":9578734,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578739,"byte_end":9578750,"line_start":168,"line_end":168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578755,"byte_end":9578758,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578763,"byte_end":9578785,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578790,"byte_end":9578811,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578816,"byte_end":9578850,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578855,"byte_end":9578897,"line_start":173,"line_end":173,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578902,"byte_end":9578917,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578922,"byte_end":9578955,"line_start":175,"line_end":175,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578960,"byte_end":9578965,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578970,"byte_end":9578977,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9578982,"byte_end":9579006,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7092},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580997,"byte_end":9581002,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9579847,"byte_end":9579911,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9579916,"byte_end":9579919,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9579924,"byte_end":9579999,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580004,"byte_end":9580076,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580081,"byte_end":9580151,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580156,"byte_end":9580159,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ In order to guarantee no messages are dropped, after calling `close()`,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580164,"byte_end":9580239,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ `recv()` must be called until `None` is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580244,"byte_end":9580297,"line_start":207,"line_end":207,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580302,"byte_end":9580305,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580310,"byte_end":9580332,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580337,"byte_end":9580340,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580345,"byte_end":9580359,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580364,"byte_end":9580367,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580372,"byte_end":9580379,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580384,"byte_end":9580410,"line_start":214,"line_end":214,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580415,"byte_end":9580418,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580423,"byte_end":9580441,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580446,"byte_end":9580467,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580472,"byte_end":9580517,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580522,"byte_end":9580525,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580530,"byte_end":9580563,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580568,"byte_end":9580594,"line_start":221,"line_end":221,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580599,"byte_end":9580654,"line_start":222,"line_end":222,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580659,"byte_end":9580690,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580695,"byte_end":9580718,"line_start":224,"line_end":224,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580723,"byte_end":9580736,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580741,"byte_end":9580752,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580757,"byte_end":9580760,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580765,"byte_end":9580784,"line_start":228,"line_end":228,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580789,"byte_end":9580792,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580797,"byte_end":9580844,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580849,"byte_end":9580885,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580890,"byte_end":9580899,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580904,"byte_end":9580907,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580912,"byte_end":9580963,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580968,"byte_end":9580973,"line_start":235,"line_end":235,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9580978,"byte_end":9580985,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7093},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581843,"byte_end":9581852,"line_start":256,"line_end":256,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581054,"byte_end":9581108,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581113,"byte_end":9581116,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581121,"byte_end":9581145,"line_start":243,"line_end":243,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581150,"byte_end":9581153,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581158,"byte_end":9581232,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581237,"byte_end":9581251,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581256,"byte_end":9581318,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581323,"byte_end":9581397,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581402,"byte_end":9581454,"line_start":249,"line_end":249,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581459,"byte_end":9581462,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581467,"byte_end":9581539,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581544,"byte_end":9581620,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581625,"byte_end":9581701,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581706,"byte_end":9581777,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581782,"byte_end":9581831,"line_start":255,"line_end":255,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7102},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583948,"byte_end":9583952,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582308,"byte_end":9582359,"line_start":276,"line_end":276,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582364,"byte_end":9582367,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582372,"byte_end":9582448,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582453,"byte_end":9582529,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582534,"byte_end":9582608,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582613,"byte_end":9582688,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582693,"byte_end":9582762,"line_start":282,"line_end":282,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582767,"byte_end":9582839,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582844,"byte_end":9582875,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582880,"byte_end":9582883,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582888,"byte_end":9582900,"line_start":286,"line_end":286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582905,"byte_end":9582908,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582913,"byte_end":9582986,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582991,"byte_end":9583065,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583070,"byte_end":9583130,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583135,"byte_end":9583138,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583143,"byte_end":9583173,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583178,"byte_end":9583204,"line_start":293,"line_end":293,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583209,"byte_end":9583212,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583217,"byte_end":9583231,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583236,"byte_end":9583239,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583244,"byte_end":9583314,"line_start":297,"line_end":297,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583319,"byte_end":9583358,"line_start":298,"line_end":298,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583363,"byte_end":9583366,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583371,"byte_end":9583382,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583387,"byte_end":9583413,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583418,"byte_end":9583421,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583426,"byte_end":9583444,"line_start":303,"line_end":303,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583449,"byte_end":9583470,"line_start":304,"line_end":304,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583475,"byte_end":9583519,"line_start":305,"line_end":305,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583524,"byte_end":9583527,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583532,"byte_end":9583565,"line_start":307,"line_end":307,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583570,"byte_end":9583598,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583603,"byte_end":9583653,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583658,"byte_end":9583707,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583712,"byte_end":9583739,"line_start":311,"line_end":311,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583744,"byte_end":9583761,"line_start":312,"line_end":312,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583766,"byte_end":9583779,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583784,"byte_end":9583795,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583800,"byte_end":9583803,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583808,"byte_end":9583853,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583858,"byte_end":9583894,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583899,"byte_end":9583908,"line_start":318,"line_end":318,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583913,"byte_end":9583918,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9583923,"byte_end":9583930,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7105},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585086,"byte_end":9585092,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584204,"byte_end":9584248,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584253,"byte_end":9584256,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584261,"byte_end":9584336,"line_start":333,"line_end":333,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584341,"byte_end":9584396,"line_start":334,"line_end":334,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584401,"byte_end":9584404,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584409,"byte_end":9584423,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584428,"byte_end":9584431,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584436,"byte_end":9584443,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584448,"byte_end":9584474,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584479,"byte_end":9584482,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584487,"byte_end":9584505,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584510,"byte_end":9584531,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584536,"byte_end":9584583,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584588,"byte_end":9584618,"line_start":344,"line_end":344,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584623,"byte_end":9584653,"line_start":345,"line_end":345,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584658,"byte_end":9584688,"line_start":346,"line_end":346,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584693,"byte_end":9584723,"line_start":347,"line_end":347,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584728,"byte_end":9584761,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584766,"byte_end":9584787,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584792,"byte_end":9584803,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584808,"byte_end":9584811,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584816,"byte_end":9584839,"line_start":352,"line_end":352,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584844,"byte_end":9584869,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584874,"byte_end":9584899,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584904,"byte_end":9584929,"line_start":355,"line_end":355,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584934,"byte_end":9584959,"line_start":356,"line_end":356,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584964,"byte_end":9584988,"line_start":357,"line_end":357,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9584993,"byte_end":9585003,"line_start":358,"line_end":358,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585051,"byte_end":9585056,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585061,"byte_end":9585068,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7108},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587266,"byte_end":9587274,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585146,"byte_end":9585205,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585210,"byte_end":9585213,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585218,"byte_end":9585297,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585302,"byte_end":9585377,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585382,"byte_end":9585460,"line_start":370,"line_end":370,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585465,"byte_end":9585507,"line_start":371,"line_end":371,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585512,"byte_end":9585515,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585520,"byte_end":9585532,"line_start":373,"line_end":373,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585537,"byte_end":9585540,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585545,"byte_end":9585616,"line_start":375,"line_end":375,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585621,"byte_end":9585697,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585702,"byte_end":9585724,"line_start":377,"line_end":377,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585729,"byte_end":9585732,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585737,"byte_end":9585810,"line_start":379,"line_end":379,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585815,"byte_end":9585889,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585894,"byte_end":9585954,"line_start":381,"line_end":381,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585959,"byte_end":9585962,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585967,"byte_end":9585993,"line_start":383,"line_end":383,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9585998,"byte_end":9586022,"line_start":384,"line_end":384,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586027,"byte_end":9586057,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586062,"byte_end":9586065,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586070,"byte_end":9586084,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586089,"byte_end":9586092,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586097,"byte_end":9586104,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586109,"byte_end":9586135,"line_start":390,"line_end":390,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586140,"byte_end":9586143,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586148,"byte_end":9586166,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586171,"byte_end":9586192,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586197,"byte_end":9586243,"line_start":394,"line_end":394,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586248,"byte_end":9586293,"line_start":395,"line_end":395,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586298,"byte_end":9586328,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586333,"byte_end":9586336,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586341,"byte_end":9586374,"line_start":398,"line_end":398,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586379,"byte_end":9586418,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586423,"byte_end":9586462,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586467,"byte_end":9586529,"line_start":401,"line_end":401,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586534,"byte_end":9586545,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586550,"byte_end":9586553,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586558,"byte_end":9586591,"line_start":404,"line_end":404,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586596,"byte_end":9586645,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586650,"byte_end":9586697,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586702,"byte_end":9586738,"line_start":407,"line_end":407,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586743,"byte_end":9586754,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586759,"byte_end":9586762,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586767,"byte_end":9586787,"line_start":410,"line_end":410,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586792,"byte_end":9586831,"line_start":411,"line_end":411,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586836,"byte_end":9586881,"line_start":412,"line_end":412,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586886,"byte_end":9586889,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586894,"byte_end":9586933,"line_start":414,"line_end":414,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586938,"byte_end":9586983,"line_start":415,"line_end":415,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586988,"byte_end":9586991,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9586996,"byte_end":9587045,"line_start":417,"line_end":417,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587050,"byte_end":9587081,"line_start":418,"line_end":418,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587086,"byte_end":9587148,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587153,"byte_end":9587218,"line_start":420,"line_end":420,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587223,"byte_end":9587232,"line_start":421,"line_end":421,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587237,"byte_end":9587242,"line_start":422,"line_end":422,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587247,"byte_end":9587254,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7109},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589363,"byte_end":9589375,"line_start":483,"line_end":483,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587679,"byte_end":9587759,"line_start":436,"line_end":436,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587764,"byte_end":9587767,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587772,"byte_end":9587849,"line_start":438,"line_end":438,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587854,"byte_end":9587932,"line_start":439,"line_end":439,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587937,"byte_end":9587985,"line_start":440,"line_end":440,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587990,"byte_end":9587993,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9587998,"byte_end":9588024,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588029,"byte_end":9588032,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588037,"byte_end":9588049,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588054,"byte_end":9588057,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588062,"byte_end":9588135,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588140,"byte_end":9588197,"line_start":447,"line_end":447,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588202,"byte_end":9588283,"line_start":448,"line_end":448,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588288,"byte_end":9588291,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588296,"byte_end":9588326,"line_start":450,"line_end":450,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588331,"byte_end":9588357,"line_start":451,"line_end":451,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588362,"byte_end":9588365,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588370,"byte_end":9588384,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588389,"byte_end":9588392,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588397,"byte_end":9588475,"line_start":455,"line_end":455,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588480,"byte_end":9588551,"line_start":456,"line_end":456,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588556,"byte_end":9588559,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588564,"byte_end":9588575,"line_start":458,"line_end":458,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588580,"byte_end":9588606,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588611,"byte_end":9588650,"line_start":460,"line_end":460,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588655,"byte_end":9588658,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588663,"byte_end":9588681,"line_start":462,"line_end":462,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588686,"byte_end":9588707,"line_start":463,"line_end":463,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588712,"byte_end":9588756,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588761,"byte_end":9588764,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588769,"byte_end":9588802,"line_start":466,"line_end":466,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588807,"byte_end":9588835,"line_start":467,"line_end":467,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588840,"byte_end":9588926,"line_start":468,"line_end":468,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588931,"byte_end":9588984,"line_start":469,"line_end":469,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9588989,"byte_end":9589016,"line_start":470,"line_end":470,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589021,"byte_end":9589038,"line_start":471,"line_end":471,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589043,"byte_end":9589056,"line_start":472,"line_end":472,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589061,"byte_end":9589072,"line_start":473,"line_end":473,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589077,"byte_end":9589080,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589085,"byte_end":9589130,"line_start":475,"line_end":475,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589135,"byte_end":9589171,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589176,"byte_end":9589228,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589233,"byte_end":9589242,"line_start":478,"line_end":478,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589247,"byte_end":9589252,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589257,"byte_end":9589264,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589269,"byte_end":9589293,"line_start":481,"line_end":481,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7112},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590633,"byte_end":9590646,"line_start":530,"line_end":530,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589868,"byte_end":9589927,"line_start":502,"line_end":502,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589932,"byte_end":9589935,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589940,"byte_end":9589952,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589957,"byte_end":9589960,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9589965,"byte_end":9590032,"line_start":506,"line_end":506,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590037,"byte_end":9590049,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590054,"byte_end":9590057,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590062,"byte_end":9590076,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590081,"byte_end":9590084,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590089,"byte_end":9590096,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590101,"byte_end":9590121,"line_start":512,"line_end":512,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590126,"byte_end":9590158,"line_start":513,"line_end":513,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590163,"byte_end":9590189,"line_start":514,"line_end":514,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590194,"byte_end":9590197,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590202,"byte_end":9590217,"line_start":516,"line_end":516,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590222,"byte_end":9590272,"line_start":517,"line_end":517,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590277,"byte_end":9590280,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590285,"byte_end":9590332,"line_start":519,"line_end":519,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590337,"byte_end":9590379,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590384,"byte_end":9590395,"line_start":521,"line_end":521,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590400,"byte_end":9590403,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590408,"byte_end":9590461,"line_start":523,"line_end":523,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590466,"byte_end":9590516,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590521,"byte_end":9590532,"line_start":525,"line_end":525,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590537,"byte_end":9590570,"line_start":526,"line_end":526,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590575,"byte_end":9590580,"line_start":527,"line_end":527,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590585,"byte_end":9590592,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590597,"byte_end":9590621,"line_start":529,"line_end":529,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7113},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591337,"byte_end":9591346,"line_start":552,"line_end":552,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590755,"byte_end":9590819,"line_start":534,"line_end":534,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590824,"byte_end":9590894,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590899,"byte_end":9590910,"line_start":536,"line_end":536,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590915,"byte_end":9590918,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590923,"byte_end":9590968,"line_start":538,"line_end":538,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9590973,"byte_end":9591032,"line_start":539,"line_end":539,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591037,"byte_end":9591040,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591045,"byte_end":9591052,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591057,"byte_end":9591113,"line_start":542,"line_end":542,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591118,"byte_end":9591147,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591152,"byte_end":9591155,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591160,"byte_end":9591185,"line_start":545,"line_end":545,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591190,"byte_end":9591220,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591225,"byte_end":9591228,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591233,"byte_end":9591246,"line_start":548,"line_end":548,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591251,"byte_end":9591279,"line_start":549,"line_end":549,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591284,"byte_end":9591313,"line_start":550,"line_end":550,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591318,"byte_end":9591325,"line_start":551,"line_end":551,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7114},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592737,"byte_end":9592744,"line_start":594,"line_end":594,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591405,"byte_end":9591472,"line_start":556,"line_end":556,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591477,"byte_end":9591522,"line_start":557,"line_end":557,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591527,"byte_end":9591530,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591535,"byte_end":9591610,"line_start":559,"line_end":559,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591615,"byte_end":9591690,"line_start":560,"line_end":560,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591695,"byte_end":9591768,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591773,"byte_end":9591848,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591853,"byte_end":9591875,"line_start":563,"line_end":563,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591880,"byte_end":9591883,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591888,"byte_end":9591964,"line_start":565,"line_end":565,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591969,"byte_end":9591988,"line_start":566,"line_end":566,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9591993,"byte_end":9591996,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592001,"byte_end":9592023,"line_start":568,"line_end":568,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592028,"byte_end":9592054,"line_start":569,"line_end":569,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592059,"byte_end":9592062,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592067,"byte_end":9592081,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592086,"byte_end":9592089,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592094,"byte_end":9592101,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592106,"byte_end":9592132,"line_start":574,"line_end":574,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592137,"byte_end":9592140,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592145,"byte_end":9592163,"line_start":576,"line_end":576,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592168,"byte_end":9592189,"line_start":577,"line_end":577,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592194,"byte_end":9592238,"line_start":578,"line_end":578,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592243,"byte_end":9592246,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592251,"byte_end":9592278,"line_start":580,"line_end":580,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592283,"byte_end":9592332,"line_start":581,"line_end":581,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592337,"byte_end":9592340,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592345,"byte_end":9592411,"line_start":583,"line_end":583,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592416,"byte_end":9592446,"line_start":584,"line_end":584,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592451,"byte_end":9592494,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592499,"byte_end":9592502,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592507,"byte_end":9592548,"line_start":587,"line_end":587,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592553,"byte_end":9592578,"line_start":588,"line_end":588,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592583,"byte_end":9592586,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592591,"byte_end":9592642,"line_start":590,"line_end":590,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592647,"byte_end":9592697,"line_start":591,"line_end":591,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592702,"byte_end":9592707,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9592712,"byte_end":9592719,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7125},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594451,"byte_end":9594455,"line_start":655,"line_end":655,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593378,"byte_end":9593424,"line_start":623,"line_end":623,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593429,"byte_end":9593432,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593437,"byte_end":9593512,"line_start":625,"line_end":625,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593517,"byte_end":9593591,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593596,"byte_end":9593670,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593675,"byte_end":9593723,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593728,"byte_end":9593731,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593736,"byte_end":9593776,"line_start":630,"line_end":630,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593781,"byte_end":9593784,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593789,"byte_end":9593803,"line_start":632,"line_end":632,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593808,"byte_end":9593811,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593816,"byte_end":9593823,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593828,"byte_end":9593854,"line_start":635,"line_end":635,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593859,"byte_end":9593862,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593867,"byte_end":9593885,"line_start":637,"line_end":637,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593890,"byte_end":9593911,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593916,"byte_end":9593960,"line_start":639,"line_end":639,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593965,"byte_end":9593968,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593973,"byte_end":9594000,"line_start":641,"line_end":641,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594005,"byte_end":9594054,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594059,"byte_end":9594062,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594067,"byte_end":9594133,"line_start":644,"line_end":644,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594138,"byte_end":9594168,"line_start":645,"line_end":645,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594173,"byte_end":9594216,"line_start":646,"line_end":646,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594221,"byte_end":9594224,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594229,"byte_end":9594268,"line_start":648,"line_end":648,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594273,"byte_end":9594298,"line_start":649,"line_end":649,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594303,"byte_end":9594306,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594311,"byte_end":9594362,"line_start":651,"line_end":651,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594367,"byte_end":9594417,"line_start":652,"line_end":652,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594422,"byte_end":9594427,"line_start":653,"line_end":653,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594432,"byte_end":9594439,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7406},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616698,"byte_end":9616713,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":7408}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616540,"byte_end":9616594,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616595,"byte_end":9616598,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616599,"byte_end":9616631,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616632,"byte_end":9616686,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7415},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617291,"byte_end":9617308,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":7417}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617130,"byte_end":9617187,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617188,"byte_end":9617191,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617192,"byte_end":9617224,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617225,"byte_end":9617279,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":7421},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618140,"byte_end":9618157,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617607,"byte_end":9617683,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617684,"byte_end":9617715,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617716,"byte_end":9617719,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617720,"byte_end":9617800,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617801,"byte_end":9617880,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617881,"byte_end":9617894,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617895,"byte_end":9617898,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617899,"byte_end":9617978,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617979,"byte_end":9618055,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618056,"byte_end":9618132,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7427},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619636,"byte_end":9619640,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618566,"byte_end":9618612,"line_start":76,"line_end":76,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618617,"byte_end":9618620,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618625,"byte_end":9618697,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618702,"byte_end":9618756,"line_start":79,"line_end":79,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618761,"byte_end":9618764,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618769,"byte_end":9618783,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618788,"byte_end":9618791,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618796,"byte_end":9618803,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618808,"byte_end":9618834,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618839,"byte_end":9618842,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618847,"byte_end":9618865,"line_start":86,"line_end":86,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618870,"byte_end":9618891,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618896,"byte_end":9618949,"line_start":88,"line_end":88,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618954,"byte_end":9618957,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618962,"byte_end":9618995,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619000,"byte_end":9619038,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619043,"byte_end":9619054,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619059,"byte_end":9619062,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619067,"byte_end":9619118,"line_start":94,"line_end":94,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619123,"byte_end":9619165,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619170,"byte_end":9619175,"line_start":96,"line_end":96,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619180,"byte_end":9619187,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619192,"byte_end":9619195,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619200,"byte_end":9619224,"line_start":99,"line_end":99,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619229,"byte_end":9619232,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619237,"byte_end":9619244,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619249,"byte_end":9619275,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619280,"byte_end":9619283,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619288,"byte_end":9619306,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619311,"byte_end":9619332,"line_start":105,"line_end":105,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619337,"byte_end":9619390,"line_start":106,"line_end":106,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619395,"byte_end":9619398,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619403,"byte_end":9619437,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619442,"byte_end":9619476,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619481,"byte_end":9619484,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619489,"byte_end":9619540,"line_start":111,"line_end":111,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619545,"byte_end":9619596,"line_start":112,"line_end":112,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619601,"byte_end":9619606,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619611,"byte_end":9619618,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7434},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620447,"byte_end":9620460,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619762,"byte_end":9619824,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619829,"byte_end":9619832,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619837,"byte_end":9619849,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619854,"byte_end":9619857,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619862,"byte_end":9619929,"line_start":125,"line_end":125,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619934,"byte_end":9619946,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619951,"byte_end":9619954,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619959,"byte_end":9619973,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619978,"byte_end":9619981,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619986,"byte_end":9619993,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9619998,"byte_end":9620018,"line_start":131,"line_end":131,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620023,"byte_end":9620049,"line_start":132,"line_end":132,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620054,"byte_end":9620057,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620062,"byte_end":9620080,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620085,"byte_end":9620106,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620111,"byte_end":9620170,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620175,"byte_end":9620178,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620183,"byte_end":9620230,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620235,"byte_end":9620288,"line_start":139,"line_end":139,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620293,"byte_end":9620304,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620309,"byte_end":9620312,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620317,"byte_end":9620345,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620350,"byte_end":9620384,"line_start":143,"line_end":143,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620389,"byte_end":9620394,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620399,"byte_end":9620406,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620411,"byte_end":9620435,"line_start":146,"line_end":146,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":7435},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620780,"byte_end":9620785,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620543,"byte_end":9620607,"line_start":151,"line_end":151,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620612,"byte_end":9620615,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620620,"byte_end":9620695,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620700,"byte_end":9620768,"line_start":154,"line_end":154,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":7436},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621626,"byte_end":9621635,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620837,"byte_end":9620891,"line_start":159,"line_end":159,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620896,"byte_end":9620899,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620904,"byte_end":9620928,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620933,"byte_end":9620936,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9620941,"byte_end":9621015,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621020,"byte_end":9621034,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621039,"byte_end":9621101,"line_start":165,"line_end":165,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621106,"byte_end":9621180,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621185,"byte_end":9621237,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621242,"byte_end":9621245,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621250,"byte_end":9621322,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621327,"byte_end":9621403,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621408,"byte_end":9621484,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621489,"byte_end":9621560,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621565,"byte_end":9621614,"line_start":173,"line_end":173,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7440},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622563,"byte_end":9622567,"line_start":196,"line_end":196,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621875,"byte_end":9621949,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621954,"byte_end":9621957,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621962,"byte_end":9622047,"line_start":186,"line_end":186,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622052,"byte_end":9622133,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622138,"byte_end":9622206,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622211,"byte_end":9622214,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622219,"byte_end":9622292,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622297,"byte_end":9622368,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622373,"byte_end":9622450,"line_start":192,"line_end":192,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622455,"byte_end":9622458,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622463,"byte_end":9622502,"line_start":194,"line_end":194,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9622507,"byte_end":9622551,"line_start":195,"line_end":195,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7452},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624496,"byte_end":9624502,"line_start":266,"line_end":266,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623605,"byte_end":9623649,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623654,"byte_end":9623657,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623662,"byte_end":9623737,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623742,"byte_end":9623797,"line_start":238,"line_end":238,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623802,"byte_end":9623805,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623810,"byte_end":9623824,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623829,"byte_end":9623832,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623837,"byte_end":9623844,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623849,"byte_end":9623875,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623880,"byte_end":9623883,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623888,"byte_end":9623906,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623911,"byte_end":9623932,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623937,"byte_end":9623993,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9623998,"byte_end":9624028,"line_start":248,"line_end":248,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624033,"byte_end":9624063,"line_start":249,"line_end":249,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624068,"byte_end":9624098,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624103,"byte_end":9624133,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624138,"byte_end":9624171,"line_start":252,"line_end":252,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624176,"byte_end":9624197,"line_start":253,"line_end":253,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624202,"byte_end":9624213,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624218,"byte_end":9624221,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624226,"byte_end":9624249,"line_start":256,"line_end":256,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624254,"byte_end":9624279,"line_start":257,"line_end":257,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624284,"byte_end":9624309,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624314,"byte_end":9624339,"line_start":259,"line_end":259,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624344,"byte_end":9624369,"line_start":260,"line_end":260,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624374,"byte_end":9624398,"line_start":261,"line_end":261,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624403,"byte_end":9624413,"line_start":262,"line_end":262,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624461,"byte_end":9624466,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624471,"byte_end":9624478,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7455},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625199,"byte_end":9625208,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624555,"byte_end":9624619,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624624,"byte_end":9624673,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624678,"byte_end":9624728,"line_start":271,"line_end":271,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624733,"byte_end":9624736,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624741,"byte_end":9624804,"line_start":273,"line_end":273,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624809,"byte_end":9624886,"line_start":274,"line_end":274,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624891,"byte_end":9624894,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624899,"byte_end":9624906,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624911,"byte_end":9624975,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9624980,"byte_end":9625009,"line_start":278,"line_end":278,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625014,"byte_end":9625017,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625022,"byte_end":9625047,"line_start":280,"line_end":280,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625052,"byte_end":9625082,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625087,"byte_end":9625090,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625095,"byte_end":9625108,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625113,"byte_end":9625141,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625146,"byte_end":9625175,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9625180,"byte_end":9625187,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7466},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":7467},{"krate":0,"index":7470},{"krate":0,"index":8345},{"krate":0,"index":8349},{"krate":0,"index":7473},{"krate":0,"index":7476},{"krate":0,"index":8352},{"krate":0,"index":8360},{"krate":0,"index":7478},{"krate":0,"index":7480},{"krate":0,"index":7483},{"krate":0,"index":8363},{"krate":0,"index":8366},{"krate":0,"index":7486},{"krate":0,"index":7488},{"krate":0,"index":8373},{"krate":0,"index":8381},{"krate":0,"index":8368},{"krate":0,"index":8370}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625265,"byte_end":9625288,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8345},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625392,"byte_end":9625401,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625328,"byte_end":9625363,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":8348},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625405,"byte_end":9625410,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":8345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8354},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625954,"byte_end":9625958,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":8352},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625822,"byte_end":9625890,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625895,"byte_end":9625949,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8357},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626059,"byte_end":9626065,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":8352},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625968,"byte_end":9626037,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626042,"byte_end":9626054,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":8352},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625800,"byte_end":9625812,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":8354},{"krate":0,"index":8357}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625654,"byte_end":9625725,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625726,"byte_end":9625773,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8363},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626703,"byte_end":9626712,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626641,"byte_end":9626674,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8375},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9628218,"byte_end":9628225,"line_start":109,"line_end":109,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":8373},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8378},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9628338,"byte_end":9628344,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":8373},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8373},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9628056,"byte_end":9628072,"line_start":106,"line_end":106,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> { Timeout(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":8375},{"krate":0,"index":8378}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":24365,"byte_end":24389,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7513},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633330,"byte_end":9633335,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":7515},{"krate":0,"index":7516}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629077,"byte_end":9629115,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629116,"byte_end":9629119,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629120,"byte_end":9629198,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629199,"byte_end":9629275,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629276,"byte_end":9629300,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629301,"byte_end":9629304,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629305,"byte_end":9629346,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629347,"byte_end":9629350,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629351,"byte_end":9629431,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629432,"byte_end":9629511,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629512,"byte_end":9629575,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629576,"byte_end":9629579,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629580,"byte_end":9629659,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629660,"byte_end":9629740,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629741,"byte_end":9629819,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629820,"byte_end":9629899,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629900,"byte_end":9629978,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9629979,"byte_end":9630059,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630060,"byte_end":9630073,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630074,"byte_end":9630077,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630078,"byte_end":9630157,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630158,"byte_end":9630234,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630235,"byte_end":9630312,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630313,"byte_end":9630346,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630347,"byte_end":9630350,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630351,"byte_end":9630426,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630427,"byte_end":9630505,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630506,"byte_end":9630548,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630549,"byte_end":9630552,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630553,"byte_end":9630580,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630581,"byte_end":9630629,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630630,"byte_end":9630708,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630709,"byte_end":9630712,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630713,"byte_end":9630728,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630729,"byte_end":9630732,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630733,"byte_end":9630751,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630752,"byte_end":9630779,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630780,"byte_end":9630803,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630804,"byte_end":9630807,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630808,"byte_end":9630826,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630827,"byte_end":9630848,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630849,"byte_end":9630893,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630894,"byte_end":9630933,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630934,"byte_end":9630937,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630938,"byte_end":9630971,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9630972,"byte_end":9631018,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631019,"byte_end":9631042,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631043,"byte_end":9631054,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631055,"byte_end":9631058,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631059,"byte_end":9631101,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631102,"byte_end":9631121,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631122,"byte_end":9631127,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631128,"byte_end":9631135,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631136,"byte_end":9631139,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631140,"byte_end":9631143,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631144,"byte_end":9631162,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631163,"byte_end":9631190,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631191,"byte_end":9631214,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631215,"byte_end":9631218,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631219,"byte_end":9631237,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631238,"byte_end":9631259,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631260,"byte_end":9631304,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631305,"byte_end":9631308,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631309,"byte_end":9631332,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631333,"byte_end":9631379,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631380,"byte_end":9631417,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631418,"byte_end":9631450,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631451,"byte_end":9631508,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631509,"byte_end":9631540,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631541,"byte_end":9631582,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631583,"byte_end":9631600,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631601,"byte_end":9631616,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631617,"byte_end":9631626,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631627,"byte_end":9631630,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631631,"byte_end":9631645,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631646,"byte_end":9631688,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631689,"byte_end":9631711,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631712,"byte_end":9631725,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631726,"byte_end":9631735,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631736,"byte_end":9631770,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631771,"byte_end":9631776,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631777,"byte_end":9631784,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631785,"byte_end":9631861,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631862,"byte_end":9631935,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631936,"byte_end":9631951,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9631952,"byte_end":9632027,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632028,"byte_end":9632104,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632105,"byte_end":9632157,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632158,"byte_end":9632161,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632162,"byte_end":9632240,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632241,"byte_end":9632321,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632322,"byte_end":9632398,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632399,"byte_end":9632476,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632477,"byte_end":9632555,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632556,"byte_end":9632636,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632637,"byte_end":9632717,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632718,"byte_end":9632787,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632788,"byte_end":9632791,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632792,"byte_end":9632871,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632872,"byte_end":9632951,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9632952,"byte_end":9633030,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633031,"byte_end":9633092,"line_start":112,"line_end":112,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633093,"byte_end":9633096,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633097,"byte_end":9633124,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633125,"byte_end":9633162,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633163,"byte_end":9633197,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633198,"byte_end":9633247,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633248,"byte_end":9633285,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633286,"byte_end":9633318,"line_start":119,"line_end":119,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7517},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633764,"byte_end":9633774,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":7520}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633403,"byte_end":9633434,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633435,"byte_end":9633438,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633439,"byte_end":9633518,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633519,"byte_end":9633594,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633595,"byte_end":9633628,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633629,"byte_end":9633632,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633633,"byte_end":9633711,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633712,"byte_end":9633752,"line_start":132,"line_end":132,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7521},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634561,"byte_end":9634576,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":7523}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633819,"byte_end":9633857,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633858,"byte_end":9633861,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633862,"byte_end":9633943,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9633944,"byte_end":9634024,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634025,"byte_end":9634099,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634100,"byte_end":9634161,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634162,"byte_end":9634165,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634166,"byte_end":9634245,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-couned pointer to the original","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634246,"byte_end":9634324,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634325,"byte_end":9634393,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634394,"byte_end":9634397,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634398,"byte_end":9634476,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634477,"byte_end":9634517,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634518,"byte_end":9634521,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634522,"byte_end":9634549,"line_start":151,"line_end":151,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8384},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635284,"byte_end":9635296,"line_start":170,"line_end":170,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635076,"byte_end":9635133,"line_start":164,"line_end":164,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635134,"byte_end":9635137,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635138,"byte_end":9635210,"line_start":166,"line_end":166,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635211,"byte_end":9635214,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635215,"byte_end":9635255,"line_start":168,"line_end":168,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":7537},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636512,"byte_end":9636515,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636309,"byte_end":9636367,"line_start":205,"line_end":205,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636372,"byte_end":9636375,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636380,"byte_end":9636394,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636399,"byte_end":9636402,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636407,"byte_end":9636414,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636419,"byte_end":9636446,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636451,"byte_end":9636454,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636459,"byte_end":9636488,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636493,"byte_end":9636500,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7538},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637673,"byte_end":9637677,"line_start":262,"line_end":262,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637213,"byte_end":9637259,"line_start":245,"line_end":245,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637264,"byte_end":9637310,"line_start":246,"line_end":246,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637315,"byte_end":9637386,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637391,"byte_end":9637394,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637399,"byte_end":9637413,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637418,"byte_end":9637421,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637426,"byte_end":9637433,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637438,"byte_end":9637465,"line_start":252,"line_end":252,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637470,"byte_end":9637473,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637478,"byte_end":9637496,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637501,"byte_end":9637522,"line_start":255,"line_end":255,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637527,"byte_end":9637561,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637566,"byte_end":9637569,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637574,"byte_end":9637613,"line_start":258,"line_end":258,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637618,"byte_end":9637633,"line_start":259,"line_end":259,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637638,"byte_end":9637643,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637648,"byte_end":9637655,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7541},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638704,"byte_end":9638714,"line_start":293,"line_end":293,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637783,"byte_end":9637857,"line_start":267,"line_end":267,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637862,"byte_end":9637929,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637934,"byte_end":9637958,"line_start":269,"line_end":269,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637963,"byte_end":9637966,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9637971,"byte_end":9638044,"line_start":271,"line_end":271,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638049,"byte_end":9638122,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638127,"byte_end":9638198,"line_start":273,"line_end":273,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638203,"byte_end":9638278,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638283,"byte_end":9638325,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638330,"byte_end":9638333,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638338,"byte_end":9638352,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638357,"byte_end":9638360,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638365,"byte_end":9638372,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638377,"byte_end":9638404,"line_start":280,"line_end":280,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638409,"byte_end":9638432,"line_start":281,"line_end":281,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638437,"byte_end":9638440,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638445,"byte_end":9638463,"line_start":283,"line_end":283,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638468,"byte_end":9638489,"line_start":284,"line_end":284,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638494,"byte_end":9638538,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638543,"byte_end":9638546,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638551,"byte_end":9638604,"line_start":287,"line_end":287,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638609,"byte_end":9638624,"line_start":288,"line_end":288,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638629,"byte_end":9638634,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638639,"byte_end":9638646,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638651,"byte_end":9638654,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9638659,"byte_end":9638686,"line_start":292,"line_end":292,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7548},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639591,"byte_end":9639599,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639123,"byte_end":9639192,"line_start":306,"line_end":306,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639197,"byte_end":9639239,"line_start":307,"line_end":307,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639244,"byte_end":9639247,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639252,"byte_end":9639286,"line_start":309,"line_end":309,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639291,"byte_end":9639305,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639310,"byte_end":9639313,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639318,"byte_end":9639325,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639330,"byte_end":9639357,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639362,"byte_end":9639425,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639430,"byte_end":9639433,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639438,"byte_end":9639468,"line_start":316,"line_end":316,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639473,"byte_end":9639476,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639481,"byte_end":9639511,"line_start":318,"line_end":318,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639516,"byte_end":9639538,"line_start":319,"line_end":319,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639543,"byte_end":9639555,"line_start":320,"line_end":320,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639560,"byte_end":9639567,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639572,"byte_end":9639579,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7549},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640279,"byte_end":9640286,"line_start":347,"line_end":347,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639808,"byte_end":9639863,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639868,"byte_end":9639871,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639876,"byte_end":9639951,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9639956,"byte_end":9640030,"line_start":333,"line_end":333,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640035,"byte_end":9640038,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640043,"byte_end":9640057,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640062,"byte_end":9640065,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640070,"byte_end":9640077,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640082,"byte_end":9640109,"line_start":338,"line_end":338,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640114,"byte_end":9640117,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640122,"byte_end":9640137,"line_start":340,"line_end":340,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640142,"byte_end":9640180,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640185,"byte_end":9640188,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640193,"byte_end":9640225,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640230,"byte_end":9640245,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640250,"byte_end":9640255,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640260,"byte_end":9640267,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7550},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641367,"byte_end":9641381,"line_start":378,"line_end":378,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640455,"byte_end":9640529,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640534,"byte_end":9640571,"line_start":355,"line_end":355,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640576,"byte_end":9640579,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640584,"byte_end":9640652,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640657,"byte_end":9640730,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640735,"byte_end":9640811,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640816,"byte_end":9640890,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640895,"byte_end":9640943,"line_start":361,"line_end":361,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640948,"byte_end":9640951,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640956,"byte_end":9640990,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9640995,"byte_end":9641022,"line_start":364,"line_end":364,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641027,"byte_end":9641041,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641046,"byte_end":9641049,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641054,"byte_end":9641061,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641066,"byte_end":9641093,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641098,"byte_end":9641121,"line_start":369,"line_end":369,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641126,"byte_end":9641189,"line_start":370,"line_end":370,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641194,"byte_end":9641197,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641202,"byte_end":9641242,"line_start":372,"line_end":372,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641247,"byte_end":9641250,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641255,"byte_end":9641299,"line_start":374,"line_end":374,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641304,"byte_end":9641326,"line_start":375,"line_end":375,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641331,"byte_end":9641343,"line_start":376,"line_end":376,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641348,"byte_end":9641355,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7551},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641939,"byte_end":9641949,"line_start":399,"line_end":399,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641606,"byte_end":9641660,"line_start":385,"line_end":385,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641665,"byte_end":9641679,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641684,"byte_end":9641687,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641692,"byte_end":9641699,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641704,"byte_end":9641731,"line_start":389,"line_end":389,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641736,"byte_end":9641739,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641744,"byte_end":9641762,"line_start":391,"line_end":391,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641767,"byte_end":9641788,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641793,"byte_end":9641827,"line_start":393,"line_end":393,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641832,"byte_end":9641835,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641840,"byte_end":9641875,"line_start":395,"line_end":395,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641880,"byte_end":9641905,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641910,"byte_end":9641915,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9641920,"byte_end":9641927,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8389},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647853,"byte_end":9647859,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":8390},{"krate":0,"index":8391}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645010,"byte_end":9645046,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645047,"byte_end":9645050,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645051,"byte_end":9645127,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645128,"byte_end":9645208,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645209,"byte_end":9645250,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645251,"byte_end":9645254,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645255,"byte_end":9645329,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645330,"byte_end":9645415,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645416,"byte_end":9645482,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645483,"byte_end":9645486,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645487,"byte_end":9645545,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645546,"byte_end":9645626,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645627,"byte_end":9645707,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645708,"byte_end":9645791,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645792,"byte_end":9645842,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645843,"byte_end":9645846,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645847,"byte_end":9645931,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9645932,"byte_end":9646007,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646008,"byte_end":9646078,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646079,"byte_end":9646082,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646083,"byte_end":9646167,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646168,"byte_end":9646241,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646242,"byte_end":9646313,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646314,"byte_end":9646317,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646318,"byte_end":9646332,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646333,"byte_end":9646336,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646337,"byte_end":9646353,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646354,"byte_end":9646357,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646358,"byte_end":9646365,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646366,"byte_end":9646394,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646395,"byte_end":9646418,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646419,"byte_end":9646422,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646423,"byte_end":9646441,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646442,"byte_end":9646463,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646464,"byte_end":9646509,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646510,"byte_end":9646547,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646548,"byte_end":9646551,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646552,"byte_end":9646585,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646586,"byte_end":9646623,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646624,"byte_end":9646670,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646671,"byte_end":9646682,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646683,"byte_end":9646686,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646687,"byte_end":9646728,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646729,"byte_end":9646757,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646758,"byte_end":9646763,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646764,"byte_end":9646771,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646772,"byte_end":9646775,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646776,"byte_end":9646801,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646802,"byte_end":9646805,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646806,"byte_end":9646813,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646814,"byte_end":9646842,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646843,"byte_end":9646846,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646847,"byte_end":9646882,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646883,"byte_end":9646908,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646909,"byte_end":9646912,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646913,"byte_end":9646936,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646937,"byte_end":9646972,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646973,"byte_end":9646996,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9646997,"byte_end":9647002,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647003,"byte_end":9647006,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647007,"byte_end":9647031,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647032,"byte_end":9647070,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647071,"byte_end":9647110,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647111,"byte_end":9647145,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647146,"byte_end":9647149,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647150,"byte_end":9647205,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647206,"byte_end":9647243,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647244,"byte_end":9647253,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647254,"byte_end":9647257,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647258,"byte_end":9647297,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647298,"byte_end":9647316,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647317,"byte_end":9647348,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647349,"byte_end":9647427,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647428,"byte_end":9647461,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647462,"byte_end":9647479,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647480,"byte_end":9647483,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647484,"byte_end":9647534,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647535,"byte_end":9647580,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647581,"byte_end":9647594,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647595,"byte_end":9647604,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647605,"byte_end":9647610,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647611,"byte_end":9647618,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647619,"byte_end":9647622,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647623,"byte_end":9647652,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647653,"byte_end":9647694,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647695,"byte_end":9647739,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647740,"byte_end":9647782,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9647783,"byte_end":9647824,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8411},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9648709,"byte_end":9648717,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":8413},{"krate":0,"index":8414},{"krate":0,"index":8415}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9648643,"byte_end":9648680,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7664},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650058,"byte_end":9650061,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649854,"byte_end":9649910,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649915,"byte_end":9649918,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649923,"byte_end":9649937,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649942,"byte_end":9649945,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649950,"byte_end":9649957,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649962,"byte_end":9649990,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649995,"byte_end":9649998,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650003,"byte_end":9650034,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650039,"byte_end":9650046,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7665},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651762,"byte_end":9651770,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650715,"byte_end":9650743,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650748,"byte_end":9650751,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650756,"byte_end":9650774,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650779,"byte_end":9650782,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650787,"byte_end":9650800,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650805,"byte_end":9650834,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650839,"byte_end":9650846,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650851,"byte_end":9650854,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650859,"byte_end":9650935,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9650940,"byte_end":9651018,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651023,"byte_end":9651098,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651103,"byte_end":9651176,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651181,"byte_end":9651184,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651189,"byte_end":9651229,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651234,"byte_end":9651237,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651242,"byte_end":9651256,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651261,"byte_end":9651264,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651269,"byte_end":9651276,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651281,"byte_end":9651309,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651314,"byte_end":9651337,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651342,"byte_end":9651345,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651350,"byte_end":9651368,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651373,"byte_end":9651394,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651399,"byte_end":9651444,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651449,"byte_end":9651486,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651491,"byte_end":9651494,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651499,"byte_end":9651532,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651537,"byte_end":9651574,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651579,"byte_end":9651625,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651630,"byte_end":9651641,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651646,"byte_end":9651649,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651654,"byte_end":9651695,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651700,"byte_end":9651728,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651733,"byte_end":9651738,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9651743,"byte_end":9651750,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7666},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653466,"byte_end":9653476,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652295,"byte_end":9652322,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652327,"byte_end":9652330,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652335,"byte_end":9652406,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652411,"byte_end":9652479,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652484,"byte_end":9652560,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652565,"byte_end":9652610,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652615,"byte_end":9652618,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652623,"byte_end":9652697,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652702,"byte_end":9652780,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652785,"byte_end":9652857,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652862,"byte_end":9652876,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652881,"byte_end":9652884,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652889,"byte_end":9652933,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652938,"byte_end":9652941,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652946,"byte_end":9652960,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652965,"byte_end":9652968,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652973,"byte_end":9652980,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9652985,"byte_end":9653013,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653018,"byte_end":9653041,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653046,"byte_end":9653049,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653054,"byte_end":9653072,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653077,"byte_end":9653098,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653103,"byte_end":9653148,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653153,"byte_end":9653190,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653195,"byte_end":9653198,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653203,"byte_end":9653236,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653241,"byte_end":9653278,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653283,"byte_end":9653329,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653334,"byte_end":9653345,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653350,"byte_end":9653353,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653358,"byte_end":9653399,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653404,"byte_end":9653432,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653437,"byte_end":9653442,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9653447,"byte_end":9653454,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7667},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655809,"byte_end":9655823,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9654719,"byte_end":9654749,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9654754,"byte_end":9654757,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9654762,"byte_end":9654832,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ `notify()`, no permit is stored to be used by the next call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9654837,"byte_end":9654903,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"/ [`notified().await`]. The purpose of this method is to notify all","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9654908,"byte_end":9654977,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9654982,"byte_end":9655053,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655058,"byte_end":9655134,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655139,"byte_end":9655142,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655147,"byte_end":9655161,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655166,"byte_end":9655169,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655174,"byte_end":9655181,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655186,"byte_end":9655214,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655219,"byte_end":9655242,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655247,"byte_end":9655250,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655255,"byte_end":9655273,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655278,"byte_end":9655299,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655304,"byte_end":9655349,"line_start":365,"line_end":365,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655354,"byte_end":9655391,"line_start":366,"line_end":366,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655396,"byte_end":9655399,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655404,"byte_end":9655446,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655451,"byte_end":9655493,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655498,"byte_end":9655501,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655506,"byte_end":9655552,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655557,"byte_end":9655603,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655608,"byte_end":9655645,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655650,"byte_end":9655661,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655666,"byte_end":9655669,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655674,"byte_end":9655698,"line_start":376,"line_end":376,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655703,"byte_end":9655727,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655732,"byte_end":9655775,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655780,"byte_end":9655785,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9655790,"byte_end":9655797,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":7693},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7694},{"krate":0,"index":7697},{"krate":0,"index":7700},{"krate":0,"index":7703},{"krate":0,"index":7706},{"krate":0,"index":7709},{"krate":0,"index":7712},{"krate":0,"index":7715},{"krate":0,"index":7716},{"krate":0,"index":7719},{"krate":0,"index":7720},{"krate":0,"index":7722},{"krate":0,"index":7723},{"krate":0,"index":7725},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":7729},{"krate":0,"index":7730},{"krate":0,"index":7732},{"krate":0,"index":7733},{"krate":0,"index":7736},{"krate":0,"index":7739},{"krate":0,"index":8429},{"krate":0,"index":8432},{"krate":0,"index":8435},{"krate":0,"index":8438},{"krate":0,"index":7742},{"krate":0,"index":7752},{"krate":0,"index":7753},{"krate":0,"index":8466},{"krate":0,"index":8469},{"krate":0,"index":8471},{"krate":0,"index":7759},{"krate":0,"index":7761},{"krate":0,"index":7776},{"krate":0,"index":7779},{"krate":0,"index":7783},{"krate":0,"index":7786},{"krate":0,"index":7790},{"krate":0,"index":7814},{"krate":0,"index":7816},{"krate":0,"index":7818},{"krate":0,"index":7822},{"krate":0,"index":7828},{"krate":0,"index":7829},{"krate":0,"index":7830},{"krate":0,"index":7831},{"krate":0,"index":7832},{"krate":0,"index":7846}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23059,"byte_end":23083,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670125,"byte_end":9670195,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":8429},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670674,"byte_end":9670680,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8431}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670527,"byte_end":9670574,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670575,"byte_end":9670578,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670579,"byte_end":9670645,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8435},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670872,"byte_end":9670880,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8437}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670723,"byte_end":9670772,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670773,"byte_end":9670776,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670777,"byte_end":9670843,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":7742},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670931,"byte_end":9670936,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":7743},{"krate":0,"index":8441},{"krate":0,"index":8444},{"krate":0,"index":8446},{"krate":0,"index":8447},{"krate":0,"index":8449},{"krate":0,"index":8450},{"krate":0,"index":8453},{"krate":0,"index":8458},{"krate":0,"index":8460},{"krate":0,"index":8461},{"krate":0,"index":8463},{"krate":0,"index":8464},{"krate":0,"index":7746},{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7751}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670943,"byte_end":9670966,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":8441},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671108,"byte_end":9671117,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9670991,"byte_end":9671056,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8454},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671339,"byte_end":9671344,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":8453},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671272,"byte_end":9671330,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8456},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671433,"byte_end":9671439,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":8453},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671355,"byte_end":9671424,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":8453},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671249,"byte_end":9671261,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":8454},{"krate":0,"index":8456}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671139,"byte_end":9671199,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":7759},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673436,"byte_end":9673443,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672621,"byte_end":9672700,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672701,"byte_end":9672711,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672712,"byte_end":9672715,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672716,"byte_end":9672792,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672793,"byte_end":9672871,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672872,"byte_end":9672918,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672919,"byte_end":9672922,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672923,"byte_end":9672969,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672970,"byte_end":9672973,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672974,"byte_end":9672988,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672989,"byte_end":9672992,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672993,"byte_end":9673000,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673001,"byte_end":9673030,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673031,"byte_end":9673034,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673035,"byte_end":9673053,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673054,"byte_end":9673075,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673076,"byte_end":9673118,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673119,"byte_end":9673122,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673123,"byte_end":9673156,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673157,"byte_end":9673197,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673198,"byte_end":9673247,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673248,"byte_end":9673261,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673262,"byte_end":9673273,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673274,"byte_end":9673277,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673278,"byte_end":9673302,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673303,"byte_end":9673350,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673351,"byte_end":9673404,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673405,"byte_end":9673414,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673415,"byte_end":9673420,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673421,"byte_end":9673428,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7763},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675454,"byte_end":9675458,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673883,"byte_end":9673958,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673963,"byte_end":9673979,"line_start":144,"line_end":144,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673984,"byte_end":9673987,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673992,"byte_end":9674071,"line_start":146,"line_end":146,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674076,"byte_end":9674151,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674156,"byte_end":9674232,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674237,"byte_end":9674309,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674314,"byte_end":9674327,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674332,"byte_end":9674335,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674340,"byte_end":9674416,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674421,"byte_end":9674497,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674502,"byte_end":9674574,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674579,"byte_end":9674652,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674657,"byte_end":9674731,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674736,"byte_end":9674808,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674813,"byte_end":9674850,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674855,"byte_end":9674858,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674863,"byte_end":9674877,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674882,"byte_end":9674885,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674890,"byte_end":9674922,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674927,"byte_end":9674930,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674935,"byte_end":9674942,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674947,"byte_end":9674976,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674981,"byte_end":9674984,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9674989,"byte_end":9675007,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675012,"byte_end":9675033,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675038,"byte_end":9675080,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675085,"byte_end":9675088,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675093,"byte_end":9675126,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675131,"byte_end":9675171,"line_start":172,"line_end":172,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675176,"byte_end":9675225,"line_start":173,"line_end":173,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675230,"byte_end":9675243,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675248,"byte_end":9675259,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675264,"byte_end":9675267,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675272,"byte_end":9675296,"line_start":177,"line_end":177,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675301,"byte_end":9675348,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675353,"byte_end":9675406,"line_start":179,"line_end":179,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675411,"byte_end":9675420,"line_start":180,"line_end":180,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675425,"byte_end":9675430,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675435,"byte_end":9675442,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7766},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677822,"byte_end":9677828,"line_start":266,"line_end":266,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675817,"byte_end":9675875,"line_start":199,"line_end":199,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675880,"byte_end":9675883,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675888,"byte_end":9675962,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9675967,"byte_end":9676001,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676006,"byte_end":9676009,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676014,"byte_end":9676079,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676084,"byte_end":9676156,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676161,"byte_end":9676164,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676169,"byte_end":9676181,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676186,"byte_end":9676189,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676194,"byte_end":9676242,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676247,"byte_end":9676250,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676255,"byte_end":9676281,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676286,"byte_end":9676316,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676321,"byte_end":9676324,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676329,"byte_end":9676343,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676348,"byte_end":9676351,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676356,"byte_end":9676371,"line_start":216,"line_end":216,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676376,"byte_end":9676379,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676384,"byte_end":9676391,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676396,"byte_end":9676425,"line_start":219,"line_end":219,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676430,"byte_end":9676433,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676438,"byte_end":9676456,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676461,"byte_end":9676482,"line_start":222,"line_end":222,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676487,"byte_end":9676539,"line_start":223,"line_end":223,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676544,"byte_end":9676547,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676552,"byte_end":9676585,"line_start":225,"line_end":225,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676590,"byte_end":9676611,"line_start":226,"line_end":226,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676616,"byte_end":9676627,"line_start":227,"line_end":227,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676632,"byte_end":9676635,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676640,"byte_end":9676666,"line_start":229,"line_end":229,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676671,"byte_end":9676712,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676717,"byte_end":9676722,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676727,"byte_end":9676734,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676739,"byte_end":9676742,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676747,"byte_end":9676769,"line_start":234,"line_end":234,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676774,"byte_end":9676777,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676782,"byte_end":9676789,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676794,"byte_end":9676823,"line_start":237,"line_end":237,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676828,"byte_end":9676866,"line_start":238,"line_end":238,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676871,"byte_end":9676874,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676879,"byte_end":9676913,"line_start":240,"line_end":240,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676918,"byte_end":9676969,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9676974,"byte_end":9676999,"line_start":242,"line_end":242,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677004,"byte_end":9677009,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677014,"byte_end":9677017,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677022,"byte_end":9677040,"line_start":245,"line_end":245,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677045,"byte_end":9677066,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677071,"byte_end":9677117,"line_start":247,"line_end":247,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677122,"byte_end":9677125,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677130,"byte_end":9677163,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677168,"byte_end":9677196,"line_start":250,"line_end":250,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677201,"byte_end":9677237,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677242,"byte_end":9677317,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677322,"byte_end":9677339,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677344,"byte_end":9677382,"line_start":254,"line_end":254,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677387,"byte_end":9677471,"line_start":255,"line_end":255,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677476,"byte_end":9677559,"line_start":256,"line_end":256,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677564,"byte_end":9677607,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677612,"byte_end":9677629,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677634,"byte_end":9677647,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677652,"byte_end":9677663,"line_start":260,"line_end":260,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677668,"byte_end":9677671,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677676,"byte_end":9677712,"line_start":262,"line_end":262,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677717,"byte_end":9677782,"line_start":263,"line_end":263,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677787,"byte_end":9677792,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677797,"byte_end":9677804,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7773},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678698,"byte_end":9678707,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9677939,"byte_end":9678013,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678018,"byte_end":9678021,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678026,"byte_end":9678100,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678105,"byte_end":9678139,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678144,"byte_end":9678147,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678152,"byte_end":9678227,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678232,"byte_end":9678235,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678240,"byte_end":9678266,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678271,"byte_end":9678301,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678306,"byte_end":9678309,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678314,"byte_end":9678328,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678333,"byte_end":9678336,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678341,"byte_end":9678348,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678353,"byte_end":9678382,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678387,"byte_end":9678390,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678395,"byte_end":9678413,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678418,"byte_end":9678439,"line_start":288,"line_end":288,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678444,"byte_end":9678486,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678491,"byte_end":9678494,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678499,"byte_end":9678532,"line_start":291,"line_end":291,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678537,"byte_end":9678540,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678545,"byte_end":9678562,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678567,"byte_end":9678570,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678575,"byte_end":9678607,"line_start":295,"line_end":295,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678612,"byte_end":9678664,"line_start":296,"line_end":296,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678669,"byte_end":9678674,"line_start":297,"line_end":297,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678679,"byte_end":9678686,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7774},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9680153,"byte_end":9680164,"line_start":346,"line_end":346,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678869,"byte_end":9678949,"line_start":306,"line_end":306,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9678954,"byte_end":9679037,"line_start":307,"line_end":307,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679042,"byte_end":9679053,"line_start":308,"line_end":308,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679058,"byte_end":9679061,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679066,"byte_end":9679146,"line_start":310,"line_end":310,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679151,"byte_end":9679185,"line_start":311,"line_end":311,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679190,"byte_end":9679193,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679198,"byte_end":9679281,"line_start":313,"line_end":313,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679286,"byte_end":9679352,"line_start":314,"line_end":314,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679357,"byte_end":9679360,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679365,"byte_end":9679420,"line_start":316,"line_end":316,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679425,"byte_end":9679480,"line_start":317,"line_end":317,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679485,"byte_end":9679488,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679493,"byte_end":9679511,"line_start":319,"line_end":319,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679516,"byte_end":9679519,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679524,"byte_end":9679550,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679555,"byte_end":9679558,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679563,"byte_end":9679615,"line_start":323,"line_end":323,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679620,"byte_end":9679670,"line_start":324,"line_end":324,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679675,"byte_end":9679678,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679683,"byte_end":9679697,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679702,"byte_end":9679705,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679710,"byte_end":9679717,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679722,"byte_end":9679751,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679756,"byte_end":9679759,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679764,"byte_end":9679797,"line_start":331,"line_end":331,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679802,"byte_end":9679805,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679810,"byte_end":9679828,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679833,"byte_end":9679854,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679859,"byte_end":9679915,"line_start":335,"line_end":335,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679920,"byte_end":9679923,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679928,"byte_end":9679961,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679966,"byte_end":9679989,"line_start":338,"line_end":338,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9679994,"byte_end":9680005,"line_start":339,"line_end":339,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9680010,"byte_end":9680013,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9680018,"byte_end":9680065,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9680070,"byte_end":9680073,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9680078,"byte_end":9680119,"line_start":343,"line_end":343,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9680124,"byte_end":9680129,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9680134,"byte_end":9680141,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7781},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683337,"byte_end":9683342,"line_start":460,"line_end":460,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681699,"byte_end":9681766,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681771,"byte_end":9681774,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681779,"byte_end":9681853,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681858,"byte_end":9681926,"line_start":407,"line_end":407,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681931,"byte_end":9681997,"line_start":408,"line_end":408,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682002,"byte_end":9682016,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682021,"byte_end":9682024,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682029,"byte_end":9682105,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682110,"byte_end":9682173,"line_start":412,"line_end":412,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682178,"byte_end":9682181,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682186,"byte_end":9682208,"line_start":414,"line_end":414,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682213,"byte_end":9682249,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682254,"byte_end":9682257,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682262,"byte_end":9682276,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682281,"byte_end":9682284,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682289,"byte_end":9682324,"line_start":419,"line_end":419,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682329,"byte_end":9682332,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682337,"byte_end":9682344,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682349,"byte_end":9682378,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682383,"byte_end":9682433,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682438,"byte_end":9682441,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682446,"byte_end":9682464,"line_start":425,"line_end":425,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682469,"byte_end":9682490,"line_start":426,"line_end":426,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682495,"byte_end":9682541,"line_start":427,"line_end":427,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682546,"byte_end":9682549,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682554,"byte_end":9682587,"line_start":429,"line_end":429,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682592,"byte_end":9682595,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682600,"byte_end":9682619,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682624,"byte_end":9682627,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682632,"byte_end":9682664,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682669,"byte_end":9682721,"line_start":434,"line_end":434,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682726,"byte_end":9682729,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682734,"byte_end":9682763,"line_start":436,"line_end":436,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682768,"byte_end":9682811,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682816,"byte_end":9682848,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682853,"byte_end":9682862,"line_start":439,"line_end":439,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682867,"byte_end":9682872,"line_start":440,"line_end":440,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682877,"byte_end":9682884,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682889,"byte_end":9682892,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682897,"byte_end":9682948,"line_start":443,"line_end":443,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682953,"byte_end":9682956,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682961,"byte_end":9682968,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9682973,"byte_end":9683002,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683007,"byte_end":9683010,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683015,"byte_end":9683033,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683038,"byte_end":9683059,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683064,"byte_end":9683110,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683115,"byte_end":9683118,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683123,"byte_end":9683172,"line_start":452,"line_end":452,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683177,"byte_end":9683180,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683185,"byte_end":9683204,"line_start":454,"line_end":454,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683209,"byte_end":9683212,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683217,"byte_end":9683258,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683263,"byte_end":9683303,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683308,"byte_end":9683313,"line_start":458,"line_end":458,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683318,"byte_end":9683325,"line_start":459,"line_end":459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7782},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685325,"byte_end":9685333,"line_start":528,"line_end":528,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683440,"byte_end":9683472,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683477,"byte_end":9683480,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683485,"byte_end":9683558,"line_start":467,"line_end":467,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683563,"byte_end":9683629,"line_start":468,"line_end":468,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683634,"byte_end":9683658,"line_start":469,"line_end":469,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683663,"byte_end":9683666,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683671,"byte_end":9683737,"line_start":471,"line_end":471,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683742,"byte_end":9683764,"line_start":472,"line_end":472,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683769,"byte_end":9683772,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683777,"byte_end":9683789,"line_start":474,"line_end":474,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683794,"byte_end":9683797,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683802,"byte_end":9683853,"line_start":476,"line_end":476,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683858,"byte_end":9683921,"line_start":477,"line_end":477,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9683926,"byte_end":9684001,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684006,"byte_end":9684020,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684025,"byte_end":9684028,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684033,"byte_end":9684047,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684052,"byte_end":9684055,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684060,"byte_end":9684110,"line_start":483,"line_end":483,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684115,"byte_end":9684118,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684123,"byte_end":9684130,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684135,"byte_end":9684164,"line_start":486,"line_end":486,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684169,"byte_end":9684219,"line_start":487,"line_end":487,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684224,"byte_end":9684227,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684232,"byte_end":9684250,"line_start":489,"line_end":489,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684255,"byte_end":9684276,"line_start":490,"line_end":490,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684281,"byte_end":9684327,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684332,"byte_end":9684335,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684340,"byte_end":9684369,"line_start":493,"line_end":493,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684374,"byte_end":9684419,"line_start":494,"line_end":494,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684424,"byte_end":9684466,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684471,"byte_end":9684503,"line_start":496,"line_end":496,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684508,"byte_end":9684517,"line_start":497,"line_end":497,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684522,"byte_end":9684525,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684530,"byte_end":9684553,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684558,"byte_end":9684592,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684597,"byte_end":9684600,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684605,"byte_end":9684634,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684639,"byte_end":9684691,"line_start":503,"line_end":503,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684696,"byte_end":9684728,"line_start":504,"line_end":504,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684733,"byte_end":9684742,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684747,"byte_end":9684752,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684757,"byte_end":9684764,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684769,"byte_end":9684772,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684777,"byte_end":9684838,"line_start":509,"line_end":509,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684843,"byte_end":9684846,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684851,"byte_end":9684858,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684863,"byte_end":9684892,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684897,"byte_end":9684947,"line_start":513,"line_end":513,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684952,"byte_end":9684955,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684960,"byte_end":9684978,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9684983,"byte_end":9685004,"line_start":516,"line_end":516,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685009,"byte_end":9685061,"line_start":517,"line_end":517,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685066,"byte_end":9685069,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685074,"byte_end":9685091,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685096,"byte_end":9685099,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685104,"byte_end":9685133,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685138,"byte_end":9685192,"line_start":522,"line_end":522,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685197,"byte_end":9685240,"line_start":523,"line_end":523,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685245,"byte_end":9685277,"line_start":524,"line_end":524,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685282,"byte_end":9685291,"line_start":525,"line_end":525,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685296,"byte_end":9685301,"line_start":526,"line_end":526,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9685306,"byte_end":9685313,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8473},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696089,"byte_end":9696095,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":8472},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9695963,"byte_end":9696028,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696033,"byte_end":9696036,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696041,"byte_end":9696084,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8475},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696150,"byte_end":9696159,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":8472},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696102,"byte_end":9696145,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":8472},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9695941,"byte_end":9695956,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError { Closed, NoPermits, }","parent":null,"children":[{"krate":0,"index":8473},{"krate":0,"index":8475}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9695767,"byte_end":9695831,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9695832,"byte_end":9695835,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9695836,"byte_end":9695903,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8482},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696445,"byte_end":9696457,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696163,"byte_end":9696223,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696224,"byte_end":9696227,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696228,"byte_end":9696294,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696295,"byte_end":9696308,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696309,"byte_end":9696312,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696313,"byte_end":9696356,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9696357,"byte_end":9696416,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":8487},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715506,"byte_end":9715515,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":8488}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9714854,"byte_end":9714920,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9714921,"byte_end":9714924,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9714925,"byte_end":9715000,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715001,"byte_end":9715077,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715078,"byte_end":9715158,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715159,"byte_end":9715168,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715169,"byte_end":9715172,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715173,"byte_end":9715246,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715247,"byte_end":9715326,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715327,"byte_end":9715405,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715406,"byte_end":9715477,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8491},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715764,"byte_end":9715779,"line_start":29,"line_end":29,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8493},{"krate":0,"index":8494}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715580,"byte_end":9715612,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715613,"byte_end":9715616,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715617,"byte_end":9715668,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715669,"byte_end":9715672,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715673,"byte_end":9715723,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715724,"byte_end":9715735,"line_start":27,"line_end":27,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8498},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9716040,"byte_end":9716060,"line_start":41,"line_end":41,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":8499},{"krate":0,"index":8500}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715831,"byte_end":9715870,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715871,"byte_end":9715874,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715875,"byte_end":9715932,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715933,"byte_end":9715936,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9715937,"byte_end":9715999,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9716000,"byte_end":9716011,"line_start":39,"line_end":39,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7992},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9716656,"byte_end":9716659,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9716581,"byte_end":9716644,"line_start":62,"line_end":62,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7993},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717165,"byte_end":9717182,"line_start":79,"line_end":79,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717101,"byte_end":9717153,"line_start":78,"line_end":78,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7994},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717429,"byte_end":9717440,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717252,"byte_end":9717294,"line_start":83,"line_end":83,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717299,"byte_end":9717302,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717307,"byte_end":9717417,"line_start":85,"line_end":85,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":7995},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717860,"byte_end":9717867,"line_start":98,"line_end":98,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717503,"byte_end":9717544,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717549,"byte_end":9717552,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717557,"byte_end":9717628,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717633,"byte_end":9717699,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717704,"byte_end":9717724,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717729,"byte_end":9717732,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717737,"byte_end":9717784,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9717789,"byte_end":9717842,"line_start":97,"line_end":97,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7998},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718421,"byte_end":9718433,"line_start":114,"line_end":114,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718060,"byte_end":9718104,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718109,"byte_end":9718112,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718117,"byte_end":9718188,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718193,"byte_end":9718259,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718264,"byte_end":9718285,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718290,"byte_end":9718293,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718298,"byte_end":9718345,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718350,"byte_end":9718403,"line_start":113,"line_end":113,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8001},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719172,"byte_end":9719183,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718634,"byte_end":9718683,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718688,"byte_end":9718691,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718696,"byte_end":9718776,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718781,"byte_end":9718862,"line_start":125,"line_end":125,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718867,"byte_end":9718940,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718945,"byte_end":9718948,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9718953,"byte_end":9719022,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719027,"byte_end":9719102,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719107,"byte_end":9719160,"line_start":130,"line_end":130,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8002},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719987,"byte_end":9720003,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire n permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire n permits from the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719448,"byte_end":9719498,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719503,"byte_end":9719506,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719511,"byte_end":9719591,"line_start":143,"line_end":143,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719596,"byte_end":9719677,"line_start":144,"line_end":144,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719682,"byte_end":9719755,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719760,"byte_end":9719763,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719768,"byte_end":9719837,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719842,"byte_end":9719917,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9719922,"byte_end":9719975,"line_start":149,"line_end":149,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8003},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720753,"byte_end":9720766,"line_start":170,"line_end":170,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720276,"byte_end":9720317,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720322,"byte_end":9720325,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720330,"byte_end":9720398,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720403,"byte_end":9720474,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720479,"byte_end":9720550,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720555,"byte_end":9720575,"line_start":165,"line_end":165,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720580,"byte_end":9720583,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720588,"byte_end":9720615,"line_start":167,"line_end":167,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720620,"byte_end":9720667,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720672,"byte_end":9720735,"line_start":169,"line_end":169,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8006},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721639,"byte_end":9721656,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9720974,"byte_end":9721023,"line_start":178,"line_end":178,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721028,"byte_end":9721031,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721036,"byte_end":9721107,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721112,"byte_end":9721189,"line_start":181,"line_end":181,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721194,"byte_end":9721264,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721269,"byte_end":9721340,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721345,"byte_end":9721365,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721370,"byte_end":9721373,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721378,"byte_end":9721405,"line_start":186,"line_end":186,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721410,"byte_end":9721479,"line_start":187,"line_end":187,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721484,"byte_end":9721559,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721564,"byte_end":9721627,"line_start":189,"line_end":189,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8007},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722850,"byte_end":9722855,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721937,"byte_end":9721962,"line_start":200,"line_end":200,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721967,"byte_end":9721970,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9721975,"byte_end":9722065,"line_start":202,"line_end":202,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722070,"byte_end":9722073,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722078,"byte_end":9722092,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722097,"byte_end":9722100,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722105,"byte_end":9722112,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722117,"byte_end":9722148,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722153,"byte_end":9722176,"line_start":208,"line_end":208,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722181,"byte_end":9722218,"line_start":209,"line_end":209,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722223,"byte_end":9722226,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722231,"byte_end":9722249,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722254,"byte_end":9722275,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722280,"byte_end":9722332,"line_start":213,"line_end":213,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722337,"byte_end":9722380,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722385,"byte_end":9722388,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722393,"byte_end":9722426,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722431,"byte_end":9722488,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722493,"byte_end":9722530,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722535,"byte_end":9722581,"line_start":219,"line_end":219,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722586,"byte_end":9722597,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722602,"byte_end":9722605,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722610,"byte_end":9722648,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722653,"byte_end":9722680,"line_start":223,"line_end":223,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722685,"byte_end":9722688,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722693,"byte_end":9722730,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722735,"byte_end":9722816,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722821,"byte_end":9722826,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722831,"byte_end":9722838,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8010},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723113,"byte_end":9723119,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722938,"byte_end":9723008,"line_start":235,"line_end":235,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723013,"byte_end":9723082,"line_start":236,"line_end":236,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723087,"byte_end":9723101,"line_start":237,"line_end":237,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":8012},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723374,"byte_end":9723380,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723199,"byte_end":9723269,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723274,"byte_end":9723343,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723348,"byte_end":9723362,"line_start":246,"line_end":246,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":8503},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726433,"byte_end":9726439,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":8505},{"krate":0,"index":8506}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9723902,"byte_end":9723941,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9723942,"byte_end":9723945,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9723946,"byte_end":9724023,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724024,"byte_end":9724103,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724104,"byte_end":9724183,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724184,"byte_end":9724242,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724243,"byte_end":9724246,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724247,"byte_end":9724325,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724326,"byte_end":9724404,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724405,"byte_end":9724483,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724484,"byte_end":9724549,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724550,"byte_end":9724553,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724554,"byte_end":9724618,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724619,"byte_end":9724691,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724692,"byte_end":9724772,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724773,"byte_end":9724853,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724854,"byte_end":9724934,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9724935,"byte_end":9725004,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725005,"byte_end":9725075,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725076,"byte_end":9725114,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725115,"byte_end":9725118,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725119,"byte_end":9725196,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725197,"byte_end":9725282,"line_start":36,"line_end":36,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725283,"byte_end":9725363,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725364,"byte_end":9725411,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725412,"byte_end":9725484,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725485,"byte_end":9725488,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725489,"byte_end":9725503,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725504,"byte_end":9725507,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725508,"byte_end":9725515,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725516,"byte_end":9725544,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725545,"byte_end":9725548,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725549,"byte_end":9725567,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725568,"byte_end":9725589,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725590,"byte_end":9725624,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725625,"byte_end":9725628,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725629,"byte_end":9725677,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725678,"byte_end":9725687,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725688,"byte_end":9725727,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725728,"byte_end":9725767,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725768,"byte_end":9725799,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725800,"byte_end":9725831,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725832,"byte_end":9725881,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725882,"byte_end":9725885,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725886,"byte_end":9725937,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725938,"byte_end":9725947,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725948,"byte_end":9725991,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9725992,"byte_end":9726012,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726013,"byte_end":9726043,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726044,"byte_end":9726083,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726084,"byte_end":9726089,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726090,"byte_end":9726097,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726098,"byte_end":9726101,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726102,"byte_end":9726136,"line_start":67,"line_end":67,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726137,"byte_end":9726166,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726167,"byte_end":9726214,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726215,"byte_end":9726264,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726265,"byte_end":9726302,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726303,"byte_end":9726404,"line_start":72,"line_end":72,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":8048},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726814,"byte_end":9726829,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":8051},{"krate":0,"index":8052},{"krate":0,"index":8053}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726573,"byte_end":9726645,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726646,"byte_end":9726658,"line_start":83,"line_end":83,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726659,"byte_end":9726662,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726663,"byte_end":9726718,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726719,"byte_end":9726734,"line_start":86,"line_end":86,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726735,"byte_end":9726738,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726739,"byte_end":9726772,"line_start":88,"line_end":88,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726773,"byte_end":9726802,"line_start":89,"line_end":89,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8057},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728147,"byte_end":9728150,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726973,"byte_end":9727041,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727046,"byte_end":9727049,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727054,"byte_end":9727127,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727132,"byte_end":9727152,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727157,"byte_end":9727160,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727165,"byte_end":9727216,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727221,"byte_end":9727291,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727296,"byte_end":9727360,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727365,"byte_end":9727368,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727373,"byte_end":9727445,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727450,"byte_end":9727476,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727481,"byte_end":9727484,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727489,"byte_end":9727598,"line_start":109,"line_end":109,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727603,"byte_end":9727666,"line_start":110,"line_end":110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727671,"byte_end":9727674,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727679,"byte_end":9727693,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727698,"byte_end":9727701,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727706,"byte_end":9727713,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727718,"byte_end":9727765,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727770,"byte_end":9727773,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727778,"byte_end":9727826,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727831,"byte_end":9727851,"line_start":118,"line_end":118,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727856,"byte_end":9727859,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727864,"byte_end":9727884,"line_start":120,"line_end":120,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727889,"byte_end":9727912,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727917,"byte_end":9727952,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727957,"byte_end":9727960,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9727965,"byte_end":9727999,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728004,"byte_end":9728058,"line_start":125,"line_end":125,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728063,"byte_end":9728066,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728071,"byte_end":9728097,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728102,"byte_end":9728109,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728114,"byte_end":9728121,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728126,"byte_end":9728135,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8060},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729845,"byte_end":9729852,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728528,"byte_end":9728597,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728602,"byte_end":9728672,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728677,"byte_end":9728688,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728693,"byte_end":9728696,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728701,"byte_end":9728774,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728779,"byte_end":9728799,"line_start":151,"line_end":151,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728804,"byte_end":9728807,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728812,"byte_end":9728871,"line_start":153,"line_end":153,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728876,"byte_end":9728956,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9728961,"byte_end":9729010,"line_start":155,"line_end":155,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729015,"byte_end":9729018,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729023,"byte_end":9729099,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729104,"byte_end":9729130,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729135,"byte_end":9729138,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729143,"byte_end":9729260,"line_start":160,"line_end":160,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729265,"byte_end":9729328,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729333,"byte_end":9729336,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729341,"byte_end":9729355,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729360,"byte_end":9729363,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729368,"byte_end":9729375,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729380,"byte_end":9729427,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729432,"byte_end":9729435,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729440,"byte_end":9729488,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729493,"byte_end":9729513,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729518,"byte_end":9729521,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729526,"byte_end":9729546,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729551,"byte_end":9729574,"line_start":172,"line_end":172,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729579,"byte_end":9729614,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729619,"byte_end":9729622,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729627,"byte_end":9729661,"line_start":175,"line_end":175,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729666,"byte_end":9729756,"line_start":176,"line_end":176,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729761,"byte_end":9729764,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729769,"byte_end":9729795,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729800,"byte_end":9729807,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729812,"byte_end":9729819,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9729824,"byte_end":9729833,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8075},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731101,"byte_end":9731117,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8080}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730849,"byte_end":9730925,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730926,"byte_end":9730938,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730939,"byte_end":9730942,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730943,"byte_end":9731000,"line_start":228,"line_end":228,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731001,"byte_end":9731019,"line_start":229,"line_end":229,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731020,"byte_end":9731023,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731024,"byte_end":9731059,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731060,"byte_end":9731089,"line_start":232,"line_end":232,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":8084},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732435,"byte_end":9732444,"line_start":277,"line_end":277,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731272,"byte_end":9731344,"line_start":240,"line_end":240,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731349,"byte_end":9731418,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731423,"byte_end":9731426,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731431,"byte_end":9731509,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731514,"byte_end":9731590,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731595,"byte_end":9731607,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731612,"byte_end":9731615,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the read access of this rwlock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731620,"byte_end":9731692,"line_start":247,"line_end":247,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731697,"byte_end":9731714,"line_start":248,"line_end":248,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731719,"byte_end":9731722,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731727,"byte_end":9731741,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731746,"byte_end":9731749,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731754,"byte_end":9731761,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731766,"byte_end":9731796,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731801,"byte_end":9731826,"line_start":254,"line_end":254,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731831,"byte_end":9731836,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731841,"byte_end":9731861,"line_start":256,"line_end":256,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731866,"byte_end":9731889,"line_start":257,"line_end":257,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731894,"byte_end":9731934,"line_start":258,"line_end":258,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731939,"byte_end":9731942,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731947,"byte_end":9731978,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/   ","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731983,"byte_end":9731989,"line_start":261,"line_end":261,"column_start":5,"column_end":11}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731994,"byte_end":9732029,"line_start":262,"line_end":262,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732034,"byte_end":9732076,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732081,"byte_end":9732120,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732125,"byte_end":9732132,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732137,"byte_end":9732140,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732145,"byte_end":9732171,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732176,"byte_end":9732221,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732226,"byte_end":9732229,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732234,"byte_end":9732246,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732251,"byte_end":9732277,"line_start":271,"line_end":271,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732282,"byte_end":9732357,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732362,"byte_end":9732369,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732374,"byte_end":9732381,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732386,"byte_end":9732389,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732394,"byte_end":9732423,"line_start":276,"line_end":276,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":8111},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735440,"byte_end":9735443,"line_start":369,"line_end":369,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735230,"byte_end":9735293,"line_start":360,"line_end":360,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735298,"byte_end":9735301,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735306,"byte_end":9735320,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735325,"byte_end":9735328,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735333,"byte_end":9735340,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735345,"byte_end":9735373,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735378,"byte_end":9735381,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735386,"byte_end":9735416,"line_start":367,"line_end":367,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735421,"byte_end":9735428,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8112},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737210,"byte_end":9737214,"line_start":431,"line_end":431,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736172,"byte_end":9736243,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736248,"byte_end":9736294,"line_start":401,"line_end":401,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736299,"byte_end":9736302,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736307,"byte_end":9736376,"line_start":403,"line_end":403,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736381,"byte_end":9736457,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736462,"byte_end":9736486,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736491,"byte_end":9736494,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736499,"byte_end":9736513,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736518,"byte_end":9736521,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736526,"byte_end":9736533,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736538,"byte_end":9736561,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736566,"byte_end":9736594,"line_start":411,"line_end":411,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736599,"byte_end":9736602,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736607,"byte_end":9736625,"line_start":413,"line_end":413,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736630,"byte_end":9736651,"line_start":414,"line_end":414,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736656,"byte_end":9736700,"line_start":415,"line_end":415,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736705,"byte_end":9736739,"line_start":416,"line_end":416,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736744,"byte_end":9736747,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736752,"byte_end":9736786,"line_start":418,"line_end":418,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736791,"byte_end":9736817,"line_start":419,"line_end":419,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736822,"byte_end":9736825,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736830,"byte_end":9736863,"line_start":421,"line_end":421,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736868,"byte_end":9736938,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736943,"byte_end":9736983,"line_start":423,"line_end":423,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9736988,"byte_end":9737018,"line_start":424,"line_end":424,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737023,"byte_end":9737079,"line_start":425,"line_end":425,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737084,"byte_end":9737087,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737092,"byte_end":9737150,"line_start":427,"line_end":427,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737155,"byte_end":9737171,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737176,"byte_end":9737180,"line_start":429,"line_end":429,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737185,"byte_end":9737192,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8116},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738302,"byte_end":9738307,"line_start":466,"line_end":466,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737661,"byte_end":9737736,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737741,"byte_end":9737787,"line_start":445,"line_end":445,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737792,"byte_end":9737795,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737800,"byte_end":9737870,"line_start":447,"line_end":447,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737875,"byte_end":9737913,"line_start":448,"line_end":448,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737918,"byte_end":9737921,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9737926,"byte_end":9737999,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738004,"byte_end":9738021,"line_start":451,"line_end":451,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738026,"byte_end":9738029,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738034,"byte_end":9738048,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738053,"byte_end":9738056,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738061,"byte_end":9738068,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738073,"byte_end":9738101,"line_start":456,"line_end":456,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738106,"byte_end":9738109,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738114,"byte_end":9738132,"line_start":458,"line_end":458,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738137,"byte_end":9738158,"line_start":459,"line_end":459,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738163,"byte_end":9738195,"line_start":460,"line_end":460,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738200,"byte_end":9738203,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738208,"byte_end":9738245,"line_start":462,"line_end":462,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738250,"byte_end":9738263,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738268,"byte_end":9738272,"line_start":464,"line_end":464,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738277,"byte_end":9738284,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8120},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739243,"byte_end":9739250,"line_start":496,"line_end":496,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738771,"byte_end":9738826,"line_start":479,"line_end":479,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738831,"byte_end":9738834,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738839,"byte_end":9738915,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738920,"byte_end":9738994,"line_start":482,"line_end":482,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9738999,"byte_end":9739002,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739007,"byte_end":9739021,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739026,"byte_end":9739029,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739034,"byte_end":9739041,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739046,"byte_end":9739074,"line_start":487,"line_end":487,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739079,"byte_end":9739082,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739087,"byte_end":9739102,"line_start":489,"line_end":489,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739107,"byte_end":9739145,"line_start":490,"line_end":490,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739150,"byte_end":9739153,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739158,"byte_end":9739189,"line_start":492,"line_end":492,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739194,"byte_end":9739209,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739214,"byte_end":9739219,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739224,"byte_end":9739231,"line_start":495,"line_end":495,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8121},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739484,"byte_end":9739494,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739419,"byte_end":9739472,"line_start":503,"line_end":503,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":8214},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":8215},{"krate":0,"index":8218},{"krate":0,"index":8221},{"krate":0,"index":8222},{"krate":0,"index":8223},{"krate":0,"index":8225},{"krate":0,"index":8226},{"krate":0,"index":8228},{"krate":0,"index":8229},{"krate":0,"index":8232},{"krate":0,"index":8235},{"krate":0,"index":8238},{"krate":0,"index":8510},{"krate":0,"index":8514},{"krate":0,"index":8517},{"krate":0,"index":8520},{"krate":0,"index":8523},{"krate":0,"index":8527},{"krate":0,"index":8531},{"krate":0,"index":8538},{"krate":0,"index":8241},{"krate":0,"index":8253},{"krate":0,"index":8254},{"krate":0,"index":8256},{"krate":0,"index":8262},{"krate":0,"index":8264},{"krate":0,"index":8267},{"krate":0,"index":8270},{"krate":0,"index":8278},{"krate":0,"index":8281}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23059,"byte_end":23083,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9752889,"byte_end":9752968,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9752969,"byte_end":9752979,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9752980,"byte_end":9752983,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9752984,"byte_end":9753060,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753061,"byte_end":9753135,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753136,"byte_end":9753139,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753140,"byte_end":9753151,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753152,"byte_end":9753155,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753156,"byte_end":9753236,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753237,"byte_end":9753313,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753314,"byte_end":9753384,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753385,"byte_end":9753461,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753462,"byte_end":9753503,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753504,"byte_end":9753507,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753508,"byte_end":9753522,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753523,"byte_end":9753526,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753527,"byte_end":9753534,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753535,"byte_end":9753562,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753563,"byte_end":9753566,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753567,"byte_end":9753631,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753632,"byte_end":9753683,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753684,"byte_end":9753687,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753688,"byte_end":9753721,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753722,"byte_end":9753768,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753769,"byte_end":9753827,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753828,"byte_end":9753841,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753842,"byte_end":9753853,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753854,"byte_end":9753857,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753858,"byte_end":9753884,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753885,"byte_end":9753897,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753898,"byte_end":9753905,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753906,"byte_end":9753913,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753914,"byte_end":9753917,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753918,"byte_end":9753931,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753932,"byte_end":9753935,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9753936,"byte_end":9754013,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754014,"byte_end":9754092,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754093,"byte_end":9754173,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754174,"byte_end":9754177,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754178,"byte_end":9754197,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754198,"byte_end":9754201,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754202,"byte_end":9754282,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754283,"byte_end":9754362,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754363,"byte_end":9754435,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754436,"byte_end":9754439,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754440,"byte_end":9754482,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754483,"byte_end":9754529,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754530,"byte_end":9754596,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754597,"byte_end":9754661,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754662,"byte_end":9754706,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754707,"byte_end":9754771,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9754772,"byte_end":9754830,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8510},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755198,"byte_end":9755206,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":8512},{"krate":0,"index":8513}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755032,"byte_end":9755098,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755099,"byte_end":9755102,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755103,"byte_end":9755169,"line_start":63,"line_end":63,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8517},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755495,"byte_end":9755501,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":8519}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755330,"byte_end":9755395,"line_start":73,"line_end":73,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755396,"byte_end":9755399,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755400,"byte_end":9755466,"line_start":75,"line_end":75,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":8523},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755821,"byte_end":9755824,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":8526}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755538,"byte_end":9755580,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755581,"byte_end":9755584,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755585,"byte_end":9755661,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755662,"byte_end":9755741,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9755742,"byte_end":9755792,"line_start":85,"line_end":85,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":8241},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756401,"byte_end":9756406,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":8242},{"krate":0,"index":8541},{"krate":0,"index":8544},{"krate":0,"index":8245},{"krate":0,"index":8248},{"krate":0,"index":8547},{"krate":0,"index":8550},{"krate":0,"index":8250},{"krate":0,"index":8252}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756413,"byte_end":9756434,"line_start":113,"line_end":113,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8541},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756542,"byte_end":9756551,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":8543}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756459,"byte_end":9756505,"line_start":117,"line_end":117,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8547},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756972,"byte_end":9756981,"line_start":135,"line_end":135,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756879,"byte_end":9756935,"line_start":133,"line_end":133,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":8254},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758036,"byte_end":9758043,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757273,"byte_end":9757349,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757350,"byte_end":9757353,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757354,"byte_end":9757436,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757437,"byte_end":9757513,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757514,"byte_end":9757550,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757551,"byte_end":9757554,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757555,"byte_end":9757569,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757570,"byte_end":9757573,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757574,"byte_end":9757581,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757582,"byte_end":9757609,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757610,"byte_end":9757613,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757614,"byte_end":9757678,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757679,"byte_end":9757730,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757731,"byte_end":9757734,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757735,"byte_end":9757768,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757769,"byte_end":9757815,"line_start":165,"line_end":165,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757816,"byte_end":9757874,"line_start":166,"line_end":166,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757875,"byte_end":9757888,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757889,"byte_end":9757900,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757901,"byte_end":9757904,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757905,"byte_end":9757931,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757932,"byte_end":9757944,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757945,"byte_end":9757952,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757953,"byte_end":9757960,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757961,"byte_end":9757964,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757965,"byte_end":9757994,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757995,"byte_end":9758028,"line_start":176,"line_end":176,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":8258},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758926,"byte_end":9758932,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758464,"byte_end":9758519,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758524,"byte_end":9758527,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758532,"byte_end":9758608,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758613,"byte_end":9758689,"line_start":199,"line_end":199,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758694,"byte_end":9758725,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758730,"byte_end":9758733,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758738,"byte_end":9758752,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758757,"byte_end":9758760,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758765,"byte_end":9758772,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758777,"byte_end":9758804,"line_start":205,"line_end":205,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758809,"byte_end":9758812,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758817,"byte_end":9758859,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758864,"byte_end":9758902,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758907,"byte_end":9758914,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8259},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759858,"byte_end":9759865,"line_start":243,"line_end":243,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759044,"byte_end":9759078,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759083,"byte_end":9759086,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759091,"byte_end":9759166,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759171,"byte_end":9759247,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759252,"byte_end":9759265,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759270,"byte_end":9759273,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759278,"byte_end":9759307,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759312,"byte_end":9759315,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759320,"byte_end":9759334,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759339,"byte_end":9759342,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759347,"byte_end":9759354,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759359,"byte_end":9759386,"line_start":226,"line_end":226,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759391,"byte_end":9759394,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759399,"byte_end":9759417,"line_start":228,"line_end":228,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759422,"byte_end":9759443,"line_start":229,"line_end":229,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759448,"byte_end":9759499,"line_start":230,"line_end":230,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759504,"byte_end":9759507,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759512,"byte_end":9759545,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759550,"byte_end":9759590,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759595,"byte_end":9759606,"line_start":234,"line_end":234,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759611,"byte_end":9759614,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759619,"byte_end":9759663,"line_start":236,"line_end":236,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759668,"byte_end":9759712,"line_start":237,"line_end":237,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759717,"byte_end":9759720,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759725,"byte_end":9759768,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759773,"byte_end":9759818,"line_start":240,"line_end":240,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759823,"byte_end":9759828,"line_start":241,"line_end":241,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9759833,"byte_end":9759840,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8272},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9761802,"byte_end":9761806,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9761727,"byte_end":9761790,"line_start":307,"line_end":307,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8273},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762833,"byte_end":9762839,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762371,"byte_end":9762426,"line_start":325,"line_end":325,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762431,"byte_end":9762434,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762439,"byte_end":9762515,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762520,"byte_end":9762596,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762601,"byte_end":9762632,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762637,"byte_end":9762640,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762645,"byte_end":9762659,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762664,"byte_end":9762667,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762672,"byte_end":9762679,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762684,"byte_end":9762711,"line_start":334,"line_end":334,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762716,"byte_end":9762719,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762724,"byte_end":9762766,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762771,"byte_end":9762809,"line_start":337,"line_end":337,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762814,"byte_end":9762821,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8274},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763267,"byte_end":9763276,"line_start":356,"line_end":356,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9762951,"byte_end":9763025,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763030,"byte_end":9763047,"line_start":345,"line_end":345,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763052,"byte_end":9763055,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763060,"byte_end":9763074,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763079,"byte_end":9763082,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763087,"byte_end":9763094,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763099,"byte_end":9763150,"line_start":350,"line_end":350,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763155,"byte_end":9763184,"line_start":351,"line_end":351,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763189,"byte_end":9763192,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763197,"byte_end":9763210,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763215,"byte_end":9763243,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763248,"byte_end":9763255,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8275},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9764020,"byte_end":9764026,"line_start":384,"line_end":384,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763357,"byte_end":9763403,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763408,"byte_end":9763411,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763416,"byte_end":9763490,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763495,"byte_end":9763550,"line_start":363,"line_end":363,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763555,"byte_end":9763558,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763563,"byte_end":9763577,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763582,"byte_end":9763585,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763590,"byte_end":9763597,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763602,"byte_end":9763629,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763634,"byte_end":9763637,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763642,"byte_end":9763660,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763665,"byte_end":9763686,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763691,"byte_end":9763738,"line_start":372,"line_end":372,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763743,"byte_end":9763746,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763751,"byte_end":9763784,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763789,"byte_end":9763812,"line_start":375,"line_end":375,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763817,"byte_end":9763838,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763843,"byte_end":9763854,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763859,"byte_end":9763862,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763867,"byte_end":9763900,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763905,"byte_end":9763931,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763936,"byte_end":9763980,"line_start":381,"line_end":381,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763985,"byte_end":9763990,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9763995,"byte_end":9764002,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":899},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8552},{"krate":0,"index":8553},{"krate":0,"index":8556},{"krate":0,"index":8559},{"krate":0,"index":8563},{"krate":0,"index":8566},{"krate":0,"index":8576},{"krate":0,"index":8579},{"krate":0,"index":8593},{"krate":0,"index":8596},{"krate":0,"index":8712},{"krate":0,"index":8713},{"krate":0,"index":8716},{"krate":0,"index":8719},{"krate":0,"index":8798}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127427,"byte_end":127458,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127459,"byte_end":127462,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127463,"byte_end":127485,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127486,"byte_end":127489,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127490,"byte_end":127571,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127572,"byte_end":127652,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127653,"byte_end":127733,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127734,"byte_end":127808,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127809,"byte_end":127884,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127885,"byte_end":127907,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127908,"byte_end":127911,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127912,"byte_end":127947,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127948,"byte_end":127951,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":127952,"byte_end":128026,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128027,"byte_end":128106,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128107,"byte_end":128179,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128180,"byte_end":128255,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128256,"byte_end":128309,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128310,"byte_end":128313,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128314,"byte_end":128391,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128392,"byte_end":128465,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128466,"byte_end":128545,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128546,"byte_end":128624,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128625,"byte_end":128697,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128698,"byte_end":128773,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128774,"byte_end":128848,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128849,"byte_end":128924,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128925,"byte_end":128955,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128956,"byte_end":128959,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":128960,"byte_end":129038,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129039,"byte_end":129114,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129115,"byte_end":129192,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129193,"byte_end":129272,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129273,"byte_end":129351,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129352,"byte_end":129427,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129428,"byte_end":129503,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129504,"byte_end":129565,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129566,"byte_end":129569,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129570,"byte_end":129594,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129595,"byte_end":129659,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129660,"byte_end":129720,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129721,"byte_end":129810,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129811,"byte_end":129899,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129900,"byte_end":129903,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129904,"byte_end":129929,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129930,"byte_end":129933,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":129934,"byte_end":130001,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130002,"byte_end":130005,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130006,"byte_end":130022,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130023,"byte_end":130026,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130027,"byte_end":130106,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130107,"byte_end":130186,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130187,"byte_end":130266,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130267,"byte_end":130334,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130335,"byte_end":130338,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130339,"byte_end":130346,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130347,"byte_end":130367,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130368,"byte_end":130371,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130372,"byte_end":130394,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130395,"byte_end":130418,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130419,"byte_end":130455,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130456,"byte_end":130463,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130464,"byte_end":130471,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130472,"byte_end":130479,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130480,"byte_end":130483,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130484,"byte_end":130563,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130564,"byte_end":130642,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130643,"byte_end":130677,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130678,"byte_end":130681,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130682,"byte_end":130689,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130690,"byte_end":130710,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130711,"byte_end":130714,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130715,"byte_end":130795,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130796,"byte_end":130830,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130831,"byte_end":130845,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130846,"byte_end":130868,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130869,"byte_end":130876,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130877,"byte_end":130880,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130881,"byte_end":130891,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130892,"byte_end":130895,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130896,"byte_end":130940,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130941,"byte_end":130970,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":130971,"byte_end":131010,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131011,"byte_end":131023,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131024,"byte_end":131031,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131032,"byte_end":131039,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131040,"byte_end":131043,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131044,"byte_end":131124,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131125,"byte_end":131201,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131202,"byte_end":131214,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131215,"byte_end":131218,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131219,"byte_end":131226,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131227,"byte_end":131247,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131248,"byte_end":131251,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131252,"byte_end":131290,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131291,"byte_end":131325,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131326,"byte_end":131367,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131368,"byte_end":131375,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131376,"byte_end":131379,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131380,"byte_end":131438,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131439,"byte_end":131472,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131473,"byte_end":131480,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131481,"byte_end":131488,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131489,"byte_end":131492,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131493,"byte_end":131561,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131562,"byte_end":131590,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131591,"byte_end":131594,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131595,"byte_end":131636,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131637,"byte_end":131670,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131671,"byte_end":131717,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131718,"byte_end":131761,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131762,"byte_end":131804,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131805,"byte_end":131846,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131847,"byte_end":131850,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131851,"byte_end":131880,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131881,"byte_end":131884,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131885,"byte_end":131965,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":131966,"byte_end":132045,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132046,"byte_end":132125,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132126,"byte_end":132166,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132167,"byte_end":132170,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132171,"byte_end":132245,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132246,"byte_end":132326,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132327,"byte_end":132330,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132331,"byte_end":132354,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132355,"byte_end":132358,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132359,"byte_end":132439,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132440,"byte_end":132506,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132507,"byte_end":132574,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132575,"byte_end":132649,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132650,"byte_end":132662,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132663,"byte_end":132666,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132667,"byte_end":132674,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132675,"byte_end":132695,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132696,"byte_end":132699,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132700,"byte_end":132723,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132724,"byte_end":132753,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132754,"byte_end":132816,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132817,"byte_end":132824,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132825,"byte_end":132832,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132833,"byte_end":132840,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132841,"byte_end":132844,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132845,"byte_end":132919,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132920,"byte_end":132987,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132988,"byte_end":132991,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":132992,"byte_end":133003,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133004,"byte_end":133026,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133027,"byte_end":133091,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133092,"byte_end":133132,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133133,"byte_end":133195,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133196,"byte_end":133224,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133225,"byte_end":133232,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133233,"byte_end":133236,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133237,"byte_end":133266,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133267,"byte_end":133312,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133313,"byte_end":133325,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133326,"byte_end":133333,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133334,"byte_end":133341,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133342,"byte_end":133345,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133346,"byte_end":133369,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133370,"byte_end":133373,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133374,"byte_end":133464,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133465,"byte_end":133539,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133540,"byte_end":133616,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133617,"byte_end":133691,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133692,"byte_end":133771,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133772,"byte_end":133854,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133855,"byte_end":133876,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133877,"byte_end":133880,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133881,"byte_end":133897,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133898,"byte_end":133901,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133902,"byte_end":133909,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133910,"byte_end":133930,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133931,"byte_end":133934,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133935,"byte_end":133958,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":133959,"byte_end":134001,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134002,"byte_end":134064,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134065,"byte_end":134093,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134094,"byte_end":134101,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134102,"byte_end":134105,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134106,"byte_end":134151,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134152,"byte_end":134159,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134160,"byte_end":134167,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134168,"byte_end":134171,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134172,"byte_end":134190,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134191,"byte_end":134194,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134195,"byte_end":134269,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134270,"byte_end":134348,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134349,"byte_end":134425,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134426,"byte_end":134483,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134484,"byte_end":134562,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134563,"byte_end":134591,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134592,"byte_end":134595,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134596,"byte_end":134607,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134608,"byte_end":134628,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134629,"byte_end":134632,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134633,"byte_end":134671,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134672,"byte_end":134683,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134684,"byte_end":134711,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134712,"byte_end":134730,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134731,"byte_end":134773,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134774,"byte_end":134785,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134786,"byte_end":134789,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134790,"byte_end":134857,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134858,"byte_end":134890,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134891,"byte_end":134927,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134928,"byte_end":134933,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134934,"byte_end":134947,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134948,"byte_end":134955,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134956,"byte_end":134963,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134964,"byte_end":134967,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":134968,"byte_end":135025,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135026,"byte_end":135083,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135084,"byte_end":135147,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135148,"byte_end":135197,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/mod.rs","byte_start":135198,"byte_end":135247,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":8801},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/blocking.rs","byte_start":9771710,"byte_end":9771724,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/blocking.rs","byte_start":9771684,"byte_end":9771696,"line_start":108,"line_end":108,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":8804},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/spawn.rs","byte_start":9775564,"byte_end":9775569,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/spawn.rs","byte_start":9775538,"byte_end":9775550,"line_start":125,"line_end":125,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":8806},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/yield_now.rs","byte_start":9776637,"byte_end":9776646,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/yield_now.rs","byte_start":9776556,"byte_end":9776619,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8814},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9781043,"byte_end":9781051,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":8815},{"krate":0,"index":8816},{"krate":0,"index":8817}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":8823},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9783145,"byte_end":9783156,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":23366,"byte_end":23388,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9783119,"byte_end":9783131,"line_start":193,"line_end":193,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8665},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784053,"byte_end":9784056,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784008,"byte_end":9784041,"line_start":223,"line_end":223,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":8666},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785811,"byte_end":9785822,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784598,"byte_end":9784648,"line_start":241,"line_end":241,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784653,"byte_end":9784656,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784661,"byte_end":9784721,"line_start":243,"line_end":243,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784726,"byte_end":9784729,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784734,"byte_end":9784806,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784811,"byte_end":9784881,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784886,"byte_end":9784897,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784902,"byte_end":9784922,"line_start":248,"line_end":248,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784927,"byte_end":9784930,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784935,"byte_end":9784953,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784958,"byte_end":9784979,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9784984,"byte_end":9785026,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785031,"byte_end":9785034,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785039,"byte_end":9785111,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785116,"byte_end":9785169,"line_start":255,"line_end":255,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785174,"byte_end":9785207,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785212,"byte_end":9785229,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785234,"byte_end":9785245,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785250,"byte_end":9785253,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785258,"byte_end":9785292,"line_start":260,"line_end":260,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785297,"byte_end":9785333,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785338,"byte_end":9785356,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785361,"byte_end":9785378,"line_start":263,"line_end":263,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785383,"byte_end":9785386,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785391,"byte_end":9785462,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785467,"byte_end":9785517,"line_start":266,"line_end":266,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785522,"byte_end":9785555,"line_start":267,"line_end":267,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785560,"byte_end":9785577,"line_start":268,"line_end":268,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785582,"byte_end":9785593,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785598,"byte_end":9785601,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785606,"byte_end":9785642,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785647,"byte_end":9785665,"line_start":272,"line_end":272,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785670,"byte_end":9785687,"line_start":273,"line_end":273,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785692,"byte_end":9785697,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785702,"byte_end":9785709,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785714,"byte_end":9785749,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9785785,"byte_end":9785797,"line_start":277,"line_end":277,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":8668},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788620,"byte_end":9788628,"line_start":353,"line_end":353,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786165,"byte_end":9786239,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786244,"byte_end":9786303,"line_start":290,"line_end":290,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786308,"byte_end":9786311,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786316,"byte_end":9786383,"line_start":292,"line_end":292,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786388,"byte_end":9786461,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786466,"byte_end":9786542,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786547,"byte_end":9786627,"line_start":295,"line_end":295,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786632,"byte_end":9786651,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786656,"byte_end":9786659,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786664,"byte_end":9786730,"line_start":298,"line_end":298,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786735,"byte_end":9786738,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786743,"byte_end":9786755,"line_start":300,"line_end":300,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786760,"byte_end":9786763,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786768,"byte_end":9786840,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786845,"byte_end":9786918,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786923,"byte_end":9786926,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786931,"byte_end":9786942,"line_start":305,"line_end":305,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786947,"byte_end":9786950,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9786955,"byte_end":9787029,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787034,"byte_end":9787109,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787114,"byte_end":9787189,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787194,"byte_end":9787271,"line_start":310,"line_end":310,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787276,"byte_end":9787279,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787284,"byte_end":9787317,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787322,"byte_end":9787341,"line_start":313,"line_end":313,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787346,"byte_end":9787378,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787383,"byte_end":9787403,"line_start":315,"line_end":315,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787408,"byte_end":9787411,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787416,"byte_end":9787454,"line_start":317,"line_end":317,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787459,"byte_end":9787497,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787502,"byte_end":9787533,"line_start":319,"line_end":319,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787538,"byte_end":9787582,"line_start":320,"line_end":320,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787587,"byte_end":9787646,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787651,"byte_end":9787673,"line_start":322,"line_end":322,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787678,"byte_end":9787693,"line_start":323,"line_end":323,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787698,"byte_end":9787716,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787721,"byte_end":9787732,"line_start":325,"line_end":325,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787737,"byte_end":9787765,"line_start":326,"line_end":326,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787770,"byte_end":9787776,"line_start":327,"line_end":327,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787781,"byte_end":9787788,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787793,"byte_end":9787827,"line_start":329,"line_end":329,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787832,"byte_end":9787839,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787844,"byte_end":9787876,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787881,"byte_end":9787901,"line_start":332,"line_end":332,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787906,"byte_end":9787909,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787914,"byte_end":9787952,"line_start":334,"line_end":334,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9787957,"byte_end":9787995,"line_start":335,"line_end":335,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788000,"byte_end":9788031,"line_start":336,"line_end":336,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788036,"byte_end":9788080,"line_start":337,"line_end":337,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788085,"byte_end":9788144,"line_start":338,"line_end":338,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788149,"byte_end":9788171,"line_start":339,"line_end":339,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788176,"byte_end":9788197,"line_start":340,"line_end":340,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788202,"byte_end":9788220,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788225,"byte_end":9788236,"line_start":342,"line_end":342,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788241,"byte_end":9788269,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788274,"byte_end":9788280,"line_start":344,"line_end":344,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788285,"byte_end":9788292,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788297,"byte_end":9788300,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788305,"byte_end":9788340,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788345,"byte_end":9788412,"line_start":348,"line_end":348,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788417,"byte_end":9788472,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788477,"byte_end":9788531,"line_start":350,"line_end":350,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788536,"byte_end":9788558,"line_start":351,"line_end":351,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":8670},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789875,"byte_end":9789884,"line_start":388,"line_end":388,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788783,"byte_end":9788853,"line_start":360,"line_end":360,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788858,"byte_end":9788861,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788866,"byte_end":9788936,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9788941,"byte_end":9789017,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789022,"byte_end":9789090,"line_start":364,"line_end":364,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789095,"byte_end":9789175,"line_start":365,"line_end":365,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789180,"byte_end":9789252,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789257,"byte_end":9789332,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789337,"byte_end":9789393,"line_start":368,"line_end":368,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789398,"byte_end":9789401,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789406,"byte_end":9789420,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789425,"byte_end":9789428,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789433,"byte_end":9789444,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789449,"byte_end":9789469,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789474,"byte_end":9789477,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789482,"byte_end":9789500,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789505,"byte_end":9789526,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789531,"byte_end":9789578,"line_start":377,"line_end":377,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789583,"byte_end":9789625,"line_start":378,"line_end":378,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789630,"byte_end":9789652,"line_start":379,"line_end":379,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789657,"byte_end":9789687,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789692,"byte_end":9789710,"line_start":381,"line_end":381,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789715,"byte_end":9789732,"line_start":382,"line_end":382,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789737,"byte_end":9789742,"line_start":383,"line_end":383,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789747,"byte_end":9789754,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789759,"byte_end":9789762,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789767,"byte_end":9789802,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9789807,"byte_end":9789857,"line_start":387,"line_end":387,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8751},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798893,"byte_end":9798901,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":8753}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798014,"byte_end":9798044,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798045,"byte_end":9798048,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798049,"byte_end":9798103,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798104,"byte_end":9798107,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798108,"byte_end":9798174,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798175,"byte_end":9798242,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798243,"byte_end":9798300,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798301,"byte_end":9798370,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798371,"byte_end":9798374,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798375,"byte_end":9798389,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798390,"byte_end":9798393,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798394,"byte_end":9798401,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798402,"byte_end":9798424,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798425,"byte_end":9798449,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798450,"byte_end":9798477,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798478,"byte_end":9798483,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798484,"byte_end":9798487,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798488,"byte_end":9798520,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798521,"byte_end":9798557,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798558,"byte_end":9798571,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798572,"byte_end":9798575,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798576,"byte_end":9798608,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798609,"byte_end":9798645,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798646,"byte_end":9798649,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798650,"byte_end":9798686,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798687,"byte_end":9798727,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798728,"byte_end":9798745,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798746,"byte_end":9798759,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798760,"byte_end":9798767,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798768,"byte_end":9798775,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798776,"byte_end":9798835,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":8753},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9798943,"byte_end":9798948,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":8751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8756},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799476,"byte_end":9799481,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799026,"byte_end":9799090,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799095,"byte_end":9799098,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799103,"byte_end":9799164,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799169,"byte_end":9799172,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799177,"byte_end":9799193,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799198,"byte_end":9799201,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799206,"byte_end":9799213,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799218,"byte_end":9799240,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799245,"byte_end":9799269,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799274,"byte_end":9799301,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799306,"byte_end":9799311,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799316,"byte_end":9799319,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799324,"byte_end":9799356,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799361,"byte_end":9799416,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799421,"byte_end":9799434,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799439,"byte_end":9799446,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799451,"byte_end":9799458,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8760},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799955,"byte_end":9799959,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799706,"byte_end":9799772,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799777,"byte_end":9799780,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799785,"byte_end":9799797,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799802,"byte_end":9799805,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799810,"byte_end":9799871,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799876,"byte_end":9799943,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8763},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800447,"byte_end":9800455,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800200,"byte_end":9800266,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800271,"byte_end":9800274,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800279,"byte_end":9800345,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800350,"byte_end":9800415,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800420,"byte_end":9800435,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8769},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800915,"byte_end":9800918,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800810,"byte_end":9800852,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800857,"byte_end":9800903,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":8826},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802407,"byte_end":9802418,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":8827}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802282,"byte_end":9802357,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":8841},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":8842},{"krate":0,"index":8843},{"krate":0,"index":8846},{"krate":0,"index":9211},{"krate":0,"index":9212},{"krate":0,"index":9215},{"krate":0,"index":9218},{"krate":0,"index":9221},{"krate":0,"index":9249},{"krate":0,"index":9293},{"krate":0,"index":9296},{"krate":0,"index":9334},{"krate":0,"index":9335},{"krate":0,"index":9338},{"krate":0,"index":9341},{"krate":0,"index":9344},{"krate":0,"index":9391},{"krate":0,"index":9392},{"krate":0,"index":9395},{"krate":0,"index":9398},{"krate":0,"index":9401}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/cfg.rs","byte_start":24365,"byte_end":24389,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9802791,"byte_end":9802823,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9802824,"byte_end":9802827,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9802828,"byte_end":9802908,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9802909,"byte_end":9802921,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9802922,"byte_end":9802925,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9802926,"byte_end":9803007,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803008,"byte_end":9803022,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803023,"byte_end":9803026,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803027,"byte_end":9803097,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803098,"byte_end":9803178,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803179,"byte_end":9803193,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803194,"byte_end":9803197,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803198,"byte_end":9803277,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803278,"byte_end":9803350,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803351,"byte_end":9803420,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803421,"byte_end":9803424,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803425,"byte_end":9803496,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803497,"byte_end":9803516,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803517,"byte_end":9803520,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803521,"byte_end":9803591,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803592,"byte_end":9803595,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803596,"byte_end":9803610,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803611,"byte_end":9803614,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803615,"byte_end":9803661,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803662,"byte_end":9803665,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803666,"byte_end":9803673,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803674,"byte_end":9803701,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803702,"byte_end":9803705,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803706,"byte_end":9803734,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803735,"byte_end":9803738,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803739,"byte_end":9803742,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803743,"byte_end":9803761,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803762,"byte_end":9803783,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803784,"byte_end":9803832,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803833,"byte_end":9803873,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803874,"byte_end":9803879,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803880,"byte_end":9803887,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803888,"byte_end":9803891,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803892,"byte_end":9803947,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803948,"byte_end":9803951,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803952,"byte_end":9803959,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9803960,"byte_end":9804001,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804002,"byte_end":9804005,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804006,"byte_end":9804034,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804035,"byte_end":9804058,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804059,"byte_end":9804064,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804065,"byte_end":9804068,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804069,"byte_end":9804091,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804092,"byte_end":9804159,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804160,"byte_end":9804163,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804164,"byte_end":9804185,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804186,"byte_end":9804226,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804227,"byte_end":9804232,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804233,"byte_end":9804240,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804241,"byte_end":9804248,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804249,"byte_end":9804252,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804253,"byte_end":9804329,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804330,"byte_end":9804333,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804334,"byte_end":9804398,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804399,"byte_end":9804471,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804472,"byte_end":9804547,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804548,"byte_end":9804626,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804627,"byte_end":9804630,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804631,"byte_end":9804705,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804706,"byte_end":9804776,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804777,"byte_end":9804789,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804790,"byte_end":9804793,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804794,"byte_end":9804801,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804802,"byte_end":9804822,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804823,"byte_end":9804826,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804827,"byte_end":9804868,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804869,"byte_end":9804895,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804896,"byte_end":9804951,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804952,"byte_end":9804957,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804958,"byte_end":9804961,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804962,"byte_end":9804980,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9804981,"byte_end":9805002,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     let interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805003,"byte_end":9805071,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     tokio::pin!(interval);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805072,"byte_end":9805102,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805103,"byte_end":9805106,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805107,"byte_end":9805131,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/         interval.as_mut().tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805132,"byte_end":9805175,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805176,"byte_end":9805221,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805222,"byte_end":9805231,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805232,"byte_end":9805237,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805238,"byte_end":9805245,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805246,"byte_end":9805249,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805250,"byte_end":9805285,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805286,"byte_end":9805327,"line_start":89,"line_end":89,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":9111},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874465,"byte_end":9874476,"line_start":19,"line_end":19,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874077,"byte_end":9874115,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874116,"byte_end":9874119,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874120,"byte_end":9874200,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874201,"byte_end":9874278,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874279,"byte_end":9874314,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874315,"byte_end":9874318,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874319,"byte_end":9874337,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874338,"byte_end":9874341,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874342,"byte_end":9874427,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874428,"byte_end":9874457,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":9112},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875530,"byte_end":9875535,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874543,"byte_end":9874582,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874583,"byte_end":9874586,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874587,"byte_end":9874662,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874663,"byte_end":9874698,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874699,"byte_end":9874702,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874703,"byte_end":9874783,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874784,"byte_end":9874861,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874862,"byte_end":9874897,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874898,"byte_end":9874901,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874902,"byte_end":9874965,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874966,"byte_end":9874969,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9874970,"byte_end":9875061,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875062,"byte_end":9875065,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875066,"byte_end":9875084,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875085,"byte_end":9875088,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875089,"byte_end":9875174,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875175,"byte_end":9875204,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875205,"byte_end":9875208,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875209,"byte_end":9875223,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875224,"byte_end":9875227,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875228,"byte_end":9875275,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875276,"byte_end":9875279,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875280,"byte_end":9875287,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875288,"byte_end":9875327,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875328,"byte_end":9875331,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875332,"byte_end":9875350,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875351,"byte_end":9875372,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875373,"byte_end":9875421,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875422,"byte_end":9875462,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875463,"byte_end":9875468,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875469,"byte_end":9875476,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875477,"byte_end":9875480,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875481,"byte_end":9875522,"line_start":55,"line_end":55,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":9889},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875822,"byte_end":9875827,"line_start":65,"line_end":65,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":9890},{"krate":0,"index":9891}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and\n [`sleep_until`](sleep_until).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9115},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876273,"byte_end":9876281,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876203,"byte_end":9876261,"line_start":82,"line_end":82,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":9116},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876476,"byte_end":9876486,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876335,"byte_end":9876377,"line_start":87,"line_end":87,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876382,"byte_end":9876385,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876390,"byte_end":9876464,"line_start":89,"line_end":89,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9117},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876868,"byte_end":9876873,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876547,"byte_end":9876597,"line_start":94,"line_end":94,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876602,"byte_end":9876605,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876610,"byte_end":9876684,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876689,"byte_end":9876756,"line_start":97,"line_end":97,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876761,"byte_end":9876764,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876769,"byte_end":9876837,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9876842,"byte_end":9876856,"line_start":100,"line_end":100,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":9221},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","parent":null,"children":[{"krate":0,"index":9222},{"krate":0,"index":9223},{"krate":0,"index":9226},{"krate":0,"index":9484},{"krate":0,"index":9487},{"krate":0,"index":9489},{"krate":0,"index":9490},{"krate":0,"index":9492},{"krate":0,"index":9502},{"krate":0,"index":9504},{"krate":0,"index":9506},{"krate":0,"index":9507},{"krate":0,"index":9508},{"krate":0,"index":9510},{"krate":0,"index":9511},{"krate":0,"index":9229},{"krate":0,"index":9513},{"krate":0,"index":9516},{"krate":0,"index":9518},{"krate":0,"index":9519},{"krate":0,"index":9522},{"krate":0,"index":9525},{"krate":0,"index":9231},{"krate":0,"index":9238},{"krate":0,"index":9239},{"krate":0,"index":9242},{"krate":0,"index":9244},{"krate":0,"index":9246},{"krate":0,"index":9247}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878162,"byte_end":9878183,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":9484},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879370,"byte_end":9879375,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878235,"byte_end":9878286,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878287,"byte_end":9878290,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878291,"byte_end":9878352,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878353,"byte_end":9878356,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878357,"byte_end":9878431,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878432,"byte_end":9878511,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878512,"byte_end":9878587,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878588,"byte_end":9878663,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878664,"byte_end":9878692,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878693,"byte_end":9878696,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878697,"byte_end":9878774,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878775,"byte_end":9878862,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878863,"byte_end":9878939,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9878940,"byte_end":9879020,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879021,"byte_end":9879098,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879099,"byte_end":9879180,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879181,"byte_end":9879263,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879264,"byte_end":9879267,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879268,"byte_end":9879328,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9513},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879679,"byte_end":9879686,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879607,"byte_end":9879639,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":9232},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879863,"byte_end":9879871,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879800,"byte_end":9879851,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9233},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880003,"byte_end":9880014,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879920,"byte_end":9879991,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":9234},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880150,"byte_end":9880161,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880084,"byte_end":9880138,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":9235},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880298,"byte_end":9880312,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880212,"byte_end":9880286,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9236},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880451,"byte_end":9880458,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880384,"byte_end":9880439,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":9237},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880594,"byte_end":9880604,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880506,"byte_end":9880582,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":9527},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882982,"byte_end":9882989,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":9528}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9881691,"byte_end":9881748,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9881749,"byte_end":9881792,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9881793,"byte_end":9881796,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9881797,"byte_end":9881874,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9881875,"byte_end":9881949,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9881950,"byte_end":9882003,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882004,"byte_end":9882007,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882008,"byte_end":9882086,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882087,"byte_end":9882164,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882165,"byte_end":9882241,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882242,"byte_end":9882316,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882317,"byte_end":9882331,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882332,"byte_end":9882335,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882336,"byte_end":9882416,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882417,"byte_end":9882495,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882496,"byte_end":9882568,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882569,"byte_end":9882583,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882584,"byte_end":9882587,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882588,"byte_end":9882666,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882667,"byte_end":9882678,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882679,"byte_end":9882682,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882683,"byte_end":9882693,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882694,"byte_end":9882697,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882698,"byte_end":9882772,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882773,"byte_end":9882848,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9882849,"byte_end":9882909,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":9260},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883236,"byte_end":9883239,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883043,"byte_end":9883089,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883094,"byte_end":9883097,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883102,"byte_end":9883116,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883121,"byte_end":9883124,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883129,"byte_end":9883136,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883141,"byte_end":9883170,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883175,"byte_end":9883178,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883183,"byte_end":9883212,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883217,"byte_end":9883224,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9261},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883365,"byte_end":9883373,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883289,"byte_end":9883353,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9262},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883509,"byte_end":9883517,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883447,"byte_end":9883497,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":9263},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883761,"byte_end":9883775,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883576,"byte_end":9883648,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883653,"byte_end":9883656,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883661,"byte_end":9883673,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883678,"byte_end":9883681,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883686,"byte_end":9883749,"line_start":66,"line_end":66,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9264},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884458,"byte_end":9884480,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883871,"byte_end":9883946,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883951,"byte_end":9883999,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884004,"byte_end":9884007,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884012,"byte_end":9884026,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884031,"byte_end":9884034,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884039,"byte_end":9884046,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884051,"byte_end":9884099,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884104,"byte_end":9884107,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884112,"byte_end":9884130,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884135,"byte_end":9884156,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884161,"byte_end":9884194,"line_start":81,"line_end":81,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884199,"byte_end":9884240,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884245,"byte_end":9884282,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884287,"byte_end":9884349,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884354,"byte_end":9884424,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884429,"byte_end":9884434,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884439,"byte_end":9884446,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9265},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885195,"byte_end":9885220,"line_start":109,"line_end":109,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884592,"byte_end":9884667,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884672,"byte_end":9884731,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884736,"byte_end":9884739,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884744,"byte_end":9884758,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884763,"byte_end":9884766,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884771,"byte_end":9884778,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884783,"byte_end":9884831,"line_start":98,"line_end":98,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884836,"byte_end":9884839,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884844,"byte_end":9884862,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884867,"byte_end":9884888,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884893,"byte_end":9884926,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884931,"byte_end":9884972,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9884977,"byte_end":9885014,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885019,"byte_end":9885084,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885089,"byte_end":9885161,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885166,"byte_end":9885171,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885176,"byte_end":9885183,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9266},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885983,"byte_end":9885990,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885327,"byte_end":9885397,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885402,"byte_end":9885405,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885410,"byte_end":9885422,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885427,"byte_end":9885430,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885435,"byte_end":9885503,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885508,"byte_end":9885574,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885579,"byte_end":9885606,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885611,"byte_end":9885614,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885619,"byte_end":9885633,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885638,"byte_end":9885641,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885646,"byte_end":9885653,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885658,"byte_end":9885706,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885711,"byte_end":9885714,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885719,"byte_end":9885737,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885742,"byte_end":9885763,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885768,"byte_end":9885805,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885810,"byte_end":9885858,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885863,"byte_end":9885895,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885900,"byte_end":9885949,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885954,"byte_end":9885959,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9885964,"byte_end":9885971,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9267},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886271,"byte_end":9886282,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886054,"byte_end":9886129,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886134,"byte_end":9886205,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886210,"byte_end":9886259,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":9268},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886621,"byte_end":9886632,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886404,"byte_end":9886479,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886484,"byte_end":9886555,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886560,"byte_end":9886609,"line_start":147,"line_end":147,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":9326},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890076,"byte_end":9890084,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888354,"byte_end":9888431,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888432,"byte_end":9888463,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888464,"byte_end":9888467,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888468,"byte_end":9888548,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888549,"byte_end":9888588,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888589,"byte_end":9888592,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888593,"byte_end":9888666,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888667,"byte_end":9888670,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888671,"byte_end":9888683,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888684,"byte_end":9888687,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888688,"byte_end":9888733,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888734,"byte_end":9888737,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888738,"byte_end":9888752,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888753,"byte_end":9888756,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888757,"byte_end":9888764,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888765,"byte_end":9888803,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888804,"byte_end":9888807,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888808,"byte_end":9888826,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888827,"byte_end":9888848,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888849,"byte_end":9888918,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888919,"byte_end":9888922,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888923,"byte_end":9888953,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888954,"byte_end":9888984,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9888985,"byte_end":9889015,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889016,"byte_end":9889019,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889020,"byte_end":9889063,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889064,"byte_end":9889069,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889070,"byte_end":9889077,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889078,"byte_end":9889081,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889082,"byte_end":9889156,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889157,"byte_end":9889160,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889161,"byte_end":9889234,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889235,"byte_end":9889310,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889311,"byte_end":9889387,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889388,"byte_end":9889449,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889450,"byte_end":9889453,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889454,"byte_end":9889528,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889529,"byte_end":9889599,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889600,"byte_end":9889612,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889613,"byte_end":9889616,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889617,"byte_end":9889624,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889625,"byte_end":9889645,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889646,"byte_end":9889649,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889650,"byte_end":9889691,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889692,"byte_end":9889718,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889719,"byte_end":9889774,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889775,"byte_end":9889780,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889781,"byte_end":9889784,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889785,"byte_end":9889803,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889804,"byte_end":9889825,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889826,"byte_end":9889898,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889899,"byte_end":9889923,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889924,"byte_end":9889958,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9889959,"byte_end":9890004,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890005,"byte_end":9890014,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890015,"byte_end":9890020,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890021,"byte_end":9890028,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890029,"byte_end":9890032,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890033,"byte_end":9890068,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":9327},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890973,"byte_end":9890984,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890234,"byte_end":9890307,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890308,"byte_end":9890345,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890346,"byte_end":9890349,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890350,"byte_end":9890430,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890431,"byte_end":9890470,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890471,"byte_end":9890474,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890475,"byte_end":9890487,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890488,"byte_end":9890491,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890492,"byte_end":9890537,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890538,"byte_end":9890541,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890542,"byte_end":9890556,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890557,"byte_end":9890560,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890561,"byte_end":9890568,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890569,"byte_end":9890623,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890624,"byte_end":9890627,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890628,"byte_end":9890646,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890647,"byte_end":9890668,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890669,"byte_end":9890732,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890733,"byte_end":9890806,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890807,"byte_end":9890810,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890811,"byte_end":9890841,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890842,"byte_end":9890872,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890873,"byte_end":9890903,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890904,"byte_end":9890907,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890908,"byte_end":9890951,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890952,"byte_end":9890957,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9890958,"byte_end":9890965,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9546},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891300,"byte_end":9891308,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":9547},{"krate":0,"index":9548}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891192,"byte_end":9891271,"line_start":109,"line_end":109,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":9329},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892041,"byte_end":9892045,"line_start":140,"line_end":140,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891519,"byte_end":9891588,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891593,"byte_end":9891596,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891601,"byte_end":9891615,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891620,"byte_end":9891623,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891628,"byte_end":9891635,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891640,"byte_end":9891660,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891665,"byte_end":9891668,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891673,"byte_end":9891701,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891706,"byte_end":9891709,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891714,"byte_end":9891732,"line_start":129,"line_end":129,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891737,"byte_end":9891758,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891763,"byte_end":9891832,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891837,"byte_end":9891840,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891845,"byte_end":9891875,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891880,"byte_end":9891910,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891915,"byte_end":9891945,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891950,"byte_end":9891953,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891958,"byte_end":9892001,"line_start":137,"line_end":137,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892006,"byte_end":9892011,"line_start":138,"line_end":138,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892016,"byte_end":9892023,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":9333},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892721,"byte_end":9892730,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892128,"byte_end":9892188,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892193,"byte_end":9892196,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892201,"byte_end":9892249,"line_start":146,"line_end":146,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892254,"byte_end":9892257,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892262,"byte_end":9892330,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892335,"byte_end":9892402,"line_start":149,"line_end":149,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892407,"byte_end":9892410,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892415,"byte_end":9892490,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892495,"byte_end":9892570,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892575,"byte_end":9892650,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9892655,"byte_end":9892709,"line_start":154,"line_end":154,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":9377},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894577,"byte_end":9894584,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893562,"byte_end":9893639,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893640,"byte_end":9893643,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893644,"byte_end":9893723,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893724,"byte_end":9893796,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893797,"byte_end":9893810,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893811,"byte_end":9893814,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893815,"byte_end":9893832,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893833,"byte_end":9893836,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893837,"byte_end":9893915,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893916,"byte_end":9893946,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893947,"byte_end":9893950,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9893951,"byte_end":9894031,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894032,"byte_end":9894059,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894060,"byte_end":9894063,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894064,"byte_end":9894078,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894079,"byte_end":9894082,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894083,"byte_end":9894143,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894144,"byte_end":9894147,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894148,"byte_end":9894159,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894160,"byte_end":9894189,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894190,"byte_end":9894219,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894220,"byte_end":9894223,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894224,"byte_end":9894252,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894253,"byte_end":9894256,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894257,"byte_end":9894279,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894280,"byte_end":9894318,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894319,"byte_end":9894346,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894347,"byte_end":9894350,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894351,"byte_end":9894424,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894425,"byte_end":9894491,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894492,"byte_end":9894547,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894548,"byte_end":9894553,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894554,"byte_end":9894561,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894562,"byte_end":9894569,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":9379},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895796,"byte_end":9895806,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894765,"byte_end":9894837,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894838,"byte_end":9894841,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894842,"byte_end":9894919,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894920,"byte_end":9894975,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894976,"byte_end":9894979,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894980,"byte_end":9894997,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9894998,"byte_end":9895001,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895002,"byte_end":9895080,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895081,"byte_end":9895111,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895112,"byte_end":9895115,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895116,"byte_end":9895196,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895197,"byte_end":9895224,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895225,"byte_end":9895228,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895229,"byte_end":9895243,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895244,"byte_end":9895247,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895248,"byte_end":9895308,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895309,"byte_end":9895312,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895313,"byte_end":9895324,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895325,"byte_end":9895368,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895369,"byte_end":9895398,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895399,"byte_end":9895402,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895403,"byte_end":9895431,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895432,"byte_end":9895435,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895436,"byte_end":9895458,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895459,"byte_end":9895497,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895498,"byte_end":9895525,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895526,"byte_end":9895529,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895530,"byte_end":9895608,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895609,"byte_end":9895623,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895624,"byte_end":9895710,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895711,"byte_end":9895766,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895767,"byte_end":9895772,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895773,"byte_end":9895780,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9895781,"byte_end":9895788,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9851},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896181,"byte_end":9896188,"line_start":106,"line_end":106,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":9853},{"krate":0,"index":9854}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":10172718,"byte_end":10172727,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9384},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896484,"byte_end":9896491,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896411,"byte_end":9896472,"line_start":119,"line_end":119,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":9385},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896619,"byte_end":9896626,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896538,"byte_end":9896607,"line_start":124,"line_end":124,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":9386},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896755,"byte_end":9896765,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896685,"byte_end":9896743,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":925},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137854,"byte_end":137860,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137763,"byte_end":137792,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137797,"byte_end":137800,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137805,"byte_end":137844,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":926},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137890,"byte_end":137896,"line_start":49,"line_end":49,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137867,"byte_end":137880,"line_start":48,"line_end":48,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":971},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/rand.rs","byte_start":156318,"byte_end":156330,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/rand.rs","byte_start":156203,"byte_end":156234,"line_start":55,"line_end":55,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":977},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16429,"byte_end":16435,"line_start":444,"line_end":444,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14934,"byte_end":15015,"line_start":407,"line_end":407,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15016,"byte_end":15105,"line_start":408,"line_end":408,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15106,"byte_end":15116,"line_start":409,"line_end":409,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15117,"byte_end":15120,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15121,"byte_end":15170,"line_start":411,"line_end":411,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15171,"byte_end":15174,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15175,"byte_end":15251,"line_start":413,"line_end":413,"column_start":1,"column_end":77}},{"value":"/ but unfortunetly the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15252,"byte_end":15326,"line_start":414,"line_end":414,"column_start":1,"column_end":75}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15327,"byte_end":15405,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15406,"byte_end":15483,"line_start":416,"line_end":416,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15484,"byte_end":15563,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15564,"byte_end":15646,"line_start":418,"line_end":418,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15647,"byte_end":15682,"line_start":419,"line_end":419,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15683,"byte_end":15686,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15687,"byte_end":15766,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15767,"byte_end":15849,"line_start":422,"line_end":422,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15850,"byte_end":15929,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15930,"byte_end":15933,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15934,"byte_end":15984,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":15985,"byte_end":16035,"line_start":426,"line_end":426,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16036,"byte_end":16090,"line_start":427,"line_end":427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16091,"byte_end":16094,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16095,"byte_end":16108,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16109,"byte_end":16112,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16113,"byte_end":16172,"line_start":431,"line_end":431,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16173,"byte_end":16176,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16177,"byte_end":16195,"line_start":433,"line_end":433,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16196,"byte_end":16222,"line_start":434,"line_end":434,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16223,"byte_end":16226,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16227,"byte_end":16277,"line_start":436,"line_end":436,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16278,"byte_end":16281,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16282,"byte_end":16322,"line_start":438,"line_end":438,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16323,"byte_end":16371,"line_start":439,"line_end":439,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16372,"byte_end":16395,"line_start":440,"line_end":440,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16396,"byte_end":16405,"line_start":441,"line_end":441,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16406,"byte_end":16412,"line_start":442,"line_end":442,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":16413,"byte_end":16420,"line_start":443,"line_end":443,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/scoped_tls.rs","byte_start":30324,"byte_end":30333,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/scoped_tls.rs","byte_start":30349,"byte_end":30358,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/scoped_tls.rs","byte_start":30708,"byte_end":30713,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32673,"byte_end":32682,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32845,"byte_end":32854,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":34041,"byte_end":34050,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":34826,"byte_end":34832,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":35046,"byte_end":35052,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":35194,"byte_end":35200,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8897185,"byte_end":8897190,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8897217,"byte_end":8897222,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":48037,"byte_end":48040,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":48200,"byte_end":48203,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":48832,"byte_end":48838,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51878,"byte_end":51881,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":52024,"byte_end":52027,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":52696,"byte_end":52702,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55696,"byte_end":55699,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55842,"byte_end":55845,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":56236,"byte_end":56242,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":65712,"byte_end":65715,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":65863,"byte_end":65866,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":66743,"byte_end":66746,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":67544,"byte_end":67550,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":68353,"byte_end":68359,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":69165,"byte_end":69171,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":69972,"byte_end":69978,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72019,"byte_end":72026,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":80087,"byte_end":80094,"line_start":258,"line_end":258,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908318,"byte_end":8908326,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8910467,"byte_end":8910475,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8910618,"byte_end":8910626,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8910754,"byte_end":8910762,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911347,"byte_end":8911352,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8915769,"byte_end":8915774,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8916518,"byte_end":8916523,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1132},{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8916684,"byte_end":8916689,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8916817,"byte_end":8916822,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8916976,"byte_end":8916981,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8917128,"byte_end":8917133,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","byte_start":8919581,"byte_end":8919593,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","byte_start":8919618,"byte_end":8919630,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","byte_start":8919674,"byte_end":8919686,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","byte_start":8925226,"byte_end":8925238,"line_start":213,"line_end":213,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8928641,"byte_end":8928652,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8928912,"byte_end":8928923,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8929103,"byte_end":8929114,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8937141,"byte_end":8937152,"line_start":360,"line_end":360,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8937241,"byte_end":8937252,"line_start":366,"line_end":366,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8937277,"byte_end":8937288,"line_start":367,"line_end":367,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8937322,"byte_end":8937333,"line_start":370,"line_end":370,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8938256,"byte_end":8938262,"line_start":395,"line_end":395,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8938757,"byte_end":8938766,"line_start":414,"line_end":414,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8943440,"byte_end":8943449,"line_start":523,"line_end":523,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8943814,"byte_end":8943823,"line_start":536,"line_end":536,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8943856,"byte_end":8943865,"line_start":537,"line_end":537,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8900860,"byte_end":8900866,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8903672,"byte_end":8903678,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8903793,"byte_end":8903798,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8904242,"byte_end":8904248,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8904647,"byte_end":8904653,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8904803,"byte_end":8904809,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8905681,"byte_end":8905687,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8906504,"byte_end":8906510,"line_start":303,"line_end":303,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8906588,"byte_end":8906594,"line_start":309,"line_end":309,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8906729,"byte_end":8906734,"line_start":317,"line_end":317,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8907691,"byte_end":8907700,"line_start":347,"line_end":347,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8947386,"byte_end":8947397,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8950006,"byte_end":8950017,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1608},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8951560,"byte_end":8951571,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8951714,"byte_end":8951725,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8951897,"byte_end":8951908,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958764,"byte_end":8958771,"line_start":164,"line_end":164,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1697},{"krate":0,"index":1701},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970739,"byte_end":8970746,"line_start":458,"line_end":458,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970900,"byte_end":8970907,"line_start":464,"line_end":464,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971118,"byte_end":8971125,"line_start":472,"line_end":472,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971225,"byte_end":8971242,"line_start":478,"line_end":478,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973709,"byte_end":8973729,"line_start":539,"line_end":539,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976239,"byte_end":8976256,"line_start":600,"line_end":600,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976513,"byte_end":8976533,"line_start":608,"line_end":608,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978575,"byte_end":8978583,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979500,"byte_end":8979509,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979759,"byte_end":8979767,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8980062,"byte_end":8980071,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8980750,"byte_end":8980755,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981148,"byte_end":8981153,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981406,"byte_end":8981411,"line_start":155,"line_end":155,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981534,"byte_end":8981542,"line_start":161,"line_end":161,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981579,"byte_end":8981588,"line_start":162,"line_end":162,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981625,"byte_end":8981633,"line_start":163,"line_end":163,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981670,"byte_end":8981679,"line_start":164,"line_end":164,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981722,"byte_end":8981730,"line_start":166,"line_end":166,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981898,"byte_end":8981907,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/seek.rs","byte_start":8982864,"byte_end":8982868,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_buf_read_ext.rs","byte_start":8994715,"byte_end":8994716,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9034043,"byte_end":9034044,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_seek_ext.rs","byte_start":9036153,"byte_end":9036154,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9071401,"byte_end":9071402,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9072770,"byte_end":9072779,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074636,"byte_end":9074645,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9075455,"byte_end":9075464,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9076377,"byte_end":9076386,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9076897,"byte_end":9076906,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078395,"byte_end":9078404,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9080241,"byte_end":9080250,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9080392,"byte_end":9080401,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9081113,"byte_end":9081122,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9081652,"byte_end":9081661,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9081916,"byte_end":9081925,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2371},{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9083861,"byte_end":9083870,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9086148,"byte_end":9086157,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9087047,"byte_end":9087056,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9087310,"byte_end":9087319,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2436},{"krate":0,"index":2437}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9087606,"byte_end":9087615,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9088793,"byte_end":9088798,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089938,"byte_end":9089943,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9090222,"byte_end":9090227,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9090813,"byte_end":9090818,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2495},{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/copy.rs","byte_start":9093653,"byte_end":9093657,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2527},{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/copy_buf.rs","byte_start":9097351,"byte_end":9097358,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/empty.rs","byte_start":9099625,"byte_end":9099630,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/empty.rs","byte_start":9099844,"byte_end":9099849,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/empty.rs","byte_start":9100082,"byte_end":9100087,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/flush.rs","byte_start":9101214,"byte_end":9101219,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102215,"byte_end":9102220,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103472,"byte_end":9103477,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9107755,"byte_end":9107767,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9108311,"byte_end":9108323,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9109021,"byte_end":9109033,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9109184,"byte_end":9109188,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9109594,"byte_end":9109598,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9110464,"byte_end":9110468,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read.rs","byte_start":9112649,"byte_end":9112653,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2784},{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_buf.rs","byte_start":9113787,"byte_end":9113794,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_exact.rs","byte_start":9116175,"byte_end":9116184,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_line.rs","byte_start":9125274,"byte_end":9125282,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2956},{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_to_end.rs","byte_start":9128771,"byte_end":9128780,"line_start":104,"line_end":104,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_to_string.rs","byte_start":9131390,"byte_end":9131402,"line_start":71,"line_end":71,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3051},{"krate":0,"index":3052}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_until.rs","byte_start":9133793,"byte_end":9133802,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3089},{"krate":0,"index":3090}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/repeat.rs","byte_start":9135380,"byte_end":9135386,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/shutdown.rs","byte_start":9136765,"byte_end":9136773,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/sink.rs","byte_start":9138413,"byte_end":9138417,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/sink.rs","byte_start":9138927,"byte_end":9138931,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9139896,"byte_end":9139901,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3216}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140640,"byte_end":9140645,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3225}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9142958,"byte_end":9142962,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144590,"byte_end":9144594,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3272}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9145238,"byte_end":9145242,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write.rs","byte_start":9147041,"byte_end":9147046,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3311},{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_all.rs","byte_start":9148081,"byte_end":9148089,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_buf.rs","byte_start":9149574,"byte_end":9149582,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83262,"byte_end":83272,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83312,"byte_end":83322,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83624,"byte_end":83636,"line_start":67,"line_end":67,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83676,"byte_end":83688,"line_start":69,"line_end":69,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83985,"byte_end":83997,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":84037,"byte_end":84049,"line_start":82,"line_end":82,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":88380,"byte_end":88386,"line_start":228,"line_end":228,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":88430,"byte_end":88436,"line_start":230,"line_end":230,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89989,"byte_end":89999,"line_start":285,"line_end":285,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3936},{"krate":0,"index":3937}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":90638,"byte_end":90647,"line_start":303,"line_end":303,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157233,"byte_end":9157244,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165540,"byte_end":9165551,"line_start":304,"line_end":304,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4029},{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165877,"byte_end":9165888,"line_start":316,"line_end":316,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4032}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9166094,"byte_end":9166105,"line_start":327,"line_end":327,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4039}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169617,"byte_end":9169626,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079},{"krate":0,"index":4080},{"krate":0,"index":4083}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182267,"byte_end":9182276,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4085}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182411,"byte_end":9182420,"line_start":494,"line_end":494,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4087}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182530,"byte_end":9182539,"line_start":501,"line_end":501,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4089}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185243,"byte_end":9185251,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4125},{"krate":0,"index":4126}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9188054,"byte_end":9188062,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4131}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9188278,"byte_end":9188287,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9189204,"byte_end":9189212,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4139}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9189306,"byte_end":9189315,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192201,"byte_end":9192213,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4195}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192416,"byte_end":9192428,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192438,"byte_end":9192451,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4200}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195633,"byte_end":9195646,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4205}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195847,"byte_end":9195861,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4207},{"krate":0,"index":4208}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196544,"byte_end":9196558,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4210}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196722,"byte_end":9196736,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9197783,"byte_end":9197796,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4218}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9197892,"byte_end":9197906,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200431,"byte_end":9200440,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4321},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4344},{"krate":0,"index":4347},{"krate":0,"index":4349},{"krate":0,"index":4354},{"krate":0,"index":4357},{"krate":0,"index":4359},{"krate":0,"index":4364},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9230685,"byte_end":9230694,"line_start":956,"line_end":956,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4383},{"krate":0,"index":4384}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9231052,"byte_end":9231061,"line_start":970,"line_end":970,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4386}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9231271,"byte_end":9231280,"line_start":980,"line_end":980,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4392}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9232106,"byte_end":9232115,"line_start":1013,"line_end":1013,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9232319,"byte_end":9232328,"line_start":1024,"line_end":1024,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4401}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237090,"byte_end":9237099,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4465},{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4479},{"krate":0,"index":4482},{"krate":0,"index":4485},{"krate":0,"index":4489},{"krate":0,"index":4491},{"krate":0,"index":4493},{"krate":0,"index":4496},{"krate":0,"index":4500},{"krate":0,"index":4501},{"krate":0,"index":4503},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4511},{"krate":0,"index":4515},{"krate":0,"index":4519},{"krate":0,"index":4520},{"krate":0,"index":4522},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4528},{"krate":0,"index":4529},{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274741,"byte_end":9274750,"line_start":1213,"line_end":1213,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4543},{"krate":0,"index":4544}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9275075,"byte_end":9275084,"line_start":1225,"line_end":1225,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4546}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9275293,"byte_end":9275302,"line_start":1236,"line_end":1236,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4553}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278691,"byte_end":9278703,"line_start":86,"line_end":86,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4667},{"krate":0,"index":4670},{"krate":0,"index":4673},{"krate":0,"index":4676},{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4688},{"krate":0,"index":4690},{"krate":0,"index":4693},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4704},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4712},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4717},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4720}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311225,"byte_end":9311237,"line_start":1086,"line_end":1086,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4722},{"krate":0,"index":4723}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311581,"byte_end":9311593,"line_start":1098,"line_end":1098,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4725}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311708,"byte_end":9311720,"line_start":1104,"line_end":1104,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4727}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313233,"byte_end":9313245,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4773},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777},{"krate":0,"index":4778},{"krate":0,"index":4782}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9316299,"byte_end":9316311,"line_start":124,"line_end":124,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4784},{"krate":0,"index":4785}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9316646,"byte_end":9316658,"line_start":136,"line_end":136,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4787}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9316773,"byte_end":9316785,"line_start":142,"line_end":142,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318566,"byte_end":9318574,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4822}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318790,"byte_end":9318799,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9319585,"byte_end":9319593,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9319689,"byte_end":9319698,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4832}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322613,"byte_end":9322625,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4883}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322828,"byte_end":9322840,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322850,"byte_end":9322863,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4886}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323279,"byte_end":9323292,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4888}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323493,"byte_end":9323507,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4890},{"krate":0,"index":4891}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9324205,"byte_end":9324219,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4893}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9324383,"byte_end":9324397,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4895},{"krate":0,"index":4896},{"krate":0,"index":4897},{"krate":0,"index":4898},{"krate":0,"index":4899}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9325441,"byte_end":9325454,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4901}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9325552,"byte_end":9325566,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4903}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325787,"byte_end":9325797,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4925},{"krate":0,"index":4926}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9326349,"byte_end":9326359,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4928}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9327778,"byte_end":9327788,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5028},{"krate":0,"index":5033},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5041},{"krate":0,"index":5043},{"krate":0,"index":5046},{"krate":0,"index":5048},{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5060}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344991,"byte_end":9345001,"line_start":503,"line_end":503,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5062},{"krate":0,"index":5063}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9345314,"byte_end":9345324,"line_start":515,"line_end":515,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9345534,"byte_end":9345544,"line_start":525,"line_end":525,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9346309,"byte_end":9346319,"line_start":556,"line_end":556,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5075}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9347582,"byte_end":9347592,"line_start":594,"line_end":594,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5077}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9347707,"byte_end":9347717,"line_start":600,"line_end":600,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5079}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348104,"byte_end":9348109,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5097}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_ptr.rs","byte_start":94254,"byte_end":94263,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_ptr.rs","byte_start":94437,"byte_end":94446,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_ptr.rs","byte_start":94593,"byte_end":94602,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_ptr.rs","byte_start":94715,"byte_end":94724,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95068,"byte_end":95077,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95102,"byte_end":95111,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95121,"byte_end":95130,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95622,"byte_end":95631,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95916,"byte_end":95925,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96266,"byte_end":96275,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96300,"byte_end":96309,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96319,"byte_end":96328,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96513,"byte_end":96522,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96807,"byte_end":96816,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":98931,"byte_end":98939,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":98964,"byte_end":98972,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":98982,"byte_end":98990,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":99171,"byte_end":99179,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":99463,"byte_end":99471,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":99811,"byte_end":99822,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":99847,"byte_end":99858,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":99868,"byte_end":99879,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":100568,"byte_end":100579,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":100869,"byte_end":100880,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":101044,"byte_end":101055,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/mutex.rs","byte_start":101386,"byte_end":101391,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/unsafe_cell.rs","byte_start":102069,"byte_end":102079,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/either.rs","byte_start":9354017,"byte_end":9354023,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5248},{"krate":0,"index":5249},{"krate":0,"index":5250},{"krate":0,"index":5251}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/either.rs","byte_start":9354980,"byte_end":9354986,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5255}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/either.rs","byte_start":9355200,"byte_end":9355206,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5259}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":107243,"byte_end":107253,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":107518,"byte_end":107528,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":108054,"byte_end":108059,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":112824,"byte_end":112834,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":112943,"byte_end":112955,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":113310,"byte_end":113326,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":114589,"byte_end":114605,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":115200,"byte_end":115212,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":115392,"byte_end":115397,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":106290,"byte_end":106293,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":106382,"byte_end":106385,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9375700,"byte_end":9375712,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5306}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9378658,"byte_end":9378679,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9379395,"byte_end":9379400,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5949},{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9381040,"byte_end":9381045,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5310}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9381175,"byte_end":9381180,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5312}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/core.rs","byte_start":9388912,"byte_end":9388918,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/core.rs","byte_start":9388943,"byte_end":9388949,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/core.rs","byte_start":9389308,"byte_end":9389312,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5398}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/core.rs","byte_start":9390090,"byte_end":9390094,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5402},{"krate":0,"index":5404},{"krate":0,"index":5406},{"krate":0,"index":5408},{"krate":0,"index":5410},{"krate":0,"index":5412},{"krate":0,"index":5417},{"krate":0,"index":5419},{"krate":0,"index":5421}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9396475,"byte_end":9396484,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5455},{"krate":0,"index":5456},{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9399210,"byte_end":9399219,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5459}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9399462,"byte_end":9399471,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5461}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9399748,"byte_end":9399757,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9399791,"byte_end":9399796,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5464}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/harness.rs","byte_start":9400474,"byte_end":9400481,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5527}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/harness.rs","byte_start":9400958,"byte_end":9400965,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5531},{"krate":0,"index":5542},{"krate":0,"index":5546},{"krate":0,"index":5549},{"krate":0,"index":5552},{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5559},{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5563}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/harness.rs","byte_start":9403136,"byte_end":9403141,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5541}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417396,"byte_end":9417406,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417443,"byte_end":9417453,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417469,"byte_end":9417479,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5596},{"krate":0,"index":5597}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418714,"byte_end":9418724,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418751,"byte_end":9418761,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5602},{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9419987,"byte_end":9419997,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5606}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9420263,"byte_end":9420273,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5609}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/raw.rs","byte_start":9421520,"byte_end":9421527,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5655},{"krate":0,"index":5658},{"krate":0,"index":5659},{"krate":0,"index":5660},{"krate":0,"index":5661},{"krate":0,"index":5662},{"krate":0,"index":5663},{"krate":0,"index":5664}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/raw.rs","byte_start":9423058,"byte_end":9423065,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5666}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/raw.rs","byte_start":9423155,"byte_end":9423162,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/state.rs","byte_start":9425844,"byte_end":9425849,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5726},{"krate":0,"index":5728},{"krate":0,"index":5730},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5735},{"krate":0,"index":5741},{"krate":0,"index":5743},{"krate":0,"index":5745},{"krate":0,"index":5747},{"krate":0,"index":5754},{"krate":0,"index":5755}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/state.rs","byte_start":9434705,"byte_end":9434713,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773},{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/state.rs","byte_start":9436590,"byte_end":9436595,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5778}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/state.rs","byte_start":9436754,"byte_end":9436762,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/waker.rs","byte_start":9438580,"byte_end":9438588,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5830},{"krate":0,"index":5831}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382175,"byte_end":9382179,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382210,"byte_end":9382214,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382351,"byte_end":9382359,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382400,"byte_end":9382408,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9384395,"byte_end":9384399,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5891},{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9385295,"byte_end":9385299,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5895}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9385468,"byte_end":9385476,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5898},{"krate":0,"index":5899}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9385762,"byte_end":9385766,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5902}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9386006,"byte_end":9386010,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5905}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9386162,"byte_end":9386170,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5908}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9386386,"byte_end":9386390,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5911},{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9442300,"byte_end":9442314,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6089},{"krate":0,"index":6092}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9444553,"byte_end":9444558,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6095}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9447181,"byte_end":9447186,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6113}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9447879,"byte_end":9447893,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6117}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9449112,"byte_end":9449126,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6121}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9449292,"byte_end":9449299,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6123},{"krate":0,"index":6125},{"krate":0,"index":6126}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9449829,"byte_end":9449836,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6128}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9450004,"byte_end":9450007,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6130},{"krate":0,"index":6132},{"krate":0,"index":6137}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9451096,"byte_end":9451102,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6140},{"krate":0,"index":6141}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9451564,"byte_end":9451574,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6149}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9451849,"byte_end":9451859,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6153}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9456343,"byte_end":9456355,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6250}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9458930,"byte_end":9458942,"line_start":172,"line_end":172,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6254}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9459028,"byte_end":9459040,"line_start":178,"line_end":178,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9459201,"byte_end":9459208,"line_start":186,"line_end":186,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6258},{"krate":0,"index":6259}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9461640,"byte_end":9461645,"line_start":264,"line_end":264,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6262}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9464884,"byte_end":9464891,"line_start":360,"line_end":360,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6264}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/schedule.rs","byte_start":9465394,"byte_end":9465406,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6288}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/shutdown.rs","byte_start":9466279,"byte_end":9466287,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6301}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/task.rs","byte_start":9468036,"byte_end":9468048,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6324}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/task.rs","byte_start":9468274,"byte_end":9468286,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/task.rs","byte_start":9468316,"byte_end":9468328,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6330},{"krate":0,"index":6331}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9471443,"byte_end":9471450,"line_start":82,"line_end":82,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6396},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6401},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6406}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9482319,"byte_end":9482326,"line_start":446,"line_end":446,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6558}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9482888,"byte_end":9482895,"line_start":470,"line_end":470,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6560}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9484881,"byte_end":9484888,"line_start":533,"line_end":533,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6415}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/context.rs","byte_start":9487357,"byte_end":9487367,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6433}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/driver.rs","byte_start":9491819,"byte_end":9491825,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6459}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/driver.rs","byte_start":9492390,"byte_end":9492396,"line_start":187,"line_end":187,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":6464},{"krate":0,"index":6465},{"krate":0,"index":6466}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494097,"byte_end":9494103,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6510}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9499503,"byte_end":9499518,"line_start":208,"line_end":208,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6517}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9499666,"byte_end":9499681,"line_start":214,"line_end":214,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6519}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9499839,"byte_end":9499854,"line_start":220,"line_end":220,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/spawner.rs","byte_start":9500239,"byte_end":9500246,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6530}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/spawner.rs","byte_start":9500488,"byte_end":9500495,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6636}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9365259,"byte_end":9365266,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6649},{"krate":0,"index":6650},{"krate":0,"index":6652},{"krate":0,"index":6655},{"krate":0,"index":6657},{"krate":0,"index":6658},{"krate":0,"index":6659}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":120163,"byte_end":120169,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":121529,"byte_end":121539,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":122510,"byte_end":122526,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6697}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":122658,"byte_end":122674,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6699}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":124414,"byte_end":124420,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6704},{"krate":0,"index":6705}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518520,"byte_end":9518527,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6715},{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9521806,"byte_end":9521823,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6720}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529054,"byte_end":9529063,"line_start":216,"line_end":216,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6799}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529239,"byte_end":9529248,"line_start":222,"line_end":222,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529896,"byte_end":9529905,"line_start":241,"line_end":241,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6803}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530210,"byte_end":9530219,"line_start":250,"line_end":250,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9531142,"byte_end":9531154,"line_start":276,"line_end":276,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6806}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9531532,"byte_end":9531544,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9533802,"byte_end":9533808,"line_start":382,"line_end":382,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6847}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9533935,"byte_end":9533941,"line_start":388,"line_end":388,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6851}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534102,"byte_end":9534106,"line_start":394,"line_end":394,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534176,"byte_end":9534180,"line_start":395,"line_end":395,"column_start":61,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9536953,"byte_end":9536959,"line_start":485,"line_end":485,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9536996,"byte_end":9537002,"line_start":486,"line_end":486,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537040,"byte_end":9537048,"line_start":488,"line_end":488,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537085,"byte_end":9537093,"line_start":489,"line_end":489,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537109,"byte_end":9537115,"line_start":491,"line_end":491,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6874},{"krate":0,"index":6875}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9542725,"byte_end":9542729,"line_start":678,"line_end":678,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6881}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9543121,"byte_end":9543127,"line_start":693,"line_end":693,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6884}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9543307,"byte_end":9543313,"line_start":702,"line_end":702,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6887}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9543467,"byte_end":9543475,"line_start":710,"line_end":710,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548338,"byte_end":9548346,"line_start":828,"line_end":828,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6894},{"krate":0,"index":6897}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552538,"byte_end":9552546,"line_start":945,"line_end":945,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6900}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9553172,"byte_end":9553176,"line_start":968,"line_end":968,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6904},{"krate":0,"index":6905}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9554018,"byte_end":9554022,"line_start":998,"line_end":998,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6909},{"krate":0,"index":6910}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9554708,"byte_end":9554712,"line_start":1019,"line_end":1019,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6914}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9555501,"byte_end":9555507,"line_start":1048,"line_end":1048,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9555922,"byte_end":9555928,"line_start":1065,"line_end":1065,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6925}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9556072,"byte_end":9556080,"line_start":1071,"line_end":1071,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6928}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9556215,"byte_end":9556224,"line_start":1077,"line_end":1077,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6932}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9556397,"byte_end":9556406,"line_start":1086,"line_end":1086,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6937}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/block.rs","byte_start":9563288,"byte_end":9563293,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7013},{"krate":0,"index":7014},{"krate":0,"index":7015},{"krate":0,"index":7016},{"krate":0,"index":7018},{"krate":0,"index":7020},{"krate":0,"index":7021},{"krate":0,"index":7022},{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026},{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":7030}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/block.rs","byte_start":9573275,"byte_end":9573281,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7035}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/block.rs","byte_start":9573763,"byte_end":9573769,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7038},{"krate":0,"index":7039}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576889,"byte_end":9576897,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7083},{"krate":0,"index":7084},{"krate":0,"index":7091},{"krate":0,"index":7092},{"krate":0,"index":7093}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581966,"byte_end":9581974,"line_start":261,"line_end":261,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7096}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582170,"byte_end":9582178,"line_start":269,"line_end":269,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582194,"byte_end":9582200,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7101},{"krate":0,"index":7102},{"krate":0,"index":7105},{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":7114}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593002,"byte_end":9593008,"line_start":604,"line_end":604,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7119}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593140,"byte_end":9593146,"line_start":612,"line_end":612,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7122}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593358,"byte_end":9593364,"line_start":622,"line_end":622,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7125}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594614,"byte_end":9594620,"line_start":665,"line_end":665,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7131}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594947,"byte_end":9594953,"line_start":680,"line_end":680,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7137}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9595614,"byte_end":9595616,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7204}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9595909,"byte_end":9595911,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7212}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9596848,"byte_end":9596852,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7230}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9597485,"byte_end":9597493,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7237}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9597759,"byte_end":9597763,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9597812,"byte_end":9597816,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9598323,"byte_end":9598325,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7252},{"krate":0,"index":7253}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9598757,"byte_end":9598759,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7257},{"krate":0,"index":7258}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9599309,"byte_end":9599311,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7264}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9599650,"byte_end":9599652,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7268}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9599975,"byte_end":9599977,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7272},{"krate":0,"index":7273},{"krate":0,"index":7275}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9603368,"byte_end":9603370,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7282}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9603782,"byte_end":9603786,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7290}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9603971,"byte_end":9603975,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7294}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9604976,"byte_end":9604987,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7315},{"krate":0,"index":7316},{"krate":0,"index":7317},{"krate":0,"index":7318}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/list.rs","byte_start":9606728,"byte_end":9606730,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7369},{"krate":0,"index":7370},{"krate":0,"index":7371},{"krate":0,"index":7373}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/list.rs","byte_start":9612434,"byte_end":9612436,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7376}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/list.rs","byte_start":9612713,"byte_end":9612715,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7379},{"krate":0,"index":7380},{"krate":0,"index":7381},{"krate":0,"index":7382}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/list.rs","byte_start":9616114,"byte_end":9616116,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7385}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616774,"byte_end":9616789,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7411}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616930,"byte_end":9616945,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7414}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617403,"byte_end":9617420,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7420}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618419,"byte_end":9618436,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7426},{"krate":0,"index":7427},{"krate":0,"index":7434},{"krate":0,"index":7435},{"krate":0,"index":7436}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621734,"byte_end":9621749,"line_start":179,"line_end":179,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7441},{"krate":0,"index":7452},{"krate":0,"index":7455}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625439,"byte_end":9625448,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7475}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625608,"byte_end":9625617,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626103,"byte_end":9626115,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626148,"byte_end":9626160,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7482}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626500,"byte_end":9626512,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7485}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626741,"byte_end":9626750,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7487}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626880,"byte_end":9626889,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9628390,"byte_end":9628406,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9628443,"byte_end":9628459,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8372}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634830,"byte_end":9634835,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634889,"byte_end":9634894,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634948,"byte_end":9634958,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635023,"byte_end":9635038,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635325,"byte_end":9635337,"line_start":172,"line_end":172,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7533}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635474,"byte_end":9635486,"line_start":178,"line_end":178,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636294,"byte_end":9636299,"line_start":204,"line_end":204,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7537},{"krate":0,"index":7538},{"krate":0,"index":7541},{"krate":0,"index":7544},{"krate":0,"index":7548},{"krate":0,"index":7549},{"krate":0,"index":7550},{"krate":0,"index":7551}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642052,"byte_end":9642057,"line_start":407,"line_end":407,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7554}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642141,"byte_end":9642146,"line_start":413,"line_end":413,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7557}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642270,"byte_end":9642275,"line_start":422,"line_end":422,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7560}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642670,"byte_end":9642680,"line_start":438,"line_end":438,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7563}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642781,"byte_end":9642791,"line_start":444,"line_end":444,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7566},{"krate":0,"index":7567}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642938,"byte_end":9642948,"line_start":451,"line_end":451,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7570}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643105,"byte_end":9643115,"line_start":457,"line_end":457,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7573}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643281,"byte_end":9643291,"line_start":463,"line_end":463,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7576}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643469,"byte_end":9643484,"line_start":471,"line_end":471,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7579}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643581,"byte_end":9643596,"line_start":477,"line_end":477,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7582},{"krate":0,"index":7583}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643739,"byte_end":9643754,"line_start":484,"line_end":484,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7586}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643907,"byte_end":9643922,"line_start":490,"line_end":490,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7589}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9644084,"byte_end":9644099,"line_start":496,"line_end":496,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7592}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9648962,"byte_end":9648970,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649003,"byte_end":9649011,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649841,"byte_end":9649847,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7664},{"krate":0,"index":7665},{"krate":0,"index":7666},{"krate":0,"index":7667}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9658423,"byte_end":9658429,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7671}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9660339,"byte_end":9660347,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7674}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9660860,"byte_end":9660868,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7676},{"krate":0,"index":7677}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9666564,"byte_end":9666572,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7680}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9669627,"byte_end":9669633,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7683},{"krate":0,"index":7684},{"krate":0,"index":7685},{"krate":0,"index":7686},{"krate":0,"index":7687}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671509,"byte_end":9671518,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7747}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671680,"byte_end":9671689,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671758,"byte_end":9671770,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7750}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672069,"byte_end":9672081,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673867,"byte_end":9673873,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7763},{"krate":0,"index":7766},{"krate":0,"index":7773},{"krate":0,"index":7774}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681536,"byte_end":9681542,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7778}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681681,"byte_end":9681689,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7781},{"krate":0,"index":7782}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9686080,"byte_end":9686088,"line_start":552,"line_end":552,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7785}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9686235,"byte_end":9686243,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7788},{"krate":0,"index":7789}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9686706,"byte_end":9686711,"line_start":576,"line_end":576,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7792},{"krate":0,"index":7793},{"krate":0,"index":7795},{"krate":0,"index":7796},{"krate":0,"index":7798},{"krate":0,"index":7802},{"krate":0,"index":7806},{"krate":0,"index":7808},{"krate":0,"index":7810},{"krate":0,"index":7812}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691083,"byte_end":9691088,"line_start":722,"line_end":722,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691125,"byte_end":9691130,"line_start":723,"line_end":723,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691155,"byte_end":9691160,"line_start":725,"line_end":725,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7820}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691529,"byte_end":9691534,"line_start":743,"line_end":743,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7824}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691929,"byte_end":9691934,"line_start":758,"line_end":758,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7833},{"krate":0,"index":7834},{"krate":0,"index":7835},{"krate":0,"index":7836},{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7839},{"krate":0,"index":7840},{"krate":0,"index":7841},{"krate":0,"index":7842},{"krate":0,"index":7843},{"krate":0,"index":7844},{"krate":0,"index":7845}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9693647,"byte_end":9693652,"line_start":824,"line_end":824,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7847}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9697711,"byte_end":9697720,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7918},{"krate":0,"index":7919},{"krate":0,"index":7920},{"krate":0,"index":7921},{"krate":0,"index":7922},{"krate":0,"index":7923},{"krate":0,"index":7924},{"krate":0,"index":7926},{"krate":0,"index":7927},{"krate":0,"index":7928},{"krate":0,"index":7929},{"krate":0,"index":7933}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9708745,"byte_end":9708754,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7937}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9708953,"byte_end":9708959,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7939},{"krate":0,"index":7940}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9709825,"byte_end":9709832,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7942},{"krate":0,"index":7943}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9710510,"byte_end":9710517,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7946},{"krate":0,"index":7947}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9711316,"byte_end":9711323,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7951}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712573,"byte_end":9712580,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712627,"byte_end":9712639,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":7954}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712732,"byte_end":9712744,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7956}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712888,"byte_end":9712900,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712947,"byte_end":9712962,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7959},{"krate":0,"index":7960}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9713480,"byte_end":9713495,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7962}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9713781,"byte_end":9713796,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9713889,"byte_end":9713895,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7965},{"krate":0,"index":7966},{"krate":0,"index":7967},{"krate":0,"index":7968},{"krate":0,"index":7969}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9716565,"byte_end":9716574,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7992},{"krate":0,"index":7993},{"krate":0,"index":7994},{"krate":0,"index":7995},{"krate":0,"index":7998},{"krate":0,"index":8001},{"krate":0,"index":8002},{"krate":0,"index":8003},{"krate":0,"index":8006},{"krate":0,"index":8007}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722912,"byte_end":9722927,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8010}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723172,"byte_end":9723192,"line_start":243,"line_end":243,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8012}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723446,"byte_end":9723461,"line_start":252,"line_end":252,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8015}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723569,"byte_end":9723589,"line_start":258,"line_end":258,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8017}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726944,"byte_end":9726959,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8057},{"krate":0,"index":8060}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730377,"byte_end":9730392,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8066}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730572,"byte_end":9730587,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8070}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730763,"byte_end":9730778,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8074}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731242,"byte_end":9731258,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8084}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732878,"byte_end":9732894,"line_start":292,"line_end":292,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8088}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9733074,"byte_end":9733090,"line_start":301,"line_end":301,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8092}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9733266,"byte_end":9733282,"line_start":310,"line_end":310,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8096}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734358,"byte_end":9734364,"line_start":345,"line_end":345,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734418,"byte_end":9734424,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734658,"byte_end":9734673,"line_start":350,"line_end":350,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734731,"byte_end":9734746,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734811,"byte_end":9734827,"line_start":352,"line_end":352,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735140,"byte_end":9735156,"line_start":357,"line_end":357,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735214,"byte_end":9735220,"line_start":359,"line_end":359,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8111},{"krate":0,"index":8112},{"krate":0,"index":8116},{"krate":0,"index":8120},{"krate":0,"index":8121}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739608,"byte_end":9739623,"line_start":512,"line_end":512,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8124},{"krate":0,"index":8125}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739754,"byte_end":9739770,"line_start":520,"line_end":520,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8128},{"krate":0,"index":8129}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739904,"byte_end":9739920,"line_start":528,"line_end":528,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8132}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9740034,"byte_end":9740040,"line_start":534,"line_end":534,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8135}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9740132,"byte_end":9740138,"line_start":540,"line_end":540,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8138}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9746413,"byte_end":9746424,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8184},{"krate":0,"index":8185},{"krate":0,"index":8186},{"krate":0,"index":8190},{"krate":0,"index":8191}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752247,"byte_end":9752258,"line_start":279,"line_end":279,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8194}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752344,"byte_end":9752355,"line_start":285,"line_end":285,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8196}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752488,"byte_end":9752499,"line_start":291,"line_end":291,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752524,"byte_end":9752535,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752631,"byte_end":9752636,"line_start":299,"line_end":299,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8203},{"krate":0,"index":8204}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756669,"byte_end":9756678,"line_start":125,"line_end":125,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8247}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756858,"byte_end":9756867,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757060,"byte_end":9757069,"line_start":139,"line_end":139,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8251}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757231,"byte_end":9757240,"line_start":145,"line_end":145,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758446,"byte_end":9758454,"line_start":195,"line_end":195,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8258},{"krate":0,"index":8259}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9760987,"byte_end":9760995,"line_start":282,"line_end":282,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8266}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9761333,"byte_end":9761341,"line_start":295,"line_end":295,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8269}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9761711,"byte_end":9761717,"line_start":306,"line_end":306,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8272},{"krate":0,"index":8273},{"krate":0,"index":8274},{"krate":0,"index":8275}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9764301,"byte_end":9764307,"line_start":396,"line_end":396,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8280}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9764497,"byte_end":9764500,"line_start":405,"line_end":405,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8283},{"krate":0,"index":8284}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/yield_now.rs","byte_start":9776772,"byte_end":9776780,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8812},{"krate":0,"index":8813}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9783993,"byte_end":9784001,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8665},{"krate":0,"index":8666},{"krate":0,"index":8668},{"krate":0,"index":8670},{"krate":0,"index":8674},{"krate":0,"index":8676},{"krate":0,"index":8679}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9791952,"byte_end":9791960,"line_start":450,"line_end":450,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8683}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9792099,"byte_end":9792107,"line_start":456,"line_end":456,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8685},{"krate":0,"index":8686}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9793072,"byte_end":9793080,"line_start":480,"line_end":480,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8689}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9793161,"byte_end":9793169,"line_start":486,"line_end":486,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8691}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9794036,"byte_end":9794044,"line_start":516,"line_end":516,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8695},{"krate":0,"index":8696}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9794929,"byte_end":9794935,"line_start":547,"line_end":547,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8700},{"krate":0,"index":8702}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9795498,"byte_end":9795501,"line_start":566,"line_end":566,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8704},{"krate":0,"index":8706},{"krate":0,"index":8711}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799008,"byte_end":9799016,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8756},{"krate":0,"index":8760},{"krate":0,"index":8763}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800792,"byte_end":9800800,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8769}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9801008,"byte_end":9801016,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8773}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9801337,"byte_end":9801352,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8777},{"krate":0,"index":8778}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9801653,"byte_end":9801658,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8787}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802276,"byte_end":9802277,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802462,"byte_end":9802473,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8794}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802617,"byte_end":9802628,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":8796}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802775,"byte_end":9802786,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/clock.rs","byte_start":9806353,"byte_end":9806358,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9413},{"krate":0,"index":9414},{"krate":0,"index":9415},{"krate":0,"index":9416}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9832541,"byte_end":9832550,"line_start":171,"line_end":171,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8899}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9832634,"byte_end":9832643,"line_start":177,"line_end":177,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8901}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9832789,"byte_end":9832798,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8903},{"krate":0,"index":8904},{"krate":0,"index":8905},{"krate":0,"index":8906},{"krate":0,"index":8907},{"krate":0,"index":8909},{"krate":0,"index":8910},{"krate":0,"index":8912},{"krate":0,"index":8913},{"krate":0,"index":8914}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9839820,"byte_end":9839830,"line_start":374,"line_end":374,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9839855,"byte_end":9839865,"line_start":375,"line_end":375,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9841306,"byte_end":9841317,"line_start":411,"line_end":411,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8919},{"krate":0,"index":8920},{"krate":0,"index":8921},{"krate":0,"index":8922},{"krate":0,"index":8923},{"krate":0,"index":8924},{"krate":0,"index":8925},{"krate":0,"index":8926},{"krate":0,"index":8927}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9844840,"byte_end":9844857,"line_start":509,"line_end":509,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8933}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9845158,"byte_end":9845175,"line_start":518,"line_end":518,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8935}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9845414,"byte_end":9845425,"line_start":528,"line_end":528,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9845450,"byte_end":9845461,"line_start":529,"line_end":529,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9845500,"byte_end":9845511,"line_start":531,"line_end":531,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8939},{"krate":0,"index":8940},{"krate":0,"index":8941},{"krate":0,"index":8942},{"krate":0,"index":8943}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9846029,"byte_end":9846039,"line_start":553,"line_end":553,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8945},{"krate":0,"index":8946},{"krate":0,"index":8947},{"krate":0,"index":8948},{"krate":0,"index":8949},{"krate":0,"index":8950}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9848915,"byte_end":9848926,"line_start":628,"line_end":628,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8952},{"krate":0,"index":8953},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8956},{"krate":0,"index":8957}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9851317,"byte_end":9851327,"line_start":688,"line_end":688,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8959}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/handle.rs","byte_start":9851832,"byte_end":9851838,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8988},{"krate":0,"index":8989},{"krate":0,"index":8990}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/handle.rs","byte_start":9852409,"byte_end":9852415,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9455}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/handle.rs","byte_start":9854484,"byte_end":9854490,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8992}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/wheel/level.rs","byte_start":9866788,"byte_end":9866793,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9032},{"krate":0,"index":9034},{"krate":0,"index":9035},{"krate":0,"index":9036},{"krate":0,"index":9037},{"krate":0,"index":9038}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/wheel/level.rs","byte_start":9872861,"byte_end":9872866,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9040}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/wheel/mod.rs","byte_start":9856111,"byte_end":9856116,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9060},{"krate":0,"index":9061},{"krate":0,"index":9062},{"krate":0,"index":9063},{"krate":0,"index":9064},{"krate":0,"index":9066},{"krate":0,"index":9068},{"krate":0,"index":9069},{"krate":0,"index":9071},{"krate":0,"index":9072},{"krate":0,"index":9073},{"krate":0,"index":9074},{"krate":0,"index":9075}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875993,"byte_end":9875998,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9114},{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9117},{"krate":0,"index":9118}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9877386,"byte_end":9877391,"line_start":120,"line_end":120,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":9121},{"krate":0,"index":9122}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9815513,"byte_end":9815522,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9169},{"krate":0,"index":9171},{"krate":0,"index":9172}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9816937,"byte_end":9816943,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":9182},{"krate":0,"index":9183},{"krate":0,"index":9184}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9819949,"byte_end":9819955,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":9188},{"krate":0,"index":9189},{"krate":0,"index":9193},{"krate":0,"index":9194}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9824649,"byte_end":9824655,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9198},{"krate":0,"index":9199},{"krate":0,"index":9200},{"krate":0,"index":9201},{"krate":0,"index":9202},{"krate":0,"index":9203}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9825386,"byte_end":9825392,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9206}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9825518,"byte_end":9825523,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9208}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9825831,"byte_end":9825836,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9210}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879542,"byte_end":9879547,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9230}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879788,"byte_end":9879793,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9232},{"krate":0,"index":9233},{"krate":0,"index":9234},{"krate":0,"index":9235},{"krate":0,"index":9236},{"krate":0,"index":9237}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880693,"byte_end":9880698,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880725,"byte_end":9880730,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9240}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9881192,"byte_end":9881199,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9243}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9881287,"byte_end":9881294,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9245}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9881438,"byte_end":9881445,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9881482,"byte_end":9881487,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9248}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883029,"byte_end":9883036,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9260},{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":9267},{"krate":0,"index":9268}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886786,"byte_end":9886793,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9270}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886922,"byte_end":9886929,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9272}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887044,"byte_end":9887051,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9274},{"krate":0,"index":9275}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887216,"byte_end":9887223,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9277}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887328,"byte_end":9887335,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":9279},{"krate":0,"index":9280}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887476,"byte_end":9887483,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":9282},{"krate":0,"index":9283}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887644,"byte_end":9887651,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9285}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887758,"byte_end":9887765,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9287}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891504,"byte_end":9891512,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9329},{"krate":0,"index":9333}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896281,"byte_end":9896288,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":9383},{"krate":0,"index":9384},{"krate":0,"index":9385},{"krate":0,"index":9386}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896826,"byte_end":9896833,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9389},{"krate":0,"index":9390}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/bit.rs","byte_start":9897478,"byte_end":9897482,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":9556},{"krate":0,"index":9557},{"krate":0,"index":9558},{"krate":0,"index":9559},{"krate":0,"index":9560},{"krate":0,"index":9561},{"krate":0,"index":9562}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/bit.rs","byte_start":9898910,"byte_end":9898914,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9564}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904064,"byte_end":9904068,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904105,"byte_end":9904109,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904146,"byte_end":9904156,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904193,"byte_end":9904203,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904240,"byte_end":9904243,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904280,"byte_end":9904283,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904899,"byte_end":9904903,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9660},{"krate":0,"index":9661},{"krate":0,"index":9662},{"krate":0,"index":9663},{"krate":0,"index":9665}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9910509,"byte_end":9910513,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9668}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9910652,"byte_end":9910661,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9671}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9911228,"byte_end":9911237,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9674}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9911395,"byte_end":9911398,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9677},{"krate":0,"index":9678}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9911660,"byte_end":9911663,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":9681}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9911930,"byte_end":9911933,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9684}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9912054,"byte_end":9912058,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9687}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9914565,"byte_end":9914569,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9691},{"krate":0,"index":9692}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9914913,"byte_end":9914917,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9695}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9915265,"byte_end":9915269,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9698}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9915631,"byte_end":9915641,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9701},{"krate":0,"index":9702}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9916578,"byte_end":9916588,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9705}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9916731,"byte_end":9916736,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9708}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9917619,"byte_end":9917623,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":9714}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9918183,"byte_end":9918188,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":9717}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9918514,"byte_end":9918521,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":9719},{"krate":0,"index":9720},{"krate":0,"index":9721}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137190,"byte_end":137200,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137270,"byte_end":137280,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":138580,"byte_end":138588,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":138625,"byte_end":138633,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":138684,"byte_end":138694,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":138929,"byte_end":138939,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":141788,"byte_end":141798,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":142155,"byte_end":142165,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":142352,"byte_end":142362,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":143534,"byte_end":143544,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":9758}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":143913,"byte_end":143924,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":9764},{"krate":0,"index":9765}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":144598,"byte_end":144606,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":144805,"byte_end":144813,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/rand.rs","byte_start":155193,"byte_end":155201,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/wake.rs","byte_start":9926123,"byte_end":9926131,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":9802},{"krate":0,"index":9803}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14320,"byte_end":14326,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/mod.rs","byte_start":17995,"byte_end":18002,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":81}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14379,"byte_end":14381,"line_start":359,"line_end":359,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":157}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14391,"byte_end":14394,"line_start":360,"line_end":360,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":405}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81434,"byte_end":81437,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3969}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/mod.rs","byte_start":81624,"byte_end":81628,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4615}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/mod.rs","byte_start":9275671,"byte_end":9275679,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":4616}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14559,"byte_end":14566,"line_start":373,"line_end":373,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5290}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14797,"byte_end":14801,"line_start":390,"line_end":390,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6706}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516090,"byte_end":9516099,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":6728}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516114,"byte_end":9516118,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6941}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/mod.rs","byte_start":9560688,"byte_end":9560693,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7466}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516276,"byte_end":9516283,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":7693}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mod.rs","byte_start":9516627,"byte_end":9516632,"line_start":458,"line_end":458,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":8214}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14846,"byte_end":14850,"line_start":396,"line_end":396,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":899}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/lib.rs","byte_start":14914,"byte_end":14918,"line_start":402,"line_end":402,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":8841}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/mod.rs","byte_start":9805547,"byte_end":9805552,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":9221}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/scoped_tls.rs","byte_start":30324,"byte_end":30333,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":59},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/scoped_tls.rs","byte_start":30349,"byte_end":30358,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":59},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/macros/scoped_tls.rs","byte_start":30708,"byte_end":30713,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32673,"byte_end":32682,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":32845,"byte_end":32854,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/maybe_done.rs","byte_start":34041,"byte_end":34050,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":34826,"byte_end":34832,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":35046,"byte_end":35052,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/poll_fn.rs","byte_start":35194,"byte_end":35200,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8897185,"byte_end":8897190,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/future/ready.rs","byte_start":8897217,"byte_end":8897222,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":45578,"byte_end":45587,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":220},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":48037,"byte_end":48040,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":48200,"byte_end":48203,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":33584},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_buf_read.rs","byte_start":48832,"byte_end":48838,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":10171},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":51878,"byte_end":51881,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":52024,"byte_end":52027,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":33584},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_read.rs","byte_start":52696,"byte_end":52702,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":10171},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55696,"byte_end":55699,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":259}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":55842,"byte_end":55845,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":33584},"to":{"krate":0,"index":259}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_seek.rs","byte_start":56236,"byte_end":56242,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":1,"index":10171},"to":{"krate":0,"index":259}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":65712,"byte_end":65715,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":65863,"byte_end":65866,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":33584},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":66743,"byte_end":66746,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":6773},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":67544,"byte_end":67550,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":10171},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":68353,"byte_end":68359,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":10171},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":69165,"byte_end":69171,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":10171},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_write.rs","byte_start":69972,"byte_end":69978,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":10171},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":72019,"byte_end":72026,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/read_buf.rs","byte_start":80087,"byte_end":80094,"line_start":258,"line_end":258,"column_start":21,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8908318,"byte_end":8908326,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8910467,"byte_end":8910475,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":2981}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8910618,"byte_end":8910626,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":3007}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/interest.rs","byte_start":8910754,"byte_end":8910762,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8911347,"byte_end":8911352,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8915769,"byte_end":8915774,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8916518,"byte_end":8916523,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":2981}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8916684,"byte_end":8916689,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":3007}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8916817,"byte_end":8916822,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":2976}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8916976,"byte_end":8916981,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/ready.rs","byte_start":8917128,"byte_end":8917133,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","byte_start":8919581,"byte_end":8919593,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1459},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","byte_start":8919618,"byte_end":8919630,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1459},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","byte_start":8919674,"byte_end":8919686,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/registration.rs","byte_start":8925226,"byte_end":8925238,"line_start":213,"line_end":213,"column_start":10,"column_end":22},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8928641,"byte_end":8928652,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1502},"to":{"krate":0,"index":9614}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8928912,"byte_end":8928923,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8929103,"byte_end":8929114,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8937141,"byte_end":8937152,"line_start":360,"line_end":360,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8937241,"byte_end":8937252,"line_start":366,"line_end":366,"column_start":22,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8937277,"byte_end":8937288,"line_start":367,"line_end":367,"column_start":22,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8937322,"byte_end":8937333,"line_start":370,"line_end":370,"column_start":10,"column_end":21},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8938256,"byte_end":8938262,"line_start":395,"line_end":395,"column_start":39,"column_end":45},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1529},"to":{"krate":0,"index":924}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8938757,"byte_end":8938766,"line_start":414,"line_end":414,"column_start":21,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8943440,"byte_end":8943449,"line_start":523,"line_end":523,"column_start":19,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8943814,"byte_end":8943823,"line_start":536,"line_end":536,"column_start":26,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/scheduled_io.rs","byte_start":8943856,"byte_end":8943865,"line_start":537,"line_end":537,"column_start":26,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1517},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8900860,"byte_end":8900866,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8903672,"byte_end":8903678,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1321},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8903793,"byte_end":8903798,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8904242,"byte_end":8904248,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1321},"to":{"krate":0,"index":864}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8904647,"byte_end":8904653,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1321},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8904803,"byte_end":8904809,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8905681,"byte_end":8905687,"line_start":282,"line_end":282,"column_start":6,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8906504,"byte_end":8906510,"line_start":303,"line_end":303,"column_start":17,"column_end":23},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1558},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8906588,"byte_end":8906594,"line_start":309,"line_end":309,"column_start":21,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1558},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8906729,"byte_end":8906734,"line_start":317,"line_end":317,"column_start":6,"column_end":11},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/driver/mod.rs","byte_start":8907691,"byte_end":8907700,"line_start":347,"line_end":347,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8947386,"byte_end":8947397,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8950006,"byte_end":8950017,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8951560,"byte_end":8951571,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8951714,"byte_end":8951725,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/poll_evented.rs","byte_start":8951897,"byte_end":8951908,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8958764,"byte_end":8958771,"line_start":164,"line_end":164,"column_start":18,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970739,"byte_end":8970746,"line_start":458,"line_end":458,"column_start":30,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1655},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8970900,"byte_end":8970907,"line_start":464,"line_end":464,"column_start":56,"column_end":63},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971118,"byte_end":8971125,"line_start":472,"line_end":472,"column_start":27,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8971225,"byte_end":8971242,"line_start":478,"line_end":478,"column_start":26,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8973709,"byte_end":8973729,"line_start":539,"line_end":539,"column_start":26,"column_end":46},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976239,"byte_end":8976256,"line_start":600,"line_end":600,"column_start":60,"column_end":77},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/async_fd.rs","byte_start":8976513,"byte_end":8976533,"line_start":608,"line_end":608,"column_start":60,"column_end":80},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1664},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8978575,"byte_end":8978583,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979500,"byte_end":8979509,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8979759,"byte_end":8979767,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1958},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8980062,"byte_end":8980071,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1961},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8980750,"byte_end":8980755,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981148,"byte_end":8981153,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981406,"byte_end":8981411,"line_start":155,"line_end":155,"column_start":18,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1808},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981534,"byte_end":8981542,"line_start":161,"line_end":161,"column_start":31,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981579,"byte_end":8981588,"line_start":162,"line_end":162,"column_start":31,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1961},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981625,"byte_end":8981633,"line_start":163,"line_end":163,"column_start":31,"column_end":39},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981670,"byte_end":8981679,"line_start":164,"line_end":164,"column_start":31,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1961},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981722,"byte_end":8981730,"line_start":166,"line_end":166,"column_start":36,"column_end":44},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/split.rs","byte_start":8981898,"byte_end":8981907,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1961},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/seek.rs","byte_start":8982864,"byte_end":8982868,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":12727},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_buf_read_ext.rs","byte_start":8985682,"byte_end":8985694,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":178},"to":{"krate":0,"index":3422}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_buf_read_ext.rs","byte_start":8994715,"byte_end":8994716,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1999},"to":{"krate":0,"index":3422}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":8996637,"byte_end":8996646,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":220},"to":{"krate":0,"index":3430}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_read_ext.rs","byte_start":9034043,"byte_end":9034044,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2116},"to":{"krate":0,"index":3430}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_seek_ext.rs","byte_start":9034969,"byte_end":9034978,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":259},"to":{"krate":0,"index":3481}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_seek_ext.rs","byte_start":9036153,"byte_end":9036154,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2135},"to":{"krate":0,"index":3481}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9038106,"byte_end":9038116,"line_start":65,"line_end":65,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":299},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/async_write_ext.rs","byte_start":9071401,"byte_end":9071402,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2238},"to":{"krate":0,"index":3484}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9072770,"byte_end":9072779,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":12675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9074636,"byte_end":9074645,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":12675},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9075455,"byte_end":9075464,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":12675},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9076377,"byte_end":9076386,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":12675},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_reader.rs","byte_start":9076897,"byte_end":9076906,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":12675},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9078395,"byte_end":9078404,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":12644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9080241,"byte_end":9080250,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":12644},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9080392,"byte_end":9080401,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":12644},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9081113,"byte_end":9081122,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":12644},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9081652,"byte_end":9081661,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":12644},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_stream.rs","byte_start":9081916,"byte_end":9081925,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":12644},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9083861,"byte_end":9083870,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":12598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9086148,"byte_end":9086157,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":12598},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9087047,"byte_end":9087056,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":12598},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9087310,"byte_end":9087319,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":12598},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/buf_writer.rs","byte_start":9087606,"byte_end":9087615,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":12598},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9088793,"byte_end":9088798,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":12549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9089938,"byte_end":9089943,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":12549},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9090222,"byte_end":9090227,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":12549},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/chain.rs","byte_start":9090813,"byte_end":9090818,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":12549},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/copy.rs","byte_start":9093653,"byte_end":9093657,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3530},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/copy_buf.rs","byte_start":9097351,"byte_end":9097358,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3558},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/empty.rs","byte_start":9099625,"byte_end":9099630,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3570},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/empty.rs","byte_start":9099844,"byte_end":9099849,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3570},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/empty.rs","byte_start":9100082,"byte_end":9100087,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3570},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/flush.rs","byte_start":9101214,"byte_end":9101219,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":12507},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9102215,"byte_end":9102220,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":12457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/lines.rs","byte_start":9103472,"byte_end":9103477,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":12457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9107755,"byte_end":9107767,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3573},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9108311,"byte_end":9108323,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3573},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9109021,"byte_end":9109033,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3573},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9109184,"byte_end":9109188,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9109594,"byte_end":9109598,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3578},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/mem.rs","byte_start":9110464,"byte_end":9110468,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3578},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read.rs","byte_start":9112649,"byte_end":9112653,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":12406},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_buf.rs","byte_start":9113787,"byte_end":9113794,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":12346},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_exact.rs","byte_start":9116175,"byte_end":9116184,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":12291},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_line.rs","byte_start":9125274,"byte_end":9125282,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11372},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_to_end.rs","byte_start":9128771,"byte_end":9128780,"line_start":104,"line_end":104,"column_start":20,"column_end":29},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11315},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_to_string.rs","byte_start":9131390,"byte_end":9131402,"line_start":71,"line_end":71,"column_start":20,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11254},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/read_until.rs","byte_start":9133793,"byte_end":9133802,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11193},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/repeat.rs","byte_start":9135380,"byte_end":9135386,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3731},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/shutdown.rs","byte_start":9136765,"byte_end":9136773,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11144},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/sink.rs","byte_start":9138413,"byte_end":9138417,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3735},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/sink.rs","byte_start":9138927,"byte_end":9138931,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3735},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9139896,"byte_end":9139901,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/split.rs","byte_start":9140640,"byte_end":9140645,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9142958,"byte_end":9142962,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9144590,"byte_end":9144594,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11054},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/take.rs","byte_start":9145238,"byte_end":9145242,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11054},"to":{"krate":0,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write.rs","byte_start":9147041,"byte_end":9147046,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11003},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_all.rs","byte_start":9148081,"byte_end":9148089,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":10950},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/io/util/write_buf.rs","byte_start":9149574,"byte_end":9149582,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10890},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":82592,"byte_end":82609,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":487},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83262,"byte_end":83272,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"kind":{"Impl":{"id":151}},"from":{"krate":1,"index":10332},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83312,"byte_end":83322,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":152}},"from":{"krate":1,"index":10332},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83624,"byte_end":83636,"line_start":67,"line_end":67,"column_start":24,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":1,"index":10356},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83676,"byte_end":83688,"line_start":69,"line_end":69,"column_start":36,"column_end":48},"kind":{"Impl":{"id":154}},"from":{"krate":1,"index":10356},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":83985,"byte_end":83997,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":1,"index":10359},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":84037,"byte_end":84049,"line_start":82,"line_end":82,"column_start":36,"column_end":48},"kind":{"Impl":{"id":156}},"from":{"krate":1,"index":10359},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":88380,"byte_end":88386,"line_start":228,"line_end":228,"column_start":28,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":432}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":88430,"byte_end":88436,"line_start":230,"line_end":230,"column_start":40,"column_end":46},"kind":{"Impl":{"id":160}},"from":{"krate":5,"index":7286},"to":{"krate":0,"index":487}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":89989,"byte_end":89999,"line_start":285,"line_end":285,"column_start":25,"column_end":35},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3942},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/addr.rs","byte_start":90638,"byte_end":90647,"line_start":303,"line_end":303,"column_start":27,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3956},"to":{"krate":2,"index":7317}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9157233,"byte_end":9157244,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165540,"byte_end":9165551,"line_start":304,"line_end":304,"column_start":36,"column_end":47},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4575},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9165877,"byte_end":9165888,"line_start":316,"line_end":316,"column_start":21,"column_end":32},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4575},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/listener.rs","byte_start":9166094,"byte_end":9166105,"line_start":327,"line_end":327,"column_start":22,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4575},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9169617,"byte_end":9169626,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182267,"byte_end":9182276,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4577},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182411,"byte_end":9182420,"line_start":494,"line_end":494,"column_start":18,"column_end":27},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4577},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/socket.rs","byte_start":9182530,"byte_end":9182539,"line_start":501,"line_end":501,"column_start":20,"column_end":29},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4577},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9185243,"byte_end":9185251,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9188054,"byte_end":9188062,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4579},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9188278,"byte_end":9188287,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4586},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9189204,"byte_end":9189212,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4579},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split.rs","byte_start":9189306,"byte_end":9189315,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4586},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192201,"byte_end":9192213,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4602},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192416,"byte_end":9192428,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4602},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9192438,"byte_end":9192451,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195633,"byte_end":9195646,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4593},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9195847,"byte_end":9195861,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196544,"byte_end":9196558,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9196722,"byte_end":9196736,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4597},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9197783,"byte_end":9197796,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4593},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/split_owned.rs","byte_start":9197892,"byte_end":9197906,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4597},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9200431,"byte_end":9200440,"line_start":71,"line_end":71,"column_start":6,"column_end":15},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9230685,"byte_end":9230694,"line_start":956,"line_end":956,"column_start":39,"column_end":48},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4608},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9231052,"byte_end":9231061,"line_start":970,"line_end":970,"column_start":20,"column_end":29},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4608},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9231271,"byte_end":9231280,"line_start":980,"line_end":980,"column_start":21,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4608},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9232106,"byte_end":9232115,"line_start":1013,"line_end":1013,"column_start":21,"column_end":30},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4608},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/tcp/stream.rs","byte_start":9232319,"byte_end":9232328,"line_start":1024,"line_end":1024,"column_start":22,"column_end":31},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4608},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9237090,"byte_end":9237099,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9274741,"byte_end":9274750,"line_start":1213,"line_end":1213,"column_start":39,"column_end":48},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4610},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9275075,"byte_end":9275084,"line_start":1225,"line_end":1225,"column_start":21,"column_end":30},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4610},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/udp.rs","byte_start":9275293,"byte_end":9275302,"line_start":1236,"line_end":1236,"column_start":22,"column_end":31},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4610},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9278691,"byte_end":9278703,"line_start":86,"line_end":86,"column_start":6,"column_end":18},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311225,"byte_end":9311237,"line_start":1086,"line_end":1086,"column_start":52,"column_end":64},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5149},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311581,"byte_end":9311593,"line_start":1098,"line_end":1098,"column_start":21,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5149},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/datagram/socket.rs","byte_start":9311708,"byte_end":9311720,"line_start":1104,"line_end":1104,"column_start":18,"column_end":30},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5149},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9313233,"byte_end":9313245,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9316299,"byte_end":9316311,"line_start":124,"line_end":124,"column_start":52,"column_end":64},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5153},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9316646,"byte_end":9316658,"line_start":136,"line_end":136,"column_start":21,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5153},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/listener.rs","byte_start":9316773,"byte_end":9316785,"line_start":142,"line_end":142,"column_start":18,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5153},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318566,"byte_end":9318574,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5156},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9318790,"byte_end":9318799,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5163},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9319585,"byte_end":9319593,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5156},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split.rs","byte_start":9319689,"byte_end":9319698,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5163},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322613,"byte_end":9322625,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5179},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322828,"byte_end":9322840,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5179},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9322850,"byte_end":9322863,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323279,"byte_end":9323292,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5170},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9323493,"byte_end":9323507,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9324205,"byte_end":9324219,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":5174},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9324383,"byte_end":9324397,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5174},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9325441,"byte_end":9325454,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5170},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/split_owned.rs","byte_start":9325552,"byte_end":9325566,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5174},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9325787,"byte_end":9325797,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/socketaddr.rs","byte_start":9326349,"byte_end":9326359,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4921},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9327778,"byte_end":9327788,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9344991,"byte_end":9345001,"line_start":503,"line_end":503,"column_start":35,"column_end":45},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":2766}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9345314,"byte_end":9345324,"line_start":515,"line_end":515,"column_start":20,"column_end":30},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5185},"to":{"krate":0,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9345534,"byte_end":9345544,"line_start":525,"line_end":525,"column_start":21,"column_end":31},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5185},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9346309,"byte_end":9346319,"line_start":556,"line_end":556,"column_start":6,"column_end":16},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9347582,"byte_end":9347592,"line_start":594,"line_end":594,"column_start":21,"column_end":31},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/stream.rs","byte_start":9347707,"byte_end":9347717,"line_start":600,"line_end":600,"column_start":18,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5185},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/net/unix/ucred.rs","byte_start":9348104,"byte_end":9348109,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_ptr.rs","byte_start":94254,"byte_end":94263,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_ptr.rs","byte_start":94437,"byte_end":94446,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_ptr.rs","byte_start":94593,"byte_end":94602,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_ptr.rs","byte_start":94715,"byte_end":94724,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":512},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95068,"byte_end":95077,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95102,"byte_end":95111,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95121,"byte_end":95130,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95622,"byte_end":95631,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u16.rs","byte_start":95916,"byte_end":95925,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":538},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96266,"byte_end":96275,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96300,"byte_end":96309,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96319,"byte_end":96328,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96513,"byte_end":96522,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u32.rs","byte_start":96807,"byte_end":96816,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":98931,"byte_end":98939,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":98964,"byte_end":98972,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":98982,"byte_end":98990,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":99171,"byte_end":99179,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_u8.rs","byte_start":99463,"byte_end":99471,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":99811,"byte_end":99822,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":99847,"byte_end":99858,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":99868,"byte_end":99879,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":100568,"byte_end":100579,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":100869,"byte_end":100880,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/atomic_usize.rs","byte_start":101044,"byte_end":101055,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/mutex.rs","byte_start":101386,"byte_end":101391,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/loom/std/unsafe_cell.rs","byte_start":102069,"byte_end":102079,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/either.rs","byte_start":9354017,"byte_end":9354023,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5234},"to":{"krate":0,"index":864}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/either.rs","byte_start":9354980,"byte_end":9354986,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5234},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/either.rs","byte_start":9355200,"byte_end":9355206,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5234},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":107243,"byte_end":107253,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":107518,"byte_end":107528,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5260},"to":{"krate":0,"index":864}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":108054,"byte_end":108059,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":112824,"byte_end":112834,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5260},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":112943,"byte_end":112955,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5264},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":113310,"byte_end":113326,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":114589,"byte_end":114605,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5280},"to":{"krate":0,"index":864}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":115200,"byte_end":115212,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/thread.rs","byte_start":115392,"byte_end":115397,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":105810,"byte_end":105814,"line_start":92,"line_end":92,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":105817,"byte_end":105821,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":106290,"byte_end":106293,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"kind":{"Impl":{"id":265}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/park/mod.rs","byte_start":106382,"byte_end":106385,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"kind":{"Impl":{"id":266}},"from":{"krate":5,"index":5684},"to":{"krate":0,"index":871}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9375700,"byte_end":9375712,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9378658,"byte_end":9378679,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5942},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9379395,"byte_end":9379400,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9381040,"byte_end":9381045,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5307},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/enter.rs","byte_start":9381175,"byte_end":9381180,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5307},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/core.rs","byte_start":9388912,"byte_end":9388918,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5375},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/core.rs","byte_start":9388943,"byte_end":9388949,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5375},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/core.rs","byte_start":9389308,"byte_end":9389312,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/core.rs","byte_start":9390090,"byte_end":9390094,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9396475,"byte_end":9396484,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9399210,"byte_end":9399219,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5972},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9399462,"byte_end":9399471,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5972},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9399748,"byte_end":9399757,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5972},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/error.rs","byte_start":9399791,"byte_end":9399796,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":280}},"from":{"krate":1,"index":3753},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/harness.rs","byte_start":9400474,"byte_end":9400481,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/harness.rs","byte_start":9400958,"byte_end":9400965,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/harness.rs","byte_start":9403136,"byte_end":9403141,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5533},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417396,"byte_end":9417406,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5974},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417443,"byte_end":9417453,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5974},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9417469,"byte_end":9417479,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418714,"byte_end":9418724,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5974},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9418751,"byte_end":9418761,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5974},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9419987,"byte_end":9419997,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5974},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/join.rs","byte_start":9420263,"byte_end":9420273,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5974},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/raw.rs","byte_start":9421520,"byte_end":9421527,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/raw.rs","byte_start":9423058,"byte_end":9423065,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5643},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/raw.rs","byte_start":9423155,"byte_end":9423162,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":5643},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/state.rs","byte_start":9425844,"byte_end":9425849,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/state.rs","byte_start":9434705,"byte_end":9434713,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/state.rs","byte_start":9436590,"byte_end":9436595,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5706},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/state.rs","byte_start":9436754,"byte_end":9436762,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5978},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/waker.rs","byte_start":9438580,"byte_end":9438588,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5820},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382175,"byte_end":9382179,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5866},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382210,"byte_end":9382214,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5866},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382351,"byte_end":9382359,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382400,"byte_end":9382408,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382533,"byte_end":9382537,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":5884}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9382540,"byte_end":9382545,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":5884}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9384395,"byte_end":9384399,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9385295,"byte_end":9385299,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9385468,"byte_end":9385476,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9385762,"byte_end":9385766,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5866},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9386006,"byte_end":9386010,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5866},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9386162,"byte_end":9386170,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/task/mod.rs","byte_start":9386386,"byte_end":9386390,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5866},"to":{"krate":0,"index":924}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9442300,"byte_end":9442314,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9444553,"byte_end":9444558,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9447181,"byte_end":9447186,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6106},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9447879,"byte_end":9447893,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6062},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9449112,"byte_end":9449126,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6062},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9449292,"byte_end":9449299,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9449829,"byte_end":9449836,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6534},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9450004,"byte_end":9450007,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"kind":{"Impl":{"id":317}},"from":{"krate":5,"index":5684},"to":{"krate":0,"index":5884}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9451096,"byte_end":9451102,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6076},"to":{"krate":0,"index":9798}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9451564,"byte_end":9451574,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/basic_scheduler.rs","byte_start":9451849,"byte_end":9451859,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6142},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9456343,"byte_end":9456355,"line_start":102,"line_end":102,"column_start":6,"column_end":18},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9458930,"byte_end":9458942,"line_start":172,"line_end":172,"column_start":15,"column_end":27},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6217},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9459028,"byte_end":9459040,"line_start":178,"line_end":178,"column_start":21,"column_end":33},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6217},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9459201,"byte_end":9459208,"line_start":186,"line_end":186,"column_start":6,"column_end":13},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9461640,"byte_end":9461645,"line_start":264,"line_end":264,"column_start":6,"column_end":11},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/pool.rs","byte_start":9464884,"byte_end":9464891,"line_start":360,"line_end":360,"column_start":21,"column_end":28},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6543},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/schedule.rs","byte_start":9465394,"byte_end":9465406,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6283},"to":{"krate":0,"index":5884}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/shutdown.rs","byte_start":9466279,"byte_end":9466287,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/task.rs","byte_start":9468036,"byte_end":9468048,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/task.rs","byte_start":9468274,"byte_end":9468286,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6319},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/blocking/task.rs","byte_start":9468316,"byte_end":9468328,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6319},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9471443,"byte_end":9471450,"line_start":82,"line_end":82,"column_start":6,"column_end":13},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9482319,"byte_end":9482326,"line_start":446,"line_end":446,"column_start":10,"column_end":17},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9482888,"byte_end":9482895,"line_start":470,"line_end":470,"column_start":10,"column_end":17},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/builder.rs","byte_start":9484881,"byte_end":9484888,"line_start":533,"line_end":533,"column_start":21,"column_end":28},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6371},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/context.rs","byte_start":9487357,"byte_end":9487367,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6571},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/driver.rs","byte_start":9491819,"byte_end":9491825,"line_start":167,"line_end":167,"column_start":6,"column_end":12},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/driver.rs","byte_start":9492390,"byte_end":9492396,"line_start":187,"line_end":187,"column_start":15,"column_end":21},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6596},"to":{"krate":0,"index":864}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9494097,"byte_end":9494103,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9499503,"byte_end":9499518,"line_start":208,"line_end":208,"column_start":21,"column_end":36},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9499666,"byte_end":9499681,"line_start":214,"line_end":214,"column_start":23,"column_end":38},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/handle.rs","byte_start":9499839,"byte_end":9499854,"line_start":220,"line_end":220,"column_start":23,"column_end":38},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6513},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/spawner.rs","byte_start":9500239,"byte_end":9500246,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/spawner.rs","byte_start":9500488,"byte_end":9500495,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/runtime/mod.rs","byte_start":9365259,"byte_end":9365266,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":120163,"byte_end":120169,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":121529,"byte_end":121539,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":891},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":122510,"byte_end":122526,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":122658,"byte_end":122674,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":6693},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/coop.rs","byte_start":124414,"byte_end":124420,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":6676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9518520,"byte_end":9518527,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":8285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/barrier.rs","byte_start":9521806,"byte_end":9521823,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":8297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529054,"byte_end":9529063,"line_start":216,"line_end":216,"column_start":30,"column_end":39},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":8304},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529239,"byte_end":9529248,"line_start":222,"line_end":222,"column_start":47,"column_end":56},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":8304},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9529896,"byte_end":9529905,"line_start":241,"line_end":241,"column_start":27,"column_end":36},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":8311},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9530210,"byte_end":9530219,"line_start":250,"line_end":250,"column_start":32,"column_end":41},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":8311},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9531142,"byte_end":9531154,"line_start":276,"line_end":276,"column_start":27,"column_end":39},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":8323},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9531532,"byte_end":9531544,"line_start":286,"line_end":286,"column_start":32,"column_end":44},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":8323},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9533802,"byte_end":9533808,"line_start":382,"line_end":382,"column_start":32,"column_end":38},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":6841},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9533935,"byte_end":9533941,"line_start":388,"line_end":388,"column_start":36,"column_end":42},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":6841},"to":{"krate":2,"index":2753}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534102,"byte_end":9534106,"line_start":394,"line_end":394,"column_start":61,"column_end":65},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":6835},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9534176,"byte_end":9534180,"line_start":395,"line_end":395,"column_start":61,"column_end":65},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6835},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9536953,"byte_end":9536959,"line_start":485,"line_end":485,"column_start":31,"column_end":37},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9536996,"byte_end":9537002,"line_start":486,"line_end":486,"column_start":31,"column_end":37},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537040,"byte_end":9537048,"line_start":488,"line_end":488,"column_start":31,"column_end":39},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6789},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537085,"byte_end":9537093,"line_start":489,"line_end":489,"column_start":31,"column_end":39},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6789},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9537109,"byte_end":9537115,"line_start":491,"line_end":491,"column_start":9,"column_end":15},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9542725,"byte_end":9542729,"line_start":678,"line_end":678,"column_start":6,"column_end":10},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":6815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9543121,"byte_end":9543127,"line_start":693,"line_end":693,"column_start":19,"column_end":25},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9543307,"byte_end":9543313,"line_start":702,"line_end":702,"column_start":18,"column_end":24},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9543467,"byte_end":9543475,"line_start":710,"line_end":710,"column_start":9,"column_end":17},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9548338,"byte_end":9548346,"line_start":828,"line_end":828,"column_start":16,"column_end":24},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9552538,"byte_end":9552546,"line_start":945,"line_end":945,"column_start":18,"column_end":26},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6789},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9553172,"byte_end":9553176,"line_start":968,"line_end":968,"column_start":12,"column_end":16},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9554018,"byte_end":9554022,"line_start":998,"line_end":998,"column_start":23,"column_end":27},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6835},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9554708,"byte_end":9554712,"line_start":1019,"line_end":1019,"column_start":21,"column_end":25},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6835},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9555501,"byte_end":9555507,"line_start":1048,"line_end":1048,"column_start":35,"column_end":41},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6826},"to":{"krate":0,"index":924}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9555922,"byte_end":9555928,"line_start":1065,"line_end":1065,"column_start":24,"column_end":30},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9556072,"byte_end":9556080,"line_start":1071,"line_end":1071,"column_start":24,"column_end":32},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":6789},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9556215,"byte_end":9556224,"line_start":1077,"line_end":1077,"column_start":13,"column_end":22},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":6831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/broadcast.rs","byte_start":9556397,"byte_end":9556406,"line_start":1086,"line_end":1086,"column_start":22,"column_end":31},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6831},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/block.rs","byte_start":9563288,"byte_end":9563293,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/block.rs","byte_start":9573275,"byte_end":9573281,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/block.rs","byte_start":9573763,"byte_end":9573769,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6996},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9576889,"byte_end":9576897,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9581966,"byte_end":9581974,"line_start":261,"line_end":261,"column_start":24,"column_end":32},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7075},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582170,"byte_end":9582178,"line_start":269,"line_end":269,"column_start":19,"column_end":27},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7075},"to":{"krate":2,"index":2894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9582194,"byte_end":9582200,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593002,"byte_end":9593008,"line_start":604,"line_end":604,"column_start":19,"column_end":25},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7068},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593140,"byte_end":9593146,"line_start":612,"line_end":612,"column_start":24,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7068},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9593358,"byte_end":9593364,"line_start":622,"line_end":622,"column_start":9,"column_end":15},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594614,"byte_end":9594620,"line_start":665,"line_end":665,"column_start":18,"column_end":24},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7071},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/bounded.rs","byte_start":9594947,"byte_end":9594953,"line_start":680,"line_end":680,"column_start":24,"column_end":30},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":7071},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9595614,"byte_end":9595616,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7197},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9595909,"byte_end":9595911,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7205},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9596848,"byte_end":9596852,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7218},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9597485,"byte_end":9597493,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7231},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9597759,"byte_end":9597763,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7218},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9597812,"byte_end":9597816,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7218},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9598323,"byte_end":9598325,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9598757,"byte_end":9598759,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":7197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9599309,"byte_end":9599311,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":7197},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9599650,"byte_end":9599652,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":7197},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9599975,"byte_end":9599977,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9603368,"byte_end":9603370,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7205},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9603782,"byte_end":9603786,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9603971,"byte_end":9603975,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7218},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/chan.rs","byte_start":9604976,"byte_end":9604987,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":610},"to":{"krate":0,"index":7213}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/list.rs","byte_start":9606728,"byte_end":9606730,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":7356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/list.rs","byte_start":9612434,"byte_end":9612436,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7356},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/list.rs","byte_start":9612713,"byte_end":9612715,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/list.rs","byte_start":9616114,"byte_end":9616116,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7360},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616774,"byte_end":9616789,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7406},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9616930,"byte_end":9616945,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":7406},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9617403,"byte_end":9617420,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":7415},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9618419,"byte_end":9618436,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":7415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/unbounded.rs","byte_start":9621734,"byte_end":9621749,"line_start":179,"line_end":179,"column_start":9,"column_end":24},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625439,"byte_end":9625448,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":8345},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9625608,"byte_end":9625617,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":8345},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626103,"byte_end":9626115,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":8352},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626148,"byte_end":9626160,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":8352},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626500,"byte_end":9626512,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":8352},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626741,"byte_end":9626750,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":8363},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9626880,"byte_end":9626889,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":8363},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9628390,"byte_end":9628406,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":8373},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mpsc/error.rs","byte_start":9628443,"byte_end":9628459,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":8373},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634830,"byte_end":9634835,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7513},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634889,"byte_end":9634894,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":7513},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9634948,"byte_end":9634958,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":7517},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635023,"byte_end":9635038,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":7521},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635325,"byte_end":9635337,"line_start":172,"line_end":172,"column_start":23,"column_end":35},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":8384},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9635474,"byte_end":9635486,"line_start":178,"line_end":178,"column_start":16,"column_end":28},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":8384},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9636294,"byte_end":9636299,"line_start":204,"line_end":204,"column_start":17,"column_end":22},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642052,"byte_end":9642057,"line_start":407,"line_end":407,"column_start":21,"column_end":26},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":7513},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642141,"byte_end":9642146,"line_start":413,"line_end":413,"column_start":21,"column_end":26},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":7513},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642270,"byte_end":9642275,"line_start":422,"line_end":422,"column_start":29,"column_end":34},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":7513},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642670,"byte_end":9642680,"line_start":438,"line_end":438,"column_start":26,"column_end":36},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":7517},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642781,"byte_end":9642791,"line_start":444,"line_end":444,"column_start":27,"column_end":37},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":7517},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9642938,"byte_end":9642948,"line_start":451,"line_end":451,"column_start":30,"column_end":40},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":7517},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643105,"byte_end":9643115,"line_start":457,"line_end":457,"column_start":45,"column_end":55},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7517},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643281,"byte_end":9643291,"line_start":463,"line_end":463,"column_start":49,"column_end":59},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7517},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643469,"byte_end":9643484,"line_start":471,"line_end":471,"column_start":26,"column_end":41},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":7521},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643581,"byte_end":9643596,"line_start":477,"line_end":477,"column_start":27,"column_end":42},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":7521},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643739,"byte_end":9643754,"line_start":484,"line_end":484,"column_start":30,"column_end":45},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":7521},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9643907,"byte_end":9643922,"line_start":490,"line_end":490,"column_start":45,"column_end":60},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":7521},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/mutex.rs","byte_start":9644084,"byte_end":9644099,"line_start":496,"line_end":496,"column_start":49,"column_end":64},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":7521},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9648962,"byte_end":9648970,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":8411},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649003,"byte_end":9649011,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8411},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9649841,"byte_end":9649847,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9658423,"byte_end":9658429,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":8389},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9660339,"byte_end":9660347,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":8411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9660860,"byte_end":9660868,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":8411},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9666564,"byte_end":9666572,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":8411},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/notify.rs","byte_start":9669627,"byte_end":9669633,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":8404},"to":{"krate":0,"index":924}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671509,"byte_end":9671518,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671680,"byte_end":9671689,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":8441},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9671758,"byte_end":9671770,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":8453},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9672069,"byte_end":9672081,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":8453},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9673867,"byte_end":9673873,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":8429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681536,"byte_end":9681542,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":8429},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9681681,"byte_end":9681689,"line_start":403,"line_end":403,"column_start":9,"column_end":17},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9686080,"byte_end":9686088,"line_start":552,"line_end":552,"column_start":18,"column_end":26},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8435},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9686235,"byte_end":9686243,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":8435},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9686706,"byte_end":9686711,"line_start":576,"line_end":576,"column_start":9,"column_end":14},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":7753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691083,"byte_end":9691088,"line_start":722,"line_end":722,"column_start":31,"column_end":36},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":7753},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691125,"byte_end":9691130,"line_start":723,"line_end":723,"column_start":31,"column_end":36},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7753},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691155,"byte_end":9691160,"line_start":725,"line_end":725,"column_start":18,"column_end":23},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7753},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691529,"byte_end":9691534,"line_start":743,"line_end":743,"column_start":36,"column_end":41},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7753},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9691929,"byte_end":9691934,"line_start":758,"line_end":758,"column_start":6,"column_end":11},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/oneshot.rs","byte_start":9693647,"byte_end":9693652,"line_start":824,"line_end":824,"column_start":21,"column_end":26},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":8466},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9697711,"byte_end":9697720,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":7900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9708745,"byte_end":9708754,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":7900},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9708953,"byte_end":9708959,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":7912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9709825,"byte_end":9709832,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7906},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9710510,"byte_end":9710517,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9711316,"byte_end":9711323,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":7906},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712573,"byte_end":9712580,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":7906},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712627,"byte_end":9712639,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":8482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712732,"byte_end":9712744,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":8482},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712888,"byte_end":9712900,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":8482},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9712947,"byte_end":9712962,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":8472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9713480,"byte_end":9713495,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":8472},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9713781,"byte_end":9713796,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":8472},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/batch_semaphore.rs","byte_start":9713889,"byte_end":9713895,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":7912},"to":{"krate":0,"index":924}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9716565,"byte_end":9716574,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":8487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9722912,"byte_end":9722927,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":8491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723172,"byte_end":9723192,"line_start":243,"line_end":243,"column_start":6,"column_end":26},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":8498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723446,"byte_end":9723461,"line_start":252,"line_end":252,"column_start":19,"column_end":34},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":8491},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/semaphore.rs","byte_start":9723569,"byte_end":9723589,"line_start":258,"line_end":258,"column_start":15,"column_end":35},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":8498},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9726944,"byte_end":9726959,"line_start":96,"line_end":96,"column_start":13,"column_end":28},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730377,"byte_end":9730392,"line_start":201,"line_end":201,"column_start":36,"column_end":51},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730572,"byte_end":9730587,"line_start":210,"line_end":210,"column_start":38,"column_end":53},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9730763,"byte_end":9730778,"line_start":219,"line_end":219,"column_start":30,"column_end":45},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9731242,"byte_end":9731258,"line_start":239,"line_end":239,"column_start":21,"column_end":37},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":8075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9732878,"byte_end":9732894,"line_start":292,"line_end":292,"column_start":36,"column_end":52},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":8075},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9733074,"byte_end":9733090,"line_start":301,"line_end":301,"column_start":38,"column_end":54},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":8075},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9733266,"byte_end":9733282,"line_start":310,"line_end":310,"column_start":30,"column_end":46},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":8075},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734358,"byte_end":9734364,"line_start":345,"line_end":345,"column_start":25,"column_end":31},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":8503},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734418,"byte_end":9734424,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":8503},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734658,"byte_end":9734673,"line_start":350,"line_end":350,"column_start":25,"column_end":40},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734731,"byte_end":9734746,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9734811,"byte_end":9734827,"line_start":352,"line_end":352,"column_start":25,"column_end":41},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":8075},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735140,"byte_end":9735156,"line_start":357,"line_end":357,"column_start":25,"column_end":41},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":8075},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9735214,"byte_end":9735220,"line_start":359,"line_end":359,"column_start":17,"column_end":23},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":8503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739608,"byte_end":9739623,"line_start":512,"line_end":512,"column_start":32,"column_end":47},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":8048},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739754,"byte_end":9739770,"line_start":520,"line_end":520,"column_start":32,"column_end":48},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":8075},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9739904,"byte_end":9739920,"line_start":528,"line_end":528,"column_start":35,"column_end":51},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":8075},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9740034,"byte_end":9740040,"line_start":534,"line_end":534,"column_start":21,"column_end":27},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":8503},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/rwlock.rs","byte_start":9740132,"byte_end":9740138,"line_start":540,"line_end":540,"column_start":29,"column_end":35},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":8503},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9746413,"byte_end":9746424,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":8177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752247,"byte_end":9752258,"line_start":279,"line_end":279,"column_start":18,"column_end":29},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":8177},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752344,"byte_end":9752355,"line_start":285,"line_end":285,"column_start":21,"column_end":32},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":8177},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752488,"byte_end":9752499,"line_start":291,"line_end":291,"column_start":22,"column_end":33},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":8177},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752524,"byte_end":9752535,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":8177},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/task/atomic_waker.rs","byte_start":9752631,"byte_end":9752636,"line_start":299,"line_end":299,"column_start":19,"column_end":24},"kind":{"Impl":{"id":515}},"from":{"krate":2,"index":12370},"to":{"krate":0,"index":8199}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756669,"byte_end":9756678,"line_start":125,"line_end":125,"column_start":42,"column_end":51},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8541},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9756858,"byte_end":9756867,"line_start":131,"line_end":131,"column_start":47,"column_end":56},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8541},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757060,"byte_end":9757069,"line_start":139,"line_end":139,"column_start":27,"column_end":36},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":8547},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9757231,"byte_end":9757240,"line_start":145,"line_end":145,"column_start":32,"column_end":41},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":8547},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9758446,"byte_end":9758454,"line_start":195,"line_end":195,"column_start":9,"column_end":17},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":8510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9760987,"byte_end":9760995,"line_start":282,"line_end":282,"column_start":19,"column_end":27},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":8510},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9761333,"byte_end":9761341,"line_start":295,"line_end":295,"column_start":18,"column_end":26},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":8510},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9761711,"byte_end":9761717,"line_start":306,"line_end":306,"column_start":9,"column_end":15},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9764301,"byte_end":9764307,"line_start":396,"line_end":396,"column_start":18,"column_end":24},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8517},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/sync/watch.rs","byte_start":9764497,"byte_end":9764500,"line_start":405,"line_end":405,"column_start":24,"column_end":27},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8523},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/yield_now.rs","byte_start":9776772,"byte_end":9776780,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8809},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9783993,"byte_end":9784001,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9791952,"byte_end":9791960,"line_start":450,"line_end":450,"column_start":21,"column_end":29},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8814},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9792099,"byte_end":9792107,"line_start":456,"line_end":456,"column_start":17,"column_end":25},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":8814},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9793072,"byte_end":9793080,"line_start":480,"line_end":480,"column_start":18,"column_end":26},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":8814},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9793161,"byte_end":9793169,"line_start":486,"line_end":486,"column_start":15,"column_end":23},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":8814},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9794036,"byte_end":9794044,"line_start":516,"line_end":516,"column_start":28,"column_end":36},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":9973},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9794929,"byte_end":9794935,"line_start":547,"line_end":547,"column_start":6,"column_end":12},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":8658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/local.rs","byte_start":9795498,"byte_end":9795501,"line_start":566,"line_end":566,"column_start":25,"column_end":28},"kind":{"Impl":{"id":534}},"from":{"krate":5,"index":5684},"to":{"krate":0,"index":5884}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9799008,"byte_end":9799016,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":8751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9800792,"byte_end":9800800,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":8751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9801008,"byte_end":9801016,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":8751},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9801337,"byte_end":9801352,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":9917},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9801653,"byte_end":9801658,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":8779},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802276,"byte_end":9802277,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8792},"to":{"krate":0,"index":8790}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802462,"byte_end":9802473,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8826},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802617,"byte_end":9802628,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8826},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/task/task_local.rs","byte_start":9802775,"byte_end":9802786,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8826},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/clock.rs","byte_start":9806353,"byte_end":9806358,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":9417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9832541,"byte_end":9832550,"line_start":171,"line_end":171,"column_start":18,"column_end":27},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":8894},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9832634,"byte_end":9832643,"line_start":177,"line_end":177,"column_start":26,"column_end":35},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8894},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9832789,"byte_end":9832798,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":8894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9839820,"byte_end":9839830,"line_start":374,"line_end":374,"column_start":22,"column_end":32},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":9422},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9839855,"byte_end":9839865,"line_start":375,"line_end":375,"column_start":22,"column_end":32},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":9422},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9841306,"byte_end":9841317,"line_start":411,"line_end":411,"column_start":6,"column_end":17},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":9433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9844840,"byte_end":9844857,"line_start":509,"line_end":509,"column_start":26,"column_end":43},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8928},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9845158,"byte_end":9845175,"line_start":518,"line_end":518,"column_start":6,"column_end":23},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":8928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9845414,"byte_end":9845425,"line_start":528,"line_end":528,"column_start":22,"column_end":33},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9845450,"byte_end":9845461,"line_start":529,"line_end":529,"column_start":22,"column_end":33},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":9433},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9845500,"byte_end":9845511,"line_start":531,"line_end":531,"column_start":35,"column_end":46},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":9433},"to":{"krate":0,"index":924}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9846029,"byte_end":9846039,"line_start":553,"line_end":553,"column_start":6,"column_end":16},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":9422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9848915,"byte_end":9848926,"line_start":628,"line_end":628,"column_start":6,"column_end":17},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":9429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/entry.rs","byte_start":9851317,"byte_end":9851327,"line_start":688,"line_end":688,"column_start":15,"column_end":25},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":9422},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/handle.rs","byte_start":9851832,"byte_end":9851838,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":9449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/handle.rs","byte_start":9852409,"byte_end":9852415,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":9449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/handle.rs","byte_start":9854484,"byte_end":9854490,"line_start":80,"line_end":80,"column_start":21,"column_end":27},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":9449},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/wheel/level.rs","byte_start":9866788,"byte_end":9866793,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":9025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/wheel/level.rs","byte_start":9872861,"byte_end":9872866,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":9025},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/wheel/mod.rs","byte_start":9856111,"byte_end":9856116,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":9462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9875993,"byte_end":9875998,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":9889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/sleep.rs","byte_start":9877386,"byte_end":9877391,"line_start":120,"line_end":120,"column_start":17,"column_end":22},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":9889},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9815513,"byte_end":9815522,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":9477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9816937,"byte_end":9816943,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":9469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9819949,"byte_end":9819955,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":9449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9824649,"byte_end":9824655,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":9469},"to":{"krate":0,"index":864}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9825386,"byte_end":9825392,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":9469},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9825518,"byte_end":9825523,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":9173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/driver/mod.rs","byte_start":9825831,"byte_end":9825836,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":9173},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879542,"byte_end":9879547,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":9484},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9879788,"byte_end":9879793,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":9484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880693,"byte_end":9880698,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":9484},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9880725,"byte_end":9880730,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":9484},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9881192,"byte_end":9881199,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":9513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9881287,"byte_end":9881294,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":9513},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9881438,"byte_end":9881445,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":9513},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/error.rs","byte_start":9881482,"byte_end":9881487,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":581}},"from":{"krate":1,"index":3753},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9883029,"byte_end":9883036,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":9527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886786,"byte_end":9886793,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9886922,"byte_end":9886929,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"kind":{"Impl":{"id":584}},"from":{"krate":1,"index":11320},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887044,"byte_end":9887051,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887216,"byte_end":9887223,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887328,"byte_end":9887335,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887476,"byte_end":9887483,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887644,"byte_end":9887651,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":2955}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/instant.rs","byte_start":9887758,"byte_end":9887765,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":9527},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/interval.rs","byte_start":9891504,"byte_end":9891512,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":9546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896281,"byte_end":9896288,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":9851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/time/timeout.rs","byte_start":9896826,"byte_end":9896833,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":9851},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/bit.rs","byte_start":9897478,"byte_end":9897482,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":9724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/bit.rs","byte_start":9898910,"byte_end":9898914,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":9724},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9902857,"byte_end":9902864,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2831},"to":{"krate":0,"index":9614}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904064,"byte_end":9904068,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":9622},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904105,"byte_end":9904109,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":9622},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904146,"byte_end":9904156,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":9629},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904193,"byte_end":9904203,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":9629},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904240,"byte_end":9904243,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":9616},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904280,"byte_end":9904283,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":9616},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9904899,"byte_end":9904903,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":9604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9910509,"byte_end":9910513,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":9604},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9910652,"byte_end":9910661,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":9610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9911228,"byte_end":9911237,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":9610},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9911395,"byte_end":9911398,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":9616},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9911660,"byte_end":9911663,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":9616},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9911930,"byte_end":9911933,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":9616},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9912054,"byte_end":9912058,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":9622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9914565,"byte_end":9914569,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":9622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9914913,"byte_end":9914917,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":9622},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9915265,"byte_end":9915269,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":9622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9915631,"byte_end":9915641,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":9629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9916578,"byte_end":9916588,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":9629},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9916731,"byte_end":9916736,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":9633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9917619,"byte_end":9917623,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":9650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9918183,"byte_end":9918188,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":9654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/slab.rs","byte_start":9918514,"byte_end":9918521,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":9734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137190,"byte_end":137200,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":137270,"byte_end":137280,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":138580,"byte_end":138588,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":930},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":138625,"byte_end":138633,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":930},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":138684,"byte_end":138694,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":138929,"byte_end":138939,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":141788,"byte_end":141798,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":142155,"byte_end":142165,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":142352,"byte_end":142362,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":143534,"byte_end":143544,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":143913,"byte_end":143924,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":9749},"to":{"krate":2,"index":7317}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":144598,"byte_end":144606,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/linked_list.rs","byte_start":144805,"byte_end":144813,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":930},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/rand.rs","byte_start":155193,"byte_end":155201,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":9766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/wake.rs","byte_start":9925801,"byte_end":9925805,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":9798}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/wake.rs","byte_start":9925808,"byte_end":9925812,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":9798}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.0.2/src/util/wake.rs","byte_start":9926123,"byte_end":9926131,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":9828},"to":{"krate":2,"index":3064}}]}