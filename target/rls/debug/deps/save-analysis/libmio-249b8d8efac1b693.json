{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7","program":"/Users/patrickbeam/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","mio","--edition=2018","/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"net\"","--cfg","feature=\"os-ext\"","--cfg","feature=\"os-poll\"","--cfg","feature=\"os-util\"","--cfg","feature=\"tcp\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","-C","metadata=249b8d8efac1b693","-C","extra-filename=-249b8d8efac1b693","--out-dir","/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps","-L","dependency=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps","--extern","libc=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/liblibc-38d9962d75636540.rmeta","--extern","log=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/liblog-cf633ca55f8ad2b1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/patrickbeam/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libmio-249b8d8efac1b693.rmeta"},"prelude":{"crate_id":{"name":"mio","disambiguator":[9039263132287479554,1461210656635789179]},"crate_root":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src","external_crates":[{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2450264148744425324,10050667756610945632]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5216882650067454300,803391174261596525]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5321725740897068604,14247691274753233016]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15008236376303079999,8121662539630509915]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12920482519877858869,7783732174216732460]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12220061461292827086,10995062625150216334]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4557698817887729143,15105021759844686565]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9270263569388356812,1031064821649785583]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17403927150379973007,17129611224880441426]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8342530726152111216,8633669874212043972]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16317838093811012662,7640540080182738814]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11516351311229957058,6496694232360362766]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15319259245696541708,12758538875610414082]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13027830824513170433,9319164864677654917]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6239108798947591245,16929767405147073453]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[9689407603164028381,5815853528255048552]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","num":17,"id":{"name":"log","disambiguator":[1163638369942623445,8155073636483162634]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","num":18,"id":{"name":"cfg_if","disambiguator":[3936438787002371380,599542047436953948]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/tcp.rs","num":19,"id":{"name":"libc","disambiguator":[14115450235977407651,3558586755545689048]}}],"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":0,"byte_end":9507,"line_start":1,"line_end":265,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1070},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/mod.rs","byte_start":52593,"byte_end":52598,"line_start":8,"line_end":8,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/mod.rs","byte_start":52623,"byte_end":52629,"line_start":9,"line_end":9,"column_start":24,"column_end":30},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/mod.rs","byte_start":52631,"byte_end":52635,"line_start":9,"line_end":9,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/mod.rs","byte_start":52660,"byte_end":52666,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Source","value":"","parent":{"krate":0,"index":130}},{"kind":"Use","ref_id":{"krate":0,"index":1223},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921769,"byte_end":8921780,"line_start":11,"line_end":11,"column_start":21,"column_end":32},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":1860},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921782,"byte_end":8921791,"line_start":11,"line_end":11,"column_start":34,"column_end":43},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":1394},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921793,"byte_end":8921802,"line_start":11,"line_end":11,"column_start":45,"column_end":54},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":1864},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921804,"byte_end":8921816,"line_start":11,"line_end":11,"column_start":56,"column_end":68},"alias_span":null,"name":"TcpKeepalive","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":1514},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921848,"byte_end":8921857,"line_start":14,"line_end":14,"column_start":20,"column_end":29},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":724},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921915,"byte_end":8921925,"line_start":19,"line_end":19,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":1614},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921927,"byte_end":8921939,"line_start":19,"line_end":19,"column_start":33,"column_end":45},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":1706},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921941,"byte_end":8921953,"line_start":19,"line_end":19,"column_start":47,"column_end":59},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":1791},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921955,"byte_end":8921965,"line_start":19,"line_end":19,"column_start":61,"column_end":71},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1486,"byte_end":1492,"line_start":65,"line_end":65,"column_start":16,"column_end":22},"alias_span":null,"name":"Events","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":266},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1512,"byte_end":1520,"line_start":66,"line_end":66,"column_start":19,"column_end":27},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1537,"byte_end":1541,"line_start":67,"line_end":67,"column_start":16,"column_end":20},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1543,"byte_end":1551,"line_start":67,"line_end":67,"column_start":22,"column_end":30},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1044},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1569,"byte_end":1574,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1045},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1569,"byte_end":1574,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1066},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1591,"byte_end":1596,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":979},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1890,"byte_end":1893,"line_start":81,"line_end":81,"column_start":36,"column_end":39},"alias_span":null,"name":"new","value":"","parent":{"krate":0,"index":250}},{"kind":"Use","ref_id":{"krate":0,"index":1040},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1895,"byte_end":1903,"line_start":81,"line_end":81,"column_start":41,"column_end":49},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":250}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1905,"byte_end":1911,"line_start":81,"line_end":81,"column_start":51,"column_end":57},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":250}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1945,"byte_end":1953,"line_start":84,"line_end":84,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":249}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1945,"byte_end":1953,"line_start":84,"line_end":84,"column_start":25,"column_end":33},"alias_span":null,"name":"SourceFd","value":"","parent":{"krate":0,"index":249}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":0,"byte_end":9507,"line_start":1,"line_end":265,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":42},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":130},{"krate":0,"index":1084},{"krate":0,"index":1167},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs\n and event notification for building high performance I/O apps with as little\n overhead as possible over the OS abstractions.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unused_imports, dead_code)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":53,"byte_end":173,"line_start":2,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Mio is a fast, low-level I/O library for Rust focusing on non-blocking APIs","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":360,"byte_end":439,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ and event notification for building high performance I/O apps with as little","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":440,"byte_end":520,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ overhead as possible over the OS abstractions.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":521,"byte_end":571,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":572,"byte_end":575,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":576,"byte_end":587,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":588,"byte_end":591,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using Mio starts by creating a [`Poll`], which reads events from the OS and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":592,"byte_end":671,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ puts them into [`Events`]. You can handle I/O events from the OS with it.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":672,"byte_end":749,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":750,"byte_end":753,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ For more detail, see [`Poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":754,"byte_end":788,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":789,"byte_end":792,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: ../mio/struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":793,"byte_end":830,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ [`Events`]: ../mio/event/struct.Events.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":831,"byte_end":878,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":879,"byte_end":882,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":883,"byte_end":898,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":899,"byte_end":902,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Examples can found in the `examples` directory of the source code, or [on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":903,"byte_end":980,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ GitHub].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":981,"byte_end":993,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":994,"byte_end":997,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [on GitHub]: https://github.com/tokio-rs/mio/tree/master/examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":998,"byte_end":1067,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1068,"byte_end":1071,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Guide","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1072,"byte_end":1084,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A getting started guide is available in the [`guide`] module.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1089,"byte_end":1154,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1155,"byte_end":1158,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Available features","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1159,"byte_end":1184,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1185,"byte_end":1188,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The available features are described in the [`features`] module.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1189,"byte_end":1257,"line_start":42,"line_end":42,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":266},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11941,"byte_end":11949,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Interest","qualname":"::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Interest used in registering.","sig":null,"attributes":[{"value":"/ Interest used in registering.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11302,"byte_end":11335,"line_start":4,"line_end":4,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11336,"byte_end":11339,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Interest are used in [registering] [`event::Source`]s with [`Poll`], they","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11340,"byte_end":11417,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ indicate what readiness should be monitored for. For example if a socket is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11418,"byte_end":11497,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ registered with [readable] interests and the socket becomes writable, no","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11498,"byte_end":11574,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ event will be returned from a call to [`poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11575,"byte_end":11626,"line_start":9,"line_end":9,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11627,"byte_end":11630,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [registering]: struct.Registry.html#method.register","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11631,"byte_end":11686,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11687,"byte_end":11735,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11736,"byte_end":11766,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ [readable]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11767,"byte_end":11831,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":11832,"byte_end":11874,"line_start":15,"line_end":15,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12482,"byte_end":12490,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing readable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing readable interests.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12406,"byte_end":12467,"line_start":37,"line_end":37,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12641,"byte_end":12649,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing writable interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing writable interests.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12565,"byte_end":12626,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12948,"byte_end":12951,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"AIO","qualname":"::interest::Interest::AIO","value":"Interest","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Returns a `Interest` set representing AIO completion interests.\n","sig":null,"attributes":[{"value":"/ Returns a `Interest` set representing AIO completion interests.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12724,"byte_end":12791,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"macos\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12796,"byte_end":12933,"line_start":44,"line_end":49,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13661,"byte_end":13664,"line_start":69,"line_end":69,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interest`.","sig":null,"attributes":[{"value":"/ Add together two `Interest`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13210,"byte_end":13242,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13247,"byte_end":13250,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This does the same thing as the `BitOr` implementation, but is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13255,"byte_end":13323,"line_start":58,"line_end":58,"column_start":5,"column_end":73}},{"value":"/ constant function.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13328,"byte_end":13350,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13355,"byte_end":13358,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13363,"byte_end":13370,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13375,"byte_end":13397,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13402,"byte_end":13405,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ const INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13410,"byte_end":13485,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ # fn silent_dead_code_warning(_: Interest) { }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13490,"byte_end":13540,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ # silent_dead_code_warning(INTERESTS)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13545,"byte_end":13586,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13591,"byte_end":13598,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13603,"byte_end":13643,"line_start":68,"line_end":68,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14595,"byte_end":14601,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"remove","qualname":"<Interest>::remove","value":"pub fn remove(Self, Interest) -> Option<Interest>","parent":null,"children":[],"decl_id":null,"docs":" Removes `other` `Interest` from `self`.","sig":null,"attributes":[{"value":"/ Removes `other` `Interest` from `self`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13797,"byte_end":13840,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13845,"byte_end":13848,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set would be empty after removing `other`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13853,"byte_end":13921,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13926,"byte_end":13929,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13934,"byte_end":13941,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use mio::Interest;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13946,"byte_end":13968,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13973,"byte_end":13976,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ const RW_INTERESTS: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":13981,"byte_end":14059,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14064,"byte_end":14067,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ // As long a one interest remain this will return `Some`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14072,"byte_end":14133,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ let w_interest = RW_INTERESTS.remove(Interest::READABLE).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14138,"byte_end":14208,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ assert!(!w_interest.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14213,"byte_end":14252,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/ assert!(w_interest.is_writable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14257,"byte_end":14295,"line_start":85,"line_end":85,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14300,"byte_end":14303,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Removing all interests from the set will return `None`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14308,"byte_end":14370,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(w_interest.remove(Interest::WRITABLE), None);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14375,"byte_end":14435,"line_start":88,"line_end":88,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14440,"byte_end":14443,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ // Its also possible to remove multiple interests at once.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14448,"byte_end":14510,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(RW_INTERESTS.remove(RW_INTERESTS), None);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14515,"byte_end":14571,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14576,"byte_end":14583,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14802,"byte_end":14813,"line_start":98,"line_end":98,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14726,"byte_end":14784,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14956,"byte_end":14967,"line_start":103,"line_end":103,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":14880,"byte_end":14938,"line_start":102,"line_end":102,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15105,"byte_end":15111,"line_start":108,"line_end":108,"column_start":18,"column_end":24},"name":"is_aio","qualname":"<Interest>::is_aio","value":"pub const fn is_aio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains AIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains AIO readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15034,"byte_end":15087,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15244,"byte_end":15250,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"is_lio","qualname":"<Interest>::is_lio","value":"pub const fn is_lio(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Interest` contains LIO readiness\n","sig":null,"attributes":[{"value":"/ Returns true if `Interest` contains LIO readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15173,"byte_end":15226,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":79},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25243,"byte_end":25247,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"Poll","qualname":"::poll::Poll","value":"Poll {  }","parent":null,"children":[{"krate":0,"index":80}],"decl_id":null,"docs":" Polls for readiness events on all registered values.","sig":null,"attributes":[{"value":"/ Polls for readiness events on all registered values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":16949,"byte_end":17005,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17006,"byte_end":17009,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `Poll` allows a program to monitor a large number of [`event::Source`]s,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17010,"byte_end":17086,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ waiting until one or more become \"ready\" for some class of operations; e.g.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17087,"byte_end":17166,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ reading and writing. An event source is considered ready if it is possible","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17167,"byte_end":17245,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ to immediately perform a corresponding operation; e.g. [`read`] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17246,"byte_end":17316,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`write`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17317,"byte_end":17331,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17332,"byte_end":17335,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use `Poll`, an `event::Source` must first be registered with the `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17336,"byte_end":17414,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ instance using the [`register`] method on its associated `Register`,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17415,"byte_end":17487,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ supplying readiness interest. The readiness interest tells `Poll` which","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17488,"byte_end":17563,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ specific operations on the handle to monitor for readiness. A `Token` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17564,"byte_end":17640,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ also passed to the [`register`] function. When `Poll` returns a readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17641,"byte_end":17718,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ event, it will include this token.  This associates the event with the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17719,"byte_end":17793,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ event source that generated the event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17794,"byte_end":17836,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17837,"byte_end":17840,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17841,"byte_end":17889,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ [`read`]: ./net/struct.TcpStream.html#method.read","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17890,"byte_end":17943,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ [`write`]: ./net/struct.TcpStream.html#method.write","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":17944,"byte_end":17999,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18000,"byte_end":18054,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18055,"byte_end":18058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18059,"byte_end":18073,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18074,"byte_end":18077,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18078,"byte_end":18139,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18140,"byte_end":18143,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18293,"byte_end":18321,"line_start":35,"line_end":35,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18322,"byte_end":18369,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18370,"byte_end":18415,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18416,"byte_end":18444,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18445,"byte_end":18448,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use std::net::{self, SocketAddr};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18449,"byte_end":18486,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18487,"byte_end":18490,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18491,"byte_end":18533,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18534,"byte_end":18584,"line_start":43,"line_end":43,"column_start":1,"column_end":51}},{"value":"/ let server = net::TcpListener::bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18585,"byte_end":18632,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18633,"byte_end":18636,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18637,"byte_end":18714,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18715,"byte_end":18747,"line_start":47,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18748,"byte_end":18797,"line_start":48,"line_end":48,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18798,"byte_end":18801,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Connect the stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18802,"byte_end":18827,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ let mut stream = TcpStream::connect(server.local_addr()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18828,"byte_end":18891,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18892,"byte_end":18895,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18896,"byte_end":18934,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":18935,"byte_end":19029,"line_start":54,"line_end":54,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19030,"byte_end":19033,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19034,"byte_end":19110,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19111,"byte_end":19142,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19143,"byte_end":19153,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19154,"byte_end":19192,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19193,"byte_end":19196,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19197,"byte_end":19227,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19228,"byte_end":19293,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19294,"byte_end":19373,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/             // wakeup)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19374,"byte_end":19400,"line_start":64,"line_end":64,"column_start":1,"column_end":27}},{"value":"/             return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19401,"byte_end":19431,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19432,"byte_end":19445,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19446,"byte_end":19455,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19456,"byte_end":19461,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19462,"byte_end":19469,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19470,"byte_end":19477,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19478,"byte_end":19481,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Portability","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19482,"byte_end":19499,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19500,"byte_end":19503,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Using `Poll` provides a portable interface across supported platforms as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19504,"byte_end":19580,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ long as the caller takes the following into consideration:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19581,"byte_end":19643,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19644,"byte_end":19647,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Spurious events","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19648,"byte_end":19671,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19672,"byte_end":19675,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`] may return readiness events even if the associated","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19676,"byte_end":19745,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ event source is not actually ready. Given the same code, this may","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19746,"byte_end":19815,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ happen more on some platforms than others. It is important to never assume","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19816,"byte_end":19894,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ that, just because a readiness event was received, that the associated","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19895,"byte_end":19969,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ operation will succeed as well.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":19970,"byte_end":20005,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20006,"byte_end":20009,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ If operation fails with [`WouldBlock`], then the caller should not treat","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20010,"byte_end":20086,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ this as an error, but instead should wait until another readiness event is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20087,"byte_end":20165,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/ received.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20166,"byte_end":20179,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20180,"byte_end":20183,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Draining readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20184,"byte_end":20210,"line_start":89,"line_end":89,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20211,"byte_end":20214,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Once a readiness event is received, the corresponding operation must be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20215,"byte_end":20290,"line_start":91,"line_end":91,"column_start":1,"column_end":76}},{"value":"/ performed repeatedly until it returns [`WouldBlock`]. Unless this is done,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20291,"byte_end":20369,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ there is no guarantee that another readiness event will be delivered, even","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20370,"byte_end":20448,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ if further data is received for the event source.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20449,"byte_end":20502,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20503,"byte_end":20506,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20507,"byte_end":20557,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20558,"byte_end":20561,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ### Readiness operations","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20562,"byte_end":20590,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20591,"byte_end":20594,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The only readiness operations that are guaranteed to be present on all","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20595,"byte_end":20669,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ supported platforms are [`readable`] and [`writable`]. All other readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20670,"byte_end":20748,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ operations may have false negatives and as such should be considered","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20749,"byte_end":20821,"line_start":102,"line_end":102,"column_start":1,"column_end":73}},{"value":"/ **hints**. This means that if a socket is registered with [`readable`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20822,"byte_end":20896,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ interest and either an error or close is received, a readiness event will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20897,"byte_end":20974,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/ be generated for the socket, but it **may** only include `readable`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":20975,"byte_end":21046,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ readiness. Also note that, given the potential for spurious events,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21047,"byte_end":21118,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/ receiving a readiness event with `read_closed`, `write_closed`, or `error`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21119,"byte_end":21197,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ doesn't actually mean that a `read` on the socket will return a result","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21198,"byte_end":21272,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ matching the readiness event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21273,"byte_end":21306,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21307,"byte_end":21310,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In other words, portable programs that explicitly check for [`read_closed`],","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21311,"byte_end":21391,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ [`write_closed`], or [`error`] readiness should be doing so as an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21392,"byte_end":21461,"line_start":112,"line_end":112,"column_start":1,"column_end":70}},{"value":"/ **optimization** and always be able to handle an error or close situation","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21462,"byte_end":21539,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ when performing the actual read operation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21540,"byte_end":21586,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21587,"byte_end":21590,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21591,"byte_end":21653,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ [`writable`]: ./event/struct.Event.html#method.is_writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21654,"byte_end":21716,"line_start":117,"line_end":117,"column_start":1,"column_end":63}},{"value":"/ [`error`]: ./event/struct.Event.html#method.is_error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21717,"byte_end":21773,"line_start":118,"line_end":118,"column_start":1,"column_end":57}},{"value":"/ [`read_closed`]: ./event/struct.Event.html#method.is_read_closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21774,"byte_end":21842,"line_start":119,"line_end":119,"column_start":1,"column_end":69}},{"value":"/ [`write_closed`]: ./event/struct.Event.html#method.is_write_closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21843,"byte_end":21913,"line_start":120,"line_end":120,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21914,"byte_end":21917,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ### Registering handles","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21918,"byte_end":21945,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21946,"byte_end":21949,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Unless otherwise noted, it should be assumed that types implementing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":21950,"byte_end":22022,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ [`event::Source`] will never become ready unless they are registered with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22023,"byte_end":22100,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ `Poll`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22101,"byte_end":22112,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22113,"byte_end":22116,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22117,"byte_end":22133,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22134,"byte_end":22137,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22287,"byte_end":22315,"line_start":132,"line_end":132,"column_start":1,"column_end":29}},{"value":"/ # use std::net;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22316,"byte_end":22335,"line_start":133,"line_end":133,"column_start":1,"column_end":20}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22336,"byte_end":22383,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22384,"byte_end":22421,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22422,"byte_end":22450,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22451,"byte_end":22480,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22481,"byte_end":22509,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::thread;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22510,"byte_end":22530,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22531,"byte_end":22534,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22535,"byte_end":22588,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22589,"byte_end":22641,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/ let mut sock = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22642,"byte_end":22705,"line_start":143,"line_end":143,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22706,"byte_end":22709,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ thread::sleep(Duration::from_secs(1));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22710,"byte_end":22752,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22753,"byte_end":22756,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22757,"byte_end":22785,"line_start":147,"line_end":147,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22786,"byte_end":22789,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // The connect is not guaranteed to have started until it is registered at","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22790,"byte_end":22868,"line_start":149,"line_end":149,"column_start":1,"column_end":79}},{"value":"/ // this point","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22869,"byte_end":22886,"line_start":150,"line_end":150,"column_start":1,"column_end":18}},{"value":"/ poll.registry().register(&mut sock, Token(0), Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22887,"byte_end":22979,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22980,"byte_end":22996,"line_start":152,"line_end":152,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":22997,"byte_end":23004,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23005,"byte_end":23012,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23013,"byte_end":23016,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ### Dropping `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23017,"byte_end":23040,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23041,"byte_end":23044,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When the `Poll` instance is dropped it may cancel in-flight operations for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23045,"byte_end":23123,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ the registered [event sources], meaning that no further events for them may","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23124,"byte_end":23203,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ be received. It also means operations on the registered event sources may no","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23204,"byte_end":23284,"line_start":160,"line_end":160,"column_start":1,"column_end":81}},{"value":"/ longer work. It is up to the user to keep the `Poll` instance alive while","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23285,"byte_end":23362,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ registered event sources are being used.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23363,"byte_end":23407,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23408,"byte_end":23411,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [event sources]: ./event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23412,"byte_end":23458,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23459,"byte_end":23462,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23463,"byte_end":23489,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23490,"byte_end":23493,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `Poll` is backed by the selector provided by the operating system.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23494,"byte_end":23564,"line_start":168,"line_end":168,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23565,"byte_end":23568,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ |      OS       |  Selector |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23569,"byte_end":23602,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ |---------------|-----------|","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23603,"byte_end":23636,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/ | Android       | [epoll]   |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23637,"byte_end":23670,"line_start":172,"line_end":172,"column_start":1,"column_end":34}},{"value":"/ | DragonFly BSD | [kqueue]  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23671,"byte_end":23704,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ | FreeBSD       | [kqueue]  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23705,"byte_end":23738,"line_start":174,"line_end":174,"column_start":1,"column_end":34}},{"value":"/ | Linux         | [epoll]   |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23739,"byte_end":23772,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/ | NetBSD        | [kqueue]  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23773,"byte_end":23806,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ | OpenBSD       | [kqueue]  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23807,"byte_end":23840,"line_start":177,"line_end":177,"column_start":1,"column_end":34}},{"value":"/ | Solaris       | [epoll]   |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23841,"byte_end":23874,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/ | illumos       | [epoll]   |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23875,"byte_end":23908,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/ | Windows       | [IOCP]    |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23909,"byte_end":23942,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ | iOS           | [kqueue]  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23943,"byte_end":23976,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/ | macOS         | [kqueue]  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":23977,"byte_end":24010,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24011,"byte_end":24014,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ On all supported platforms, socket operations are handled by using the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24015,"byte_end":24089,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/ system selector. Platform specific extensions (e.g. [`SourceFd`]) allow","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24090,"byte_end":24165,"line_start":185,"line_end":185,"column_start":1,"column_end":76}},{"value":"/ accessing other features provided by individual system selectors. For","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24166,"byte_end":24239,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ example, Linux's [`signalfd`] feature can be used by registering the FD with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24240,"byte_end":24320,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ `Poll` via [`SourceFd`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24321,"byte_end":24349,"line_start":188,"line_end":188,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24350,"byte_end":24353,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ On all platforms except windows, a call to [`Poll::poll`] is mostly just a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24354,"byte_end":24432,"line_start":190,"line_end":190,"column_start":1,"column_end":79}},{"value":"/ direct call to the system selector. However, [IOCP] uses a completion model","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24433,"byte_end":24512,"line_start":191,"line_end":191,"column_start":1,"column_end":80}},{"value":"/ instead of a readiness model. In this case, `Poll` must adapt the completion","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24513,"byte_end":24593,"line_start":192,"line_end":192,"column_start":1,"column_end":81}},{"value":"/ model Mio's API. While non-trivial, the bridge layer is still quite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24594,"byte_end":24665,"line_start":193,"line_end":193,"column_start":1,"column_end":72}},{"value":"/ efficient. The most expensive part being calls to `read` and `write` require","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24666,"byte_end":24746,"line_start":194,"line_end":194,"column_start":1,"column_end":81}},{"value":"/ data to be copied into an intermediate buffer before it is passed to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24747,"byte_end":24823,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ kernel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24824,"byte_end":24835,"line_start":196,"line_end":196,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24836,"byte_end":24839,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24840,"byte_end":24902,"line_start":198,"line_end":198,"column_start":1,"column_end":63}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24903,"byte_end":24975,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ [IOCP]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365198(v=vs.85).aspx","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":24976,"byte_end":25067,"line_start":200,"line_end":200,"column_start":1,"column_end":92}},{"value":"/ [`signalfd`]: http://man7.org/linux/man-pages/man2/signalfd.2.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25068,"byte_end":25138,"line_start":201,"line_end":201,"column_start":1,"column_end":71}},{"value":"/ [`SourceFd`]: unix/struct.SourceFd.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25139,"byte_end":25182,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"/ [`Poll::poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25183,"byte_end":25231,"line_start":203,"line_end":203,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25317,"byte_end":25325,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"Registry","qualname":"::poll::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" Registers I/O resources.\n","sig":null,"attributes":[{"value":"/ Registers I/O resources.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25277,"byte_end":25305,"line_start":208,"line_end":208,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25476,"byte_end":25484,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"registry","qualname":"<Poll>::registry","value":"pub fn registry(&Self) -> &Registry","parent":null,"children":[],"decl_id":null,"docs":" Create a separate `Registry` which can be used to register\n `event::Source`s.\n","sig":null,"attributes":[{"value":"/ Create a separate `Registry` which can be used to register","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25376,"byte_end":25438,"line_start":214,"line_end":214,"column_start":5,"column_end":67}},{"value":"/ `event::Source`s.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25443,"byte_end":25464,"line_start":215,"line_end":215,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29406,"byte_end":29410,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"poll","qualname":"<Poll>::poll","value":"pub fn poll(&mut Self, &mut Events, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for readiness events","sig":null,"attributes":[{"value":"/ Wait for readiness events","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25541,"byte_end":25570,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25575,"byte_end":25578,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Blocks the current thread and waits for readiness events for any of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25583,"byte_end":25658,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ [`event::Source`]s that have been registered with this `Poll` instance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25663,"byte_end":25738,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ The function will block until either at least one readiness event has","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25743,"byte_end":25816,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ been received or `timeout` has elapsed. A `timeout` of `None` means that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25821,"byte_end":25897,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ `poll` will block until a readiness event has been received.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25902,"byte_end":25966,"line_start":226,"line_end":226,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25971,"byte_end":25974,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The supplied `events` will be cleared and newly received readiness events","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25979,"byte_end":26056,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/ will be pushed onto the end. At most `events.capacity()` events will be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26061,"byte_end":26136,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ returned. If there are further pending readiness events, they will be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26141,"byte_end":26214,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ returned on the next call to `poll`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26219,"byte_end":26259,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26264,"byte_end":26267,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A single call to `poll` may result in multiple readiness events being","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26272,"byte_end":26345,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/ returned for a single event source. For example, if a TCP socket becomes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26350,"byte_end":26426,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"/ both readable and writable, it may be possible for a single readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26431,"byte_end":26504,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ event to be returned with both [`readable`] and [`writable`] readiness","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26509,"byte_end":26583,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ **OR** two separate events may be returned, one with [`readable`] set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26588,"byte_end":26661,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ and one with [`writable`] set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26666,"byte_end":26700,"line_start":238,"line_end":238,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26705,"byte_end":26708,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Note that the `timeout` will be rounded up to the system clock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26713,"byte_end":26779,"line_start":240,"line_end":240,"column_start":5,"column_end":71}},{"value":"/ granularity (usually 1ms), and kernel scheduling delays mean that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26784,"byte_end":26853,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ the blocking interval may be overrun by a small amount.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26858,"byte_end":26917,"line_start":242,"line_end":242,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26922,"byte_end":26925,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ See the [struct] level documentation for a higher level discussion of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":26930,"byte_end":27003,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ polling.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27008,"byte_end":27020,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27025,"byte_end":27028,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27033,"byte_end":27081,"line_start":247,"line_end":247,"column_start":5,"column_end":53}},{"value":"/ [`readable`]: struct.Interest.html#associatedconstant.READABLE","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27086,"byte_end":27152,"line_start":248,"line_end":248,"column_start":5,"column_end":71}},{"value":"/ [`writable`]: struct.Interest.html#associatedconstant.WRITABLE","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27157,"byte_end":27223,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/ [struct]: struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27228,"byte_end":27258,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ [`iter`]: ./event/struct.Events.html#method.iter","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27263,"byte_end":27315,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27320,"byte_end":27323,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27328,"byte_end":27339,"line_start":253,"line_end":253,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27344,"byte_end":27347,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This returns any errors without attempting to retry, previous versions","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27352,"byte_end":27426,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ of Mio would automatically retry the poll call if it was interrupted","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27431,"byte_end":27503,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ (if `EINTR` was returned).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27508,"byte_end":27538,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27543,"byte_end":27546,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27551,"byte_end":27565,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27570,"byte_end":27573,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ A basic example -- establishing a `TcpStream` connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27578,"byte_end":27639,"line_start":261,"line_end":261,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27644,"byte_end":27647,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27809,"byte_end":27837,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27842,"byte_end":27889,"line_start":266,"line_end":266,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27894,"byte_end":27939,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27944,"byte_end":27972,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27977,"byte_end":27980,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":27985,"byte_end":28029,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28034,"byte_end":28054,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28059,"byte_end":28062,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ // Bind a server socket to connect to.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28067,"byte_end":28109,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ let addr: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28114,"byte_end":28164,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ let server = TcpListener::bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28169,"byte_end":28211,"line_start":275,"line_end":275,"column_start":5,"column_end":47}},{"value":"/ let addr = server.local_addr()?.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28216,"byte_end":28260,"line_start":276,"line_end":276,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28265,"byte_end":28268,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ // Spawn a thread to accept the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28273,"byte_end":28315,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28320,"byte_end":28347,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let _ = server.accept();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28352,"byte_end":28384,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28389,"byte_end":28396,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28401,"byte_end":28404,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ // Construct a new `Poll` handle as well as the `Events` we'll store into","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28409,"byte_end":28486,"line_start":283,"line_end":283,"column_start":5,"column_end":82}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28491,"byte_end":28523,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28528,"byte_end":28577,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28582,"byte_end":28585,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ // Connect the stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28590,"byte_end":28615,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/ let mut stream = TcpStream::connect(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28620,"byte_end":28667,"line_start":288,"line_end":288,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28672,"byte_end":28675,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ // Register the stream with `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28680,"byte_end":28718,"line_start":290,"line_end":290,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28723,"byte_end":28752,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/     &mut stream,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28757,"byte_end":28777,"line_start":292,"line_end":292,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28782,"byte_end":28799,"line_start":293,"line_end":293,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28804,"byte_end":28854,"line_start":294,"line_end":294,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28859,"byte_end":28862,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ // Wait for the socket to become ready. This has to happens in a loop to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28867,"byte_end":28943,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ // handle spurious wakeups.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28948,"byte_end":28979,"line_start":297,"line_end":297,"column_start":5,"column_end":36}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28984,"byte_end":28994,"line_start":298,"line_end":298,"column_start":5,"column_end":15}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":28999,"byte_end":29037,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29042,"byte_end":29045,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29050,"byte_end":29080,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) && event.is_writable() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29085,"byte_end":29150,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/             // The socket connected (probably, it could still be a spurious","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29155,"byte_end":29234,"line_start":303,"line_end":303,"column_start":5,"column_end":84}},{"value":"/             // wakeup)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29239,"byte_end":29265,"line_start":304,"line_end":304,"column_start":5,"column_end":31}},{"value":"/             return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29270,"byte_end":29300,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29305,"byte_end":29318,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29323,"byte_end":29332,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29337,"byte_end":29342,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29347,"byte_end":29354,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29359,"byte_end":29366,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29371,"byte_end":29374,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [struct]: #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29379,"byte_end":29394,"line_start":312,"line_end":312,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":30840,"byte_end":30843,"line_start":353,"line_end":353,"column_start":16,"column_end":19},"name":"new","qualname":"<Poll>::new","value":"pub fn new() -> io::Result<Poll>","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Poll` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35276,"byte_end":35284,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"register","qualname":"<Registry>::register","value":"pub fn register<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31284,"byte_end":31343,"line_start":375,"line_end":375,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31348,"byte_end":31351,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Once registered, the `Poll` instance will monitor the event source for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31356,"byte_end":31430,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ readiness state changes. When it notices a state change, it will return","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31435,"byte_end":31510,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ a readiness event for the handle the next time [`poll`] is called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31515,"byte_end":31585,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31590,"byte_end":31593,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ See [`Poll`] docs for a high level overview.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31598,"byte_end":31646,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31651,"byte_end":31654,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31659,"byte_end":31674,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31679,"byte_end":31682,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ `source: &S: event::Source`: This is the source of events that the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31687,"byte_end":31757,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ `Poll` instance should monitor for readiness state changes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31762,"byte_end":31825,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31830,"byte_end":31833,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ `token: Token`: The caller picks a token to associate with the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31838,"byte_end":31912,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ When [`poll`] returns an event for the handle, this token is included.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31917,"byte_end":31991,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ This allows the caller to map the event to its source. The token","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31996,"byte_end":32064,"line_start":390,"line_end":390,"column_start":5,"column_end":73}},{"value":"/ associated with the `event::Source` can be changed at any time by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32069,"byte_end":32138,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/ calling [`reregister`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32143,"byte_end":32170,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32175,"byte_end":32178,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ See documentation on [`Token`] for an example showing how to pick","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32183,"byte_end":32252,"line_start":394,"line_end":394,"column_start":5,"column_end":74}},{"value":"/ [`Token`] values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32257,"byte_end":32278,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32283,"byte_end":32286,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ `interest: Interest`: Specifies which operations `Poll` should monitor","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32291,"byte_end":32365,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ for readiness. `Poll` will only return readiness events for operations","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32370,"byte_end":32444,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ specified by this argument.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32449,"byte_end":32480,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32485,"byte_end":32488,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If a socket is registered with readable interest and the socket becomes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32493,"byte_end":32568,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ writable, no event will be returned from [`poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32573,"byte_end":32627,"line_start":402,"line_end":402,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32632,"byte_end":32635,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The readiness interest for an `event::Source` can be changed at any time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32640,"byte_end":32716,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ by calling [`reregister`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32721,"byte_end":32751,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32756,"byte_end":32759,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32764,"byte_end":32775,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32780,"byte_end":32783,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure that if a source being registered with a `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32788,"byte_end":32859,"line_start":409,"line_end":409,"column_start":5,"column_end":76}},{"value":"/ instance was previously registered with that `Poll` instance, then a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32864,"byte_end":32936,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ call to [`deregister`] has already occurred. Consecutive calls to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":32941,"byte_end":33010,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/ `register` is undefined behavior.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33015,"byte_end":33052,"line_start":412,"line_end":412,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33057,"byte_end":33060,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Unless otherwise specified, the caller should assume that once an event","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33065,"byte_end":33140,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ source is registered with a `Poll` instance, it is bound to that `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33145,"byte_end":33220,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ instance for the lifetime of the event source. This remains true even","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33225,"byte_end":33298,"line_start":416,"line_end":416,"column_start":5,"column_end":78}},{"value":"/ if the event source is deregistered from the poll instance using","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33303,"byte_end":33371,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ [`deregister`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33376,"byte_end":33395,"line_start":418,"line_end":418,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33400,"byte_end":33403,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33408,"byte_end":33456,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ [`poll`]: struct.Poll.html#method.poll","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33461,"byte_end":33503,"line_start":421,"line_end":421,"column_start":5,"column_end":47}},{"value":"/ [`reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33508,"byte_end":33566,"line_start":422,"line_end":422,"column_start":5,"column_end":63}},{"value":"/ [`deregister`]: struct.Registry.html#method.deregister","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33571,"byte_end":33629,"line_start":423,"line_end":423,"column_start":5,"column_end":63}},{"value":"/ [`Token`]: struct.Token.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33634,"byte_end":33666,"line_start":424,"line_end":424,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33671,"byte_end":33674,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33679,"byte_end":33693,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33698,"byte_end":33701,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33863,"byte_end":33891,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33896,"byte_end":33915,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33920,"byte_end":33967,"line_start":432,"line_end":432,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":33972,"byte_end":34017,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34022,"byte_end":34050,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34055,"byte_end":34084,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34089,"byte_end":34128,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34133,"byte_end":34136,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34141,"byte_end":34173,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34178,"byte_end":34181,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34186,"byte_end":34239,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34244,"byte_end":34296,"line_start":441,"line_end":441,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34301,"byte_end":34366,"line_start":442,"line_end":442,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34371,"byte_end":34374,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34379,"byte_end":34417,"line_start":444,"line_end":444,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34422,"byte_end":34451,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34456,"byte_end":34476,"line_start":446,"line_end":446,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34481,"byte_end":34498,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE | Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34503,"byte_end":34553,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34558,"byte_end":34561,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34566,"byte_end":34615,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/ let start = Instant::now();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34620,"byte_end":34651,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ let timeout = Duration::from_millis(500);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34656,"byte_end":34701,"line_start":452,"line_end":452,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34706,"byte_end":34709,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34714,"byte_end":34724,"line_start":454,"line_end":454,"column_start":5,"column_end":15}},{"value":"/     let elapsed = start.elapsed();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34729,"byte_end":34767,"line_start":455,"line_end":455,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34772,"byte_end":34775,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     if elapsed >= timeout {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34780,"byte_end":34811,"line_start":457,"line_end":457,"column_start":5,"column_end":36}},{"value":"/         // Connection timed out","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34816,"byte_end":34851,"line_start":458,"line_end":458,"column_start":5,"column_end":40}},{"value":"/         return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34856,"byte_end":34882,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34887,"byte_end":34896,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34901,"byte_end":34904,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     let remaining = timeout - elapsed;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34909,"byte_end":34951,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/     poll.poll(&mut events, Some(remaining))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":34956,"byte_end":35005,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35010,"byte_end":35013,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     for event in &events {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35018,"byte_end":35048,"line_start":465,"line_end":465,"column_start":5,"column_end":35}},{"value":"/         if event.token() == Token(0) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35053,"byte_end":35095,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/             // Something (probably) happened on the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35100,"byte_end":35163,"line_start":467,"line_end":467,"column_start":5,"column_end":68}},{"value":"/             return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35168,"byte_end":35198,"line_start":468,"line_end":468,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35203,"byte_end":35216,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35221,"byte_end":35230,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35235,"byte_end":35240,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35245,"byte_end":35252,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35257,"byte_end":35264,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37952,"byte_end":37962,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"reregister","qualname":"<Registry>::reregister","value":"pub fn reregister<S: ?Sized>(&Self, &mut S, Token, Interest) -> io::Result<()>\nwhere S: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Re-register an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Re-register an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35622,"byte_end":35684,"line_start":486,"line_end":486,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35689,"byte_end":35692,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Re-registering an event source allows changing the details of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35697,"byte_end":35766,"line_start":488,"line_end":488,"column_start":5,"column_end":74}},{"value":"/ registration. Specifically, it allows updating the associated `token`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35771,"byte_end":35844,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ and `interests` specified in previous `register` and `reregister` calls.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35849,"byte_end":35925,"line_start":490,"line_end":490,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35930,"byte_end":35933,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ The `reregister` arguments fully override the previous values. In other","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":35938,"byte_end":36013,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ words, if a socket is registered with [`readable`] interest and the call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36018,"byte_end":36094,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ to `reregister` specifies [`writable`], then read interest is no longer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36099,"byte_end":36174,"line_start":494,"line_end":494,"column_start":5,"column_end":80}},{"value":"/ requested for the handle.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36179,"byte_end":36208,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36213,"byte_end":36216,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36221,"byte_end":36297,"line_start":497,"line_end":497,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36302,"byte_end":36353,"line_start":498,"line_end":498,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36358,"byte_end":36361,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ See the [`register`] documentation for details about the function","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36366,"byte_end":36435,"line_start":500,"line_end":500,"column_start":5,"column_end":74}},{"value":"/ arguments and see the [`struct`] docs for a high level overview of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36440,"byte_end":36510,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ polling.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36515,"byte_end":36527,"line_start":502,"line_end":502,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36532,"byte_end":36535,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36540,"byte_end":36554,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36559,"byte_end":36562,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36724,"byte_end":36752,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36757,"byte_end":36776,"line_start":509,"line_end":509,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36781,"byte_end":36828,"line_start":510,"line_end":510,"column_start":5,"column_end":52}},{"value":"/ use mio::{Poll, Interest, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36833,"byte_end":36870,"line_start":511,"line_end":511,"column_start":5,"column_end":42}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36875,"byte_end":36903,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36908,"byte_end":36937,"line_start":513,"line_end":513,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36942,"byte_end":36945,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36950,"byte_end":36978,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36983,"byte_end":36986,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":36991,"byte_end":37044,"line_start":517,"line_end":517,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37049,"byte_end":37101,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37106,"byte_end":37171,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37176,"byte_end":37179,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`, requesting readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37184,"byte_end":37243,"line_start":521,"line_end":521,"column_start":5,"column_end":64}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37248,"byte_end":37277,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37282,"byte_end":37302,"line_start":523,"line_end":523,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37307,"byte_end":37324,"line_start":524,"line_end":524,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37329,"byte_end":37358,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37363,"byte_end":37366,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ // Reregister the socket specifying write interest instead. Even though","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37371,"byte_end":37446,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ // the token is the same it must be specified.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37451,"byte_end":37501,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ poll.registry().reregister(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37506,"byte_end":37537,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/     &mut socket,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37542,"byte_end":37562,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37567,"byte_end":37584,"line_start":531,"line_end":531,"column_start":5,"column_end":22}},{"value":"/     Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37589,"byte_end":37618,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37623,"byte_end":37639,"line_start":533,"line_end":533,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37644,"byte_end":37651,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37656,"byte_end":37663,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37668,"byte_end":37671,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37676,"byte_end":37724,"line_start":537,"line_end":537,"column_start":5,"column_end":53}},{"value":"/ [`struct`]: struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37729,"byte_end":37761,"line_start":538,"line_end":538,"column_start":5,"column_end":37}},{"value":"/ [`register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37766,"byte_end":37820,"line_start":539,"line_end":539,"column_start":5,"column_end":59}},{"value":"/ [`readable`]: ./event/struct.Event.html#is_readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37825,"byte_end":37880,"line_start":540,"line_end":540,"column_start":5,"column_end":60}},{"value":"/ [`writable`]: ./event/struct.Event.html#is_writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":37885,"byte_end":37940,"line_start":541,"line_end":541,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40431,"byte_end":40441,"line_start":605,"line_end":605,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registry>::deregister","value":"pub fn deregister<S: ?Sized>(&Self, &mut S) -> io::Result<()> where\nS: event::Source","parent":null,"children":[],"decl_id":null,"docs":" Deregister an [`event::Source`] with the `Poll` instance.","sig":null,"attributes":[{"value":"/ Deregister an [`event::Source`] with the `Poll` instance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38304,"byte_end":38365,"line_start":554,"line_end":554,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38370,"byte_end":38373,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ When an event source is deregistered, the `Poll` instance will no longer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38378,"byte_end":38454,"line_start":556,"line_end":556,"column_start":5,"column_end":81}},{"value":"/ monitor it for readiness state changes. Deregistering clears up any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38459,"byte_end":38530,"line_start":557,"line_end":557,"column_start":5,"column_end":76}},{"value":"/ internal resources needed to track the handle.  After an explicit call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38535,"byte_end":38609,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ to this method completes, it is guaranteed that the token previously","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38614,"byte_end":38686,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ registered to this handle will not be returned by a future poll, so long","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38691,"byte_end":38767,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ as a happens-before relationship is established between this call and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38772,"byte_end":38845,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ the poll.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38850,"byte_end":38863,"line_start":562,"line_end":562,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38868,"byte_end":38871,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ The event source must have previously been registered with this instance","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38876,"byte_end":38952,"line_start":564,"line_end":564,"column_start":5,"column_end":81}},{"value":"/ of `Poll`, otherwise the behavior is undefined.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":38957,"byte_end":39008,"line_start":565,"line_end":565,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39013,"byte_end":39016,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ A handle can be passed back to `register` after it has been","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39021,"byte_end":39084,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/ deregistered; however, it must be passed back to the **same** `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39089,"byte_end":39161,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ instance, otherwise the behavior is undefined.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39166,"byte_end":39216,"line_start":569,"line_end":569,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39221,"byte_end":39224,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39229,"byte_end":39243,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39248,"byte_end":39251,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39413,"byte_end":39441,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/ # use std::net;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39446,"byte_end":39465,"line_start":576,"line_end":576,"column_start":5,"column_end":24}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39470,"byte_end":39517,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll, Interest, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39522,"byte_end":39567,"line_start":578,"line_end":578,"column_start":5,"column_end":50}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39572,"byte_end":39600,"line_start":579,"line_end":579,"column_start":5,"column_end":33}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39605,"byte_end":39634,"line_start":580,"line_end":580,"column_start":5,"column_end":34}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39639,"byte_end":39667,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39672,"byte_end":39675,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39680,"byte_end":39712,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39717,"byte_end":39720,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39725,"byte_end":39778,"line_start":585,"line_end":585,"column_start":5,"column_end":58}},{"value":"/ let listener = net::TcpListener::bind(address)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39783,"byte_end":39835,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/ let mut socket = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39840,"byte_end":39905,"line_start":587,"line_end":587,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39910,"byte_end":39913,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ // Register the socket with `poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39918,"byte_end":39956,"line_start":589,"line_end":589,"column_start":5,"column_end":43}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39961,"byte_end":39990,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/     &mut socket,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":39995,"byte_end":40015,"line_start":591,"line_end":591,"column_start":5,"column_end":25}},{"value":"/     Token(0),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40020,"byte_end":40037,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40042,"byte_end":40071,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40076,"byte_end":40079,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ poll.registry().deregister(&mut socket)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40084,"byte_end":40129,"line_start":595,"line_end":595,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40134,"byte_end":40137,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40142,"byte_end":40191,"line_start":597,"line_end":597,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40196,"byte_end":40199,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ // Set a timeout because this poll should never receive any events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40204,"byte_end":40275,"line_start":599,"line_end":599,"column_start":5,"column_end":76}},{"value":"/ poll.poll(&mut events, Some(Duration::from_secs(1)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40280,"byte_end":40338,"line_start":600,"line_end":600,"column_start":5,"column_end":63}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40343,"byte_end":40374,"line_start":601,"line_end":601,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40379,"byte_end":40395,"line_start":602,"line_end":602,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40400,"byte_end":40407,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40412,"byte_end":40419,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40838,"byte_end":40847,"line_start":617,"line_end":617,"column_start":12,"column_end":21},"name":"try_clone","qualname":"<Registry>::try_clone","value":"pub fn try_clone(&Self) -> io::Result<Registry>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new independently owned `Registry`.","sig":null,"attributes":[{"value":"/ Creates a new independently owned `Registry`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40638,"byte_end":40687,"line_start":613,"line_end":613,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40692,"byte_end":40695,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Event sources registered with this `Registry` will be registered with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40700,"byte_end":40773,"line_start":615,"line_end":615,"column_start":5,"column_end":78}},{"value":"/ the original `Registry` and `Poll` instance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":40778,"byte_end":40826,"line_start":616,"line_end":616,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856922,"byte_end":8856930,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"SourceFd","qualname":"::sys::unix::sourcefd::SourceFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter for [`RawFd`] providing an [`event::Source`] implementation.","sig":null,"attributes":[{"value":"/ Adapter for [`RawFd`] providing an [`event::Source`] implementation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854254,"byte_end":8854326,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854327,"byte_end":8854330,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `SourceFd` enables registering any type with an FD with [`Poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854331,"byte_end":8854400,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854401,"byte_end":8854404,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While only implementations for TCP and UDP are provided, Mio supports","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854405,"byte_end":8854478,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ registering any FD that can be registered with the underlying OS selector.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854479,"byte_end":8854557,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ `SourceFd` provides the necessary bridge.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854558,"byte_end":8854603,"line_start":12,"line_end":12,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854604,"byte_end":8854607,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that `SourceFd` takes a `&RawFd`. This is because `SourceFd` **does","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854608,"byte_end":8854684,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ not** take ownership of the FD. Specifically, it will not manage any","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854685,"byte_end":8854757,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ lifecycle related operations, such as closing the FD on drop. It is expected","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854758,"byte_end":8854838,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ that the `SourceFd` is constructed right before a call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854839,"byte_end":8854900,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ [`Registry::register`]. See the examples for more detail.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854901,"byte_end":8854962,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854963,"byte_end":8854966,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ../event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8854967,"byte_end":8855016,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855017,"byte_end":8855050,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855051,"byte_end":8855118,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855119,"byte_end":8855122,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855123,"byte_end":8855137,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855138,"byte_end":8855141,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855142,"byte_end":8855158,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855159,"byte_end":8855162,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855312,"byte_end":8855340,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855341,"byte_end":8855388,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/ use mio::{Interest, Poll, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855389,"byte_end":8855426,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855427,"byte_end":8855455,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855456,"byte_end":8855459,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855460,"byte_end":8855495,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855496,"byte_end":8855526,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855527,"byte_end":8855530,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Bind a std listener","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855531,"byte_end":8855557,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855558,"byte_end":8855611,"line_start":39,"line_end":39,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855612,"byte_end":8855615,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855616,"byte_end":8855644,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855645,"byte_end":8855648,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855649,"byte_end":8855677,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855678,"byte_end":8855707,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/     &mut SourceFd(&listener.as_raw_fd()),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855708,"byte_end":8855753,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/     Token(0),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855754,"byte_end":8855771,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/     Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855772,"byte_end":8855801,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855802,"byte_end":8855818,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855819,"byte_end":8855826,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855827,"byte_end":8855834,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855835,"byte_end":8855838,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Implementing [`event::Source`] for a custom type backed by a [`RawFd`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855839,"byte_end":8855914,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8855915,"byte_end":8855918,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ use mio::{event, Interest, Registry, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856074,"byte_end":8856122,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ use mio::unix::SourceFd;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856123,"byte_end":8856151,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856152,"byte_end":8856155,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856156,"byte_end":8856189,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856190,"byte_end":8856206,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856207,"byte_end":8856210,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856211,"byte_end":8856236,"line_start":62,"line_end":62,"column_start":1,"column_end":26}},{"value":"/ pub struct MyIo {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856237,"byte_end":8856258,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"/     fd: RawFd,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856259,"byte_end":8856277,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856278,"byte_end":8856283,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856284,"byte_end":8856287,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ impl event::Source for MyIo {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856288,"byte_end":8856321,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856322,"byte_end":8856408,"line_start":68,"line_end":68,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856409,"byte_end":8856438,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856439,"byte_end":8856448,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).register(registry, token, interests)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856449,"byte_end":8856516,"line_start":71,"line_end":71,"column_start":1,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856517,"byte_end":8856526,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856527,"byte_end":8856530,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856531,"byte_end":8856619,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856620,"byte_end":8856649,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856650,"byte_end":8856659,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/         SourceFd(&self.fd).reregister(registry, token, interests)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856660,"byte_end":8856729,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856730,"byte_end":8856739,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856740,"byte_end":8856743,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856744,"byte_end":8856817,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/         SourceFd(&self.fd).deregister(registry)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856818,"byte_end":8856869,"line_start":81,"line_end":81,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856870,"byte_end":8856879,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856880,"byte_end":8856885,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856886,"byte_end":8856893,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":530},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856935,"byte_end":8856948,"line_start":86,"line_end":86,"column_start":25,"column_end":38},"name":"0","qualname":"::sys::unix::sourcefd::SourceFd::0","value":"&'a i32","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8891080,"byte_end":8891090,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::sys::unix::uds::socketaddr::SocketAddr","value":"SocketAddr {  }","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" An address associated with a `mio` specific Unix socket.","sig":null,"attributes":[{"value":"/ An address associated with a `mio` specific Unix socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8890714,"byte_end":8890774,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8890775,"byte_end":8890778,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is implemented instead of imported from [`net::SocketAddr`] because","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8890779,"byte_end":8890855,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ there is no way to create a [`net::SocketAddr`]. One must be returned by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8890856,"byte_end":8890932,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ [`accept`], so this is returned instead.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8890933,"byte_end":8890977,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8890978,"byte_end":8890981,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`net::SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8890982,"byte_end":8891037,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8891038,"byte_end":8891068,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8893385,"byte_end":8893395,"line_start":83,"line_end":83,"column_start":16,"column_end":26},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8893327,"byte_end":8893369,"line_start":82,"line_end":82,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8893793,"byte_end":8893804,"line_start":96,"line_end":96,"column_start":16,"column_end":27},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":979},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905469,"byte_end":8905472,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"new","qualname":"::sys::unix::pipe::new","value":"pub fn new() -> io::Result<(Sender, Receiver)>","parent":null,"children":[],"decl_id":null,"docs":" Create a new non-blocking Unix pipe.","sig":null,"attributes":[{"value":"/ Create a new non-blocking Unix pipe.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8900832,"byte_end":8900872,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8900873,"byte_end":8900876,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around Unix's [`pipe(2)`] system call and can be used as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8900877,"byte_end":8900955,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ inter-process or thread communication channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8900956,"byte_end":8901006,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901007,"byte_end":8901010,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This channel may be created before forking the process and then one end used","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901011,"byte_end":8901091,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ in each process, e.g. the parent process has the sending end to send command","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901092,"byte_end":8901172,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ to the child process.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901173,"byte_end":8901198,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901199,"byte_end":8901202,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`pipe(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pipe.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901203,"byte_end":8901288,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901289,"byte_end":8901292,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Events","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901293,"byte_end":8901305,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901306,"byte_end":8901309,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The [`Sender`] can be registered with [`WRITABLE`] interest to receive","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901310,"byte_end":8901384,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ [writable events], the [`Receiver`] with [`READABLE`] interest. Once data is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901385,"byte_end":8901465,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ written to the `Sender` the `Receiver` will receive an [readable event].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901466,"byte_end":8901542,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901543,"byte_end":8901546,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In addition to those events, events will also be generated if the other side","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901547,"byte_end":8901627,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ is dropped. To check if the `Sender` is dropped you'll need to check","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901628,"byte_end":8901700,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ [`is_read_closed`] on events for the `Receiver`, if it returns true the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901701,"byte_end":8901776,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ `Sender` is dropped. On the `Sender` end check [`is_write_closed`], if it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901777,"byte_end":8901854,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ returns true the `Receiver` was dropped. Also see the second example below.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901855,"byte_end":8901934,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901935,"byte_end":8901938,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`WRITABLE`]: Interest::WRITABLE","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901939,"byte_end":8901975,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ [writable events]: event::Event::is_writable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8901976,"byte_end":8902024,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"/ [`READABLE`]: Interest::READABLE","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902025,"byte_end":8902061,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ [readable event]: event::Event::is_readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902062,"byte_end":8902109,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ [`is_read_closed`]: event::Event::is_read_closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902110,"byte_end":8902162,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ [`is_write_closed`]: event::Event::is_write_closed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902163,"byte_end":8902217,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902218,"byte_end":8902221,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Deregistering","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902222,"byte_end":8902241,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902242,"byte_end":8902245,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Both `Sender` and `Receiver` will deregister themselves when dropped,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902246,"byte_end":8902319,"line_start":45,"line_end":45,"column_start":1,"column_end":74}},{"value":"/ **iff** the file descriptors are not duplicated (via [`dup(2)`]).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902320,"byte_end":8902389,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902390,"byte_end":8902393,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`dup(2)`]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902394,"byte_end":8902477,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902478,"byte_end":8902481,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902482,"byte_end":8902496,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902497,"byte_end":8902500,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Simple example that writes data into the sending end and read it from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902501,"byte_end":8902578,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ receiving end.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902579,"byte_end":8902597,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902598,"byte_end":8902601,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902602,"byte_end":8902609,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902610,"byte_end":8902647,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902648,"byte_end":8902651,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902652,"byte_end":8902697,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ use mio::unix::pipe;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902698,"byte_end":8902722,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902723,"byte_end":8902726,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Unique tokens for the two ends of the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902727,"byte_end":8902780,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ const PIPE_RECV: Token = Token(0);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902781,"byte_end":8902819,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/ const PIPE_SEND: Token = Token(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902820,"byte_end":8902858,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902859,"byte_end":8902862,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902863,"byte_end":8902898,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ // Create our `Poll` instance and the `Events` container.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902899,"byte_end":8902960,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902961,"byte_end":8902993,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8902994,"byte_end":8903040,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903041,"byte_end":8903044,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Create a new pipe.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903045,"byte_end":8903070,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903071,"byte_end":8903121,"line_start":71,"line_end":71,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903122,"byte_end":8903125,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // Register both ends of the channel.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903126,"byte_end":8903167,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903168,"byte_end":8903244,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903245,"byte_end":8903319,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903320,"byte_end":8903323,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ const MSG: &[u8; 11] = b\"Hello world\";","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903324,"byte_end":8903366,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903367,"byte_end":8903370,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903371,"byte_end":8903381,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903382,"byte_end":8903420,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903421,"byte_end":8903424,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903425,"byte_end":8903461,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903462,"byte_end":8903495,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/             PIPE_SEND => sender.write(MSG)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903496,"byte_end":8903542,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/                 .and_then(|n| if n != MSG.len() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903543,"byte_end":8903596,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/                         // We'll consider a short write an error in this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903597,"byte_end":8903673,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/                         // example. NOTE: we can't use `write_all` with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903674,"byte_end":8903749,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/                         // non-blocking I/O.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903750,"byte_end":8903798,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/                         Err(io::ErrorKind::WriteZero.into())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903799,"byte_end":8903863,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"/                     } else {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903864,"byte_end":8903896,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/                         Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903897,"byte_end":8903931,"line_start":91,"line_end":91,"column_start":1,"column_end":35}},{"value":"/                     })?,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903932,"byte_end":8903960,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/             PIPE_RECV => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903961,"byte_end":8903991,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/                 let mut buf = [0; 11];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8903992,"byte_end":8904034,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/                 let n = receiver.read(&mut buf)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904035,"byte_end":8904088,"line_start":95,"line_end":95,"column_start":1,"column_end":54}},{"value":"/                 println!(\"received: {:?}\", &buf[0..n]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904089,"byte_end":8904148,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/                 assert_eq!(n, MSG.len());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904149,"byte_end":8904194,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/                 assert_eq!(&buf, &*MSG);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904195,"byte_end":8904239,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/                 return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904240,"byte_end":8904274,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/             },","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904275,"byte_end":8904293,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/             _ => unreachable!(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904294,"byte_end":8904330,"line_start":101,"line_end":101,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904331,"byte_end":8904344,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904345,"byte_end":8904354,"line_start":103,"line_end":103,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904355,"byte_end":8904360,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904361,"byte_end":8904368,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904369,"byte_end":8904376,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904377,"byte_end":8904380,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Example that receives an event once the `Sender` is dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904381,"byte_end":8904445,"line_start":108,"line_end":108,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904446,"byte_end":8904449,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904450,"byte_end":8904457,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904458,"byte_end":8904476,"line_start":111,"line_end":111,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904477,"byte_end":8904482,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # use mio::{Poll, Events, Interest, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904483,"byte_end":8904530,"line_start":113,"line_end":113,"column_start":1,"column_end":48}},{"value":"/ # use mio::unix::pipe;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904531,"byte_end":8904557,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904558,"byte_end":8904563,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/ # const PIPE_RECV: Token = Token(0);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904564,"byte_end":8904604,"line_start":116,"line_end":116,"column_start":1,"column_end":41}},{"value":"/ # const PIPE_SEND: Token = Token(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904605,"byte_end":8904645,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904646,"byte_end":8904651,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904652,"byte_end":8904687,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ // Same setup as in the example above.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904688,"byte_end":8904730,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904731,"byte_end":8904763,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(8);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904764,"byte_end":8904810,"line_start":122,"line_end":122,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904811,"byte_end":8904814,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let (mut sender, mut receiver) = pipe::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904815,"byte_end":8904865,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904866,"byte_end":8904869,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ poll.registry().register(&mut receiver, PIPE_RECV, Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904870,"byte_end":8904946,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ poll.registry().register(&mut sender, PIPE_SEND, Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8904947,"byte_end":8905021,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905022,"byte_end":8905025,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ // Drop the sender.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905026,"byte_end":8905049,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"/ drop(sender);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905050,"byte_end":8905067,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905068,"byte_end":8905071,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905072,"byte_end":8905106,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905107,"byte_end":8905110,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905111,"byte_end":8905143,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/     match event.token() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905144,"byte_end":8905173,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/         PIPE_RECV if event.is_read_closed() => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905174,"byte_end":8905226,"line_start":136,"line_end":136,"column_start":1,"column_end":53}},{"value":"/             // Detected that the sender was dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905227,"byte_end":8905283,"line_start":137,"line_end":137,"column_start":1,"column_end":57}},{"value":"/             println!(\"Sender dropped!\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905284,"byte_end":8905328,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/             return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905329,"byte_end":8905359,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905360,"byte_end":8905374,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905375,"byte_end":8905407,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905408,"byte_end":8905417,"line_start":142,"line_end":142,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905418,"byte_end":8905423,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ # unreachable!();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905424,"byte_end":8905445,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905446,"byte_end":8905453,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8905454,"byte_end":8905461,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907446,"byte_end":8907452,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sys::unix::pipe::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1037}],"decl_id":null,"docs":" Sending end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Sending end of an Unix pipe.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907326,"byte_end":8907358,"line_start":206,"line_end":206,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907359,"byte_end":8907362,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907363,"byte_end":8907417,"line_start":208,"line_end":208,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907569,"byte_end":8907584,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Sender>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Sender` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Sender` into or out of non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907503,"byte_end":8907557,"line_start":215,"line_end":215,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909887,"byte_end":8909895,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sys::unix::pipe::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1041}],"decl_id":null,"docs":" Receiving end of an Unix pipe.","sig":null,"attributes":[{"value":"/ Receiving end of an Unix pipe.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909765,"byte_end":8909799,"line_start":303,"line_end":303,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909800,"byte_end":8909803,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ See [`new`] for documentation, including examples.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909804,"byte_end":8909858,"line_start":305,"line_end":305,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8910016,"byte_end":8910031,"line_start":313,"line_end":313,"column_start":12,"column_end":27},"name":"set_nonblocking","qualname":"<Receiver>::set_nonblocking","value":"pub fn set_nonblocking(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `Receiver` into or out of non-blocking mode.\n","sig":null,"attributes":[{"value":"/ Set the `Receiver` into or out of non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909948,"byte_end":8910004,"line_start":312,"line_end":312,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49287,"byte_end":49292,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Token","qualname":"::token::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Associates readiness events with [`event::Source`]s.","sig":null,"attributes":[{"value":"/ Associates readiness events with [`event::Source`]s.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44336,"byte_end":44392,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44393,"byte_end":44396,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `Token` is a wrapper around `usize` and is used as an argument to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44397,"byte_end":44466,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ [`Registry::register`] and [`Registry::reregister`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44467,"byte_end":44523,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44524,"byte_end":44527,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44528,"byte_end":44579,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44580,"byte_end":44583,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`event::Source`]: ./event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44584,"byte_end":44632,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44633,"byte_end":44663,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ [`Registry::register`]: struct.Registry.html#method.register","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44664,"byte_end":44728,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ [`Registry::reregister`]: struct.Registry.html#method.reregister","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44729,"byte_end":44797,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44798,"byte_end":44801,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44802,"byte_end":44815,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44816,"byte_end":44819,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Using `Token` to track which socket generated the event. In this example,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44820,"byte_end":44897,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ `HashMap` is used, but usually something like [`slab`] is better.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44898,"byte_end":44967,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44968,"byte_end":44971,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`slab`]: https://crates.io/crates/slab","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":44972,"byte_end":45015,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45016,"byte_end":45019,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45169,"byte_end":45197,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45198,"byte_end":45245,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45246,"byte_end":45291,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45292,"byte_end":45322,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45323,"byte_end":45326,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45327,"byte_end":45347,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45348,"byte_end":45378,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45379,"byte_end":45413,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45414,"byte_end":45417,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // After this number of sockets is accepted, the server will shutdown.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45418,"byte_end":45492,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ const MAX_SOCKETS: usize = 32;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45493,"byte_end":45527,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45528,"byte_end":45531,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Pick a token that will not be used by any other socket and use that one","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45532,"byte_end":45610,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ // for the listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45611,"byte_end":45635,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ const LISTENER: Token = Token(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45636,"byte_end":45676,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45677,"byte_end":45680,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Used to store the sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45681,"byte_end":45714,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ let mut sockets = HashMap::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45715,"byte_end":45752,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45753,"byte_end":45756,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // This is used to generate a unique token for a socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45757,"byte_end":45816,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ let mut next_socket_index = 0;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45817,"byte_end":45851,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45852,"byte_end":45855,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // The `Poll` instance","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45856,"byte_end":45882,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45883,"byte_end":45915,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45916,"byte_end":45919,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Tcp listener","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45920,"byte_end":45939,"line_start":47,"line_end":47,"column_start":1,"column_end":20}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":45940,"byte_end":46006,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46007,"byte_end":46010,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Register the listener","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46011,"byte_end":46039,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ poll.registry().register(&mut listener, LISTENER, Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46040,"byte_end":46115,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46116,"byte_end":46119,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // Spawn a thread that will connect a bunch of sockets then close them","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46120,"byte_end":46194,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46195,"byte_end":46233,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46234,"byte_end":46261,"line_start":55,"line_end":55,"column_start":1,"column_end":28}},{"value":"/     use std::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46262,"byte_end":46294,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46295,"byte_end":46298,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     // +1 here is to connect an extra socket to signal the socket to close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46299,"byte_end":46377,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/     for _ in 0..(MAX_SOCKETS+1) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46378,"byte_end":46415,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         // Connect then drop the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46416,"byte_end":46459,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/         let _ = TcpStream::connect(addr).unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46460,"byte_end":46514,"line_start":61,"line_end":61,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46515,"byte_end":46524,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46525,"byte_end":46532,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46533,"byte_end":46536,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Event storage","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46537,"byte_end":46557,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46558,"byte_end":46607,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46608,"byte_end":46611,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Read buffer, this will never actually get filled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46612,"byte_end":46667,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ let mut buf = [0; 256];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46668,"byte_end":46695,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46696,"byte_end":46699,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // The main event loop","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46700,"byte_end":46726,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46727,"byte_end":46737,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     // Wait for events","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46738,"byte_end":46764,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/     poll.poll(&mut events, None)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46765,"byte_end":46803,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46804,"byte_end":46807,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     for event in &events {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46808,"byte_end":46838,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/         match event.token() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46839,"byte_end":46872,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/             LISTENER => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46873,"byte_end":46902,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/                 // Perform operations in a loop until `WouldBlock` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46903,"byte_end":46976,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/                 // encountered.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":46977,"byte_end":47012,"line_start":80,"line_end":80,"column_start":1,"column_end":36}},{"value":"/                 loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47013,"byte_end":47039,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/                     match listener.accept() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47040,"byte_end":47089,"line_start":82,"line_end":82,"column_start":1,"column_end":50}},{"value":"/                         Ok((mut socket, _)) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47090,"byte_end":47142,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/                             // Shutdown the server","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47143,"byte_end":47197,"line_start":84,"line_end":84,"column_start":1,"column_end":55}},{"value":"/                             if next_socket_index == MAX_SOCKETS {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47198,"byte_end":47267,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/                                 return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47268,"byte_end":47318,"line_start":86,"line_end":86,"column_start":1,"column_end":51}},{"value":"/                             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47319,"byte_end":47352,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47353,"byte_end":47356,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/                             // Get the token for the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47357,"byte_end":47420,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/                             let token = Token(next_socket_index);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47421,"byte_end":47490,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/                             next_socket_index += 1;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47491,"byte_end":47546,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47547,"byte_end":47550,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/                             // Register the new socket w/ poll","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47551,"byte_end":47617,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/                             poll.registry().register(&mut socket, token, Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47618,"byte_end":47716,"line_start":94,"line_end":94,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47717,"byte_end":47720,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                             // Store the socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47721,"byte_end":47772,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/                             sockets.insert(token, socket);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47773,"byte_end":47835,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/                         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47836,"byte_end":47865,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47866,"byte_end":47950,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop accepting","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":47951,"byte_end":48029,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/                             break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48030,"byte_end":48068,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48069,"byte_end":48098,"line_start":102,"line_end":102,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48099,"byte_end":48174,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48175,"byte_end":48200,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48201,"byte_end":48222,"line_start":105,"line_end":105,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48223,"byte_end":48240,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/             token => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48241,"byte_end":48267,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/                 // Always operate in a loop","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48268,"byte_end":48315,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                 loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48316,"byte_end":48342,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/                     match sockets.get_mut(&token).unwrap().read(&mut buf) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48343,"byte_end":48422,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/                         Ok(0) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48423,"byte_end":48461,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"/                             // Socket is closed, remove it from the map","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48462,"byte_end":48537,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/                             sockets.remove(&token);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48538,"byte_end":48593,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/                             break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48594,"byte_end":48632,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48633,"byte_end":48662,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/                         // Data is not actually sent in this example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48663,"byte_end":48735,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/                         Ok(_) => unreachable!(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48736,"byte_end":48788,"line_start":117,"line_end":117,"column_start":1,"column_end":53}},{"value":"/                         Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48789,"byte_end":48873,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/                             // Socket is not ready anymore, stop reading","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48874,"byte_end":48950,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/                             break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48951,"byte_end":48989,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/                         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":48990,"byte_end":49019,"line_start":121,"line_end":121,"column_start":1,"column_end":30}},{"value":"/                         e => panic!(\"err={:?}\", e), // Unexpected error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49020,"byte_end":49095,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/                     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49096,"byte_end":49121,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49122,"byte_end":49143,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49144,"byte_end":49161,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49162,"byte_end":49175,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49176,"byte_end":49185,"line_start":127,"line_end":127,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49186,"byte_end":49191,"line_start":128,"line_end":128,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49192,"byte_end":49199,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49200,"byte_end":49207,"line_start":130,"line_end":130,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/token.rs","byte_start":49293,"byte_end":49302,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"0","qualname":"::token::Token::0","value":"usize","parent":{"krate":0,"index":1044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51967,"byte_end":51972,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Waker","qualname":"::waker::Waker","value":"Waker {  }","parent":null,"children":[{"krate":0,"index":1067}],"decl_id":null,"docs":" Waker allows cross-thread waking of [`Poll`].","sig":null,"attributes":[{"value":"/ Waker allows cross-thread waking of [`Poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49449,"byte_end":49498,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49499,"byte_end":49502,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ When created it will cause events with [`readable`] readiness and the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49503,"byte_end":49576,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ provided `token` if [`wake`] is called, possibly from another thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49577,"byte_end":49650,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49651,"byte_end":49654,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49655,"byte_end":49685,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ [`readable`]: ./event/struct.Event.html#method.is_readable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49686,"byte_end":49748,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ [`wake`]: struct.Waker.html#method.wake","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49749,"byte_end":49792,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49793,"byte_end":49796,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49797,"byte_end":49808,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49809,"byte_end":49812,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `Waker` events are only guaranteed to be delivered while the `Waker` value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49813,"byte_end":49891,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is alive.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49892,"byte_end":49905,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49906,"byte_end":49909,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Only a single `Waker` can be active per [`Poll`], if multiple threads need","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49910,"byte_end":49988,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ access to the `Waker` it can be shared via for example an `Arc`. What","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":49989,"byte_end":50062,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ happens if multiple `Waker`s are registered with the same `Poll` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50063,"byte_end":50134,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ undefined.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50135,"byte_end":50149,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50150,"byte_end":50153,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50154,"byte_end":50180,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50181,"byte_end":50184,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ On platforms that support kqueue this will use the `EVFILT_USER` event","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50185,"byte_end":50259,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ filter, see [implementation notes of `Poll`] to see what platforms support","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50260,"byte_end":50338,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ kqueue. On Linux it uses [eventfd].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50339,"byte_end":50378,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50379,"byte_end":50382,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [implementation notes of `Poll`]: struct.Poll.html#implementation-notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50383,"byte_end":50458,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [eventfd]: http://man7.org/linux/man-pages/man2/eventfd.2.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50459,"byte_end":50525,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50526,"byte_end":50529,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50530,"byte_end":50544,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50545,"byte_end":50548,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Wake a [`Poll`] instance from another thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50549,"byte_end":50598,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50599,"byte_end":50602,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50706,"byte_end":50765,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ use std::thread;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50766,"byte_end":50786,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50787,"byte_end":50815,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50816,"byte_end":50839,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50840,"byte_end":50843,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ use mio::{Events, Token, Poll, Waker};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50844,"byte_end":50886,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50887,"byte_end":50890,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ const WAKE_TOKEN: Token = Token(10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50891,"byte_end":50931,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50932,"byte_end":50935,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50936,"byte_end":50968,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(2);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":50969,"byte_end":51015,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51016,"byte_end":51019,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let waker = Arc::new(Waker::new(poll.registry(), WAKE_TOKEN)?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51020,"byte_end":51087,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51088,"byte_end":51091,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ // We need to keep the Waker alive, so we'll create a clone for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51092,"byte_end":51163,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ // thread we create below.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51164,"byte_end":51194,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ let waker1 = waker.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51195,"byte_end":51226,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/ let handle = thread::spawn(move || {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51227,"byte_end":51267,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/     // Working hard, or hardly working?","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51268,"byte_end":51311,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51312,"byte_end":51362,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51363,"byte_end":51366,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     // Now we'll wake the queue on the other thread.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51367,"byte_end":51423,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/     waker1.wake().expect(\"unable to wake\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51424,"byte_end":51471,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51472,"byte_end":51479,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51480,"byte_end":51483,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // On our current thread we'll poll for events, without a timeout.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51484,"byte_end":51554,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ poll.poll(&mut events, None)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51555,"byte_end":51589,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51590,"byte_end":51593,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // After about 500 milliseconds we should be awoken by the other thread and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51594,"byte_end":51673,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ // get a single event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51674,"byte_end":51700,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/ assert!(!events.is_empty());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51701,"byte_end":51733,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/ let waker_event = events.iter().next().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51734,"byte_end":51786,"line_start":70,"line_end":70,"column_start":1,"column_end":53}},{"value":"/ assert!(waker_event.is_readable());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51787,"byte_end":51826,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(waker_event.token(), WAKE_TOKEN);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51827,"byte_end":51875,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51876,"byte_end":51905,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51906,"byte_end":51922,"line_start":74,"line_end":74,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51923,"byte_end":51930,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":51931,"byte_end":51938,"line_start":76,"line_end":76,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":52055,"byte_end":52058,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Waker>::new","value":"pub fn new(&Registry, Token) -> io::Result<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Waker`.\n","sig":null,"attributes":[{"value":"/ Create a new `Waker`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":52018,"byte_end":52043,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":52392,"byte_end":52396,"line_start":93,"line_end":93,"column_start":12,"column_end":16},"name":"wake","qualname":"<Waker>::wake","value":"pub fn wake(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the [`Poll`] associated with this `Waker`.","sig":null,"attributes":[{"value":"/ Wake up the [`Poll`] associated with this `Waker`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":52283,"byte_end":52337,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":52342,"byte_end":52345,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":52350,"byte_end":52380,"line_start":92,"line_end":92,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":130},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/mod.rs","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":162},{"krate":0,"index":194},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227}],"decl_id":null,"docs":" Readiness event types and utilities.\n","sig":null,"attributes":[{"value":"/ Readiness event types and utilities.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/mod.rs","byte_start":52459,"byte_end":52499,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53076,"byte_end":53081,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":1071}],"decl_id":null,"docs":" A readiness event.","sig":null,"attributes":[{"value":"/ A readiness event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52710,"byte_end":52732,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52733,"byte_end":52736,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `Event` is a readiness state paired with a [`Token`]. It is returned by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52737,"byte_end":52812,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [`Poll::poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52813,"byte_end":52832,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52833,"byte_end":52836,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For more documentation on polling and events, see [`Poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52837,"byte_end":52900,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52901,"byte_end":52904,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52905,"byte_end":52956,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52957,"byte_end":52990,"line_start":13,"line_end":13,"column_start":1,"column_end":34}},{"value":"/ [`Token`]: ../struct.Token.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":52991,"byte_end":53026,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"repr(transparent)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53044,"byte_end":53064,"line_start":16,"line_end":16,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53169,"byte_end":53174,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"token","qualname":"<Event>::token","value":"pub fn token(&Self) -> Token","parent":null,"children":[],"decl_id":null,"docs":" Returns the event's token.\n","sig":null,"attributes":[{"value":"/ Returns the event's token.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53127,"byte_end":53157,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53313,"byte_end":53324,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Event>::is_readable","value":"pub fn is_readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains readable readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53243,"byte_end":53301,"line_start":27,"line_end":27,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53468,"byte_end":53479,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Event>::is_writable","value":"pub fn is_writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns true if the event contains writable readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53398,"byte_end":53456,"line_start":32,"line_end":32,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54481,"byte_end":54489,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"is_error","qualname":"<Event>::is_error","value":"pub fn is_error(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains error readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains error readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53553,"byte_end":53608,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53613,"byte_end":53616,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Error events occur when the socket enters an error state. In this case,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53621,"byte_end":53696,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ the socket will also receive a readable or writable event. Reading or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53701,"byte_end":53774,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ writing to the socket will result in an error.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53779,"byte_end":53829,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53834,"byte_end":53837,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53842,"byte_end":53853,"line_start":43,"line_end":43,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53858,"byte_end":53861,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53866,"byte_end":53941,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ error event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53946,"byte_end":53962,"line_start":46,"line_end":46,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53967,"byte_end":53970,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53975,"byte_end":54035,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54040,"byte_end":54043,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54048,"byte_end":54087,"line_start":50,"line_end":50,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54092,"byte_end":54131,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLERR`      |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54136,"byte_end":54175,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | `EV_ERROR` and `EV_EOF` with `fflags` set to `0`. |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54180,"byte_end":54253,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54258,"byte_end":54261,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54266,"byte_end":54325,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54330,"byte_end":54392,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54397,"byte_end":54469,"line_start":57,"line_end":57,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55802,"byte_end":55816,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Event>::is_read_closed","value":"pub fn is_read_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains read closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains read closed readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54560,"byte_end":54621,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54626,"byte_end":54629,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54634,"byte_end":54645,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54650,"byte_end":54653,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Read closed readiness can be expected after any of the following have","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54658,"byte_end":54731,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ occurred:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54736,"byte_end":54749,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ * The local stream has shutdown the read half of its socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54754,"byte_end":54817,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/ * The local stream has shutdown both the read half and the write half","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54822,"byte_end":54895,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/   of its socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54900,"byte_end":54919,"line_start":70,"line_end":70,"column_start":5,"column_end":24}},{"value":"/ * The peer stream has shutdown the write half its socket; this sends a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":54924,"byte_end":54998,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/   `FIN` packet that has been received by the local stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55003,"byte_end":55064,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55069,"byte_end":55072,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55077,"byte_end":55149,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ return readiness when read half is closed, it is guaranteed that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55154,"byte_end":55222,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/ false-positives will not occur.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55227,"byte_end":55262,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55267,"byte_end":55270,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55275,"byte_end":55335,"line_start":78,"line_end":78,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55340,"byte_end":55343,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55348,"byte_end":55387,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55392,"byte_end":55431,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55436,"byte_end":55475,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ |               | `EPOLLIN` and `EPOLLRDHUP` |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55480,"byte_end":55530,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55535,"byte_end":55574,"line_start":84,"line_end":84,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55579,"byte_end":55582,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55587,"byte_end":55646,"line_start":86,"line_end":86,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55651,"byte_end":55713,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55718,"byte_end":55790,"line_start":88,"line_end":88,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57047,"byte_end":57062,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Event>::is_write_closed","value":"pub fn is_write_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains write closed readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains write closed readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55893,"byte_end":55955,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55960,"byte_end":55963,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55968,"byte_end":55979,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55984,"byte_end":55987,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ On [epoll] this is essentially a check for `EPOLLHUP` flag as the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":55992,"byte_end":56061,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ local stream shutting down its write half does not trigger this event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56066,"byte_end":56140,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56145,"byte_end":56148,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ On [kqueue] the local stream shutting down the write half of its","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56153,"byte_end":56221,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ socket will trigger this event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56226,"byte_end":56261,"line_start":101,"line_end":101,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56266,"byte_end":56269,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Method is a best effort implementation. While some platforms may not","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56274,"byte_end":56346,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ return readiness when write half is closed, it is guaranteed that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56351,"byte_end":56420,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ false-positives will not occur.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56425,"byte_end":56460,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56465,"byte_end":56468,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56473,"byte_end":56533,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56538,"byte_end":56541,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56546,"byte_end":56585,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56590,"byte_end":56629,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLHUP`, or  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56634,"byte_end":56673,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/ |               | only `EPOLLERR`, or |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56678,"byte_end":56721,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ |               | `EPOLLOUT` and `EPOLLERR` |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56726,"byte_end":56775,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/ | [kqueue]      | `EV_EOF`        |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56780,"byte_end":56819,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56824,"byte_end":56827,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56832,"byte_end":56891,"line_start":116,"line_end":116,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56896,"byte_end":56958,"line_start":117,"line_end":117,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":56963,"byte_end":57035,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57833,"byte_end":57844,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<Event>::is_priority","value":"pub fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains priority readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains priority readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57140,"byte_end":57198,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57203,"byte_end":57206,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57211,"byte_end":57222,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57227,"byte_end":57230,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms trigger the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57235,"byte_end":57310,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ priority event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57315,"byte_end":57334,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57339,"byte_end":57342,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57347,"byte_end":57407,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57412,"byte_end":57415,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57420,"byte_end":57459,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57464,"byte_end":57503,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | `EPOLLPRI`      |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57508,"byte_end":57547,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]      | *Not supported* |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57552,"byte_end":57591,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57596,"byte_end":57599,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57604,"byte_end":57663,"line_start":137,"line_end":137,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57668,"byte_end":57730,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57735,"byte_end":57807,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57812,"byte_end":57821,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58649,"byte_end":58655,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"is_aio","qualname":"<Event>::is_aio","value":"pub fn is_aio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains AIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains AIO readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57918,"byte_end":57971,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57976,"byte_end":57979,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":57984,"byte_end":57995,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58000,"byte_end":58003,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but not all platforms support AIO.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58008,"byte_end":58084,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58089,"byte_end":58092,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The table below shows what flags are checked on what OS.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58097,"byte_end":58157,"line_start":151,"line_end":151,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58162,"byte_end":58165,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ | [OS selector] | Flag(s) checked |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58170,"byte_end":58209,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ |---------------|-----------------|","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58214,"byte_end":58253,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ | [epoll]       | *Not supported* |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58258,"byte_end":58297,"line_start":155,"line_end":155,"column_start":5,"column_end":44}},{"value":"/ | [kqueue]<sup>1</sup> | `EVFILT_AIO` |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58302,"byte_end":58345,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58350,"byte_end":58353,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ 1: Only supported on DragonFly BSD, FreeBSD, iOS and macOS.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58358,"byte_end":58421,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58426,"byte_end":58429,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ [OS selector]: ../struct.Poll.html#implementation-notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58434,"byte_end":58493,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/ [epoll]: http://man7.org/linux/man-pages/man7/epoll.7.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58498,"byte_end":58560,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/ [kqueue]: https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58565,"byte_end":58637,"line_start":162,"line_end":162,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58959,"byte_end":58965,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"is_lio","qualname":"<Event>::is_lio","value":"pub fn is_lio(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the event contains LIO readiness.","sig":null,"attributes":[{"value":"/ Returns true if the event contains LIO readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58724,"byte_end":58777,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58782,"byte_end":58785,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58790,"byte_end":58801,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58806,"byte_end":58809,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Method is available on all platforms, but only FreeBSD supports LIO. On","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58814,"byte_end":58889,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ FreeBSD this method checks the `EVFILT_LIO` flag.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":58894,"byte_end":58947,"line_start":172,"line_end":172,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61962,"byte_end":61968,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Events","qualname":"::event::events::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":173}],"decl_id":null,"docs":" A collection of readiness events.","sig":null,"attributes":[{"value":"/ A collection of readiness events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":60852,"byte_end":60889,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":60890,"byte_end":60893,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Events` is passed as an argument to [`Poll::poll`] and will be used to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":60894,"byte_end":60969,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ receive any new readiness events received since the last poll. Usually, a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":60970,"byte_end":61047,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ single `Events` instance is created at the same time as a [`Poll`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61048,"byte_end":61122,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ reused on each call to [`Poll::poll`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61123,"byte_end":61165,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61166,"byte_end":61169,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See [`Poll`] for more documentation on polling.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61170,"byte_end":61221,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61222,"byte_end":61225,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Poll::poll`]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61226,"byte_end":61277,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61278,"byte_end":61311,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61312,"byte_end":61315,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61316,"byte_end":61330,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61331,"byte_end":61334,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61438,"byte_end":61466,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61467,"byte_end":61514,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61515,"byte_end":61543,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61544,"byte_end":61572,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61573,"byte_end":61576,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61577,"byte_end":61626,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61627,"byte_end":61659,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61660,"byte_end":61665,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # assert!(events.is_empty());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61666,"byte_end":61699,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61700,"byte_end":61703,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Register `event::Source`s with `poll`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61704,"byte_end":61749,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61750,"byte_end":61753,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61754,"byte_end":61816,"line_start":34,"line_end":34,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61817,"byte_end":61820,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61821,"byte_end":61853,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61854,"byte_end":61911,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61912,"byte_end":61917,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61918,"byte_end":61934,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61935,"byte_end":61942,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61943,"byte_end":61950,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62801,"byte_end":62805,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"Iter","qualname":"::event::events::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"decl_id":null,"docs":" [`Events`] iterator.","sig":null,"attributes":[{"value":"/ [`Events`] iterator.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":61998,"byte_end":62022,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62023,"byte_end":62026,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method on [`Events`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62027,"byte_end":62091,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62092,"byte_end":62095,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`Events`]: struct.Events.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62096,"byte_end":62130,"line_start":50,"line_end":50,"column_start":1,"column_end":35}},{"value":"/ [`iter`]: struct.Events.html#method.iter","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62131,"byte_end":62175,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62176,"byte_end":62179,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62180,"byte_end":62194,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62195,"byte_end":62198,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62302,"byte_end":62330,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62331,"byte_end":62378,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62379,"byte_end":62407,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62408,"byte_end":62436,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62437,"byte_end":62440,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62441,"byte_end":62490,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62491,"byte_end":62523,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62524,"byte_end":62527,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62528,"byte_end":62564,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62565,"byte_end":62568,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62569,"byte_end":62631,"line_start":67,"line_end":67,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62632,"byte_end":62635,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62636,"byte_end":62668,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62669,"byte_end":62726,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62727,"byte_end":62732,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62733,"byte_end":62749,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62750,"byte_end":62757,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62758,"byte_end":62765,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63140,"byte_end":63153,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Events>::with_capacity","value":"pub fn with_capacity(usize) -> Events","parent":null,"children":[],"decl_id":null,"docs":" Return a new `Events` capable of holding up to `capacity` events.","sig":null,"attributes":[{"value":"/ Return a new `Events` capable of holding up to `capacity` events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62872,"byte_end":62941,"line_start":82,"line_end":82,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62946,"byte_end":62949,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62954,"byte_end":62968,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62973,"byte_end":62976,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62981,"byte_end":62988,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62993,"byte_end":63013,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63018,"byte_end":63021,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63026,"byte_end":63071,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63076,"byte_end":63116,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63121,"byte_end":63128,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63512,"byte_end":63520,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Events>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `Event` values that `self` can hold.","sig":null,"attributes":[{"value":"/ Returns the number of `Event` values that `self` can hold.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63278,"byte_end":63340,"line_start":98,"line_end":98,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63345,"byte_end":63348,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63353,"byte_end":63360,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63365,"byte_end":63385,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63390,"byte_end":63393,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63398,"byte_end":63443,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(1024, events.capacity());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63448,"byte_end":63488,"line_start":104,"line_end":104,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63493,"byte_end":63500,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63826,"byte_end":63834,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Events>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains no `Event` values.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains no `Event` values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63580,"byte_end":63636,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63641,"byte_end":63644,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63649,"byte_end":63663,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63668,"byte_end":63671,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63676,"byte_end":63683,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use mio::Events;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63688,"byte_end":63708,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63713,"byte_end":63716,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63721,"byte_end":63766,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63771,"byte_end":63802,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63807,"byte_end":63814,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64635,"byte_end":64639,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"iter","qualname":"<Events>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Event` values.","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Event` values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63893,"byte_end":63941,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63946,"byte_end":63949,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63954,"byte_end":63968,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":63973,"byte_end":63976,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64092,"byte_end":64120,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64125,"byte_end":64172,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64177,"byte_end":64205,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64210,"byte_end":64238,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64243,"byte_end":64246,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64251,"byte_end":64300,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64305,"byte_end":64337,"line_start":136,"line_end":136,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64342,"byte_end":64345,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64350,"byte_end":64386,"line_start":138,"line_end":138,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64391,"byte_end":64394,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64399,"byte_end":64461,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64466,"byte_end":64469,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ for event in events.iter() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64474,"byte_end":64506,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/     println!(\"Got an event for {:?}\", event.token());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64511,"byte_end":64568,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64573,"byte_end":64578,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64583,"byte_end":64599,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64604,"byte_end":64611,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64616,"byte_end":64623,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65607,"byte_end":65612,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"clear","qualname":"<Events>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clearing all `Event` values from container explicitly.","sig":null,"attributes":[{"value":"/ Clearing all `Event` values from container explicitly.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64742,"byte_end":64800,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64805,"byte_end":64808,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64813,"byte_end":64824,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64829,"byte_end":64832,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Events are cleared before every `poll`, so it is not required to call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64837,"byte_end":64910,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ this manually.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64915,"byte_end":64933,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64938,"byte_end":64941,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64946,"byte_end":64960,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":64965,"byte_end":64968,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65084,"byte_end":65112,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65117,"byte_end":65164,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ use mio::{Events, Poll};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65169,"byte_end":65197,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65202,"byte_end":65230,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65235,"byte_end":65238,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut events = Events::with_capacity(1024);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65243,"byte_end":65292,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65297,"byte_end":65329,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65334,"byte_end":65337,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ // Register handles with `poll`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65342,"byte_end":65378,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65383,"byte_end":65386,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65391,"byte_end":65453,"line_start":176,"line_end":176,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65458,"byte_end":65461,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Clear all events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65466,"byte_end":65490,"line_start":178,"line_end":178,"column_start":5,"column_end":29}},{"value":"/ events.clear();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65495,"byte_end":65514,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ assert!(events.is_empty());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65519,"byte_end":65550,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65555,"byte_end":65571,"line_start":181,"line_end":181,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65576,"byte_end":65583,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65588,"byte_end":65595,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":208},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69192,"byte_end":69198,"line_start":75,"line_end":75,"column_start":11,"column_end":17},"name":"Source","qualname":"::event::source::Source","value":"Source","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"decl_id":null,"docs":" An event source that may be registered with [`Registry`].","sig":null,"attributes":[{"value":"/ An event source that may be registered with [`Registry`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66643,"byte_end":66704,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66705,"byte_end":66708,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Types that implement `event::Source` can be registered with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66709,"byte_end":66772,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/ `Registry`. Users of Mio **should not** use the `event::Source` trait","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66773,"byte_end":66846,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ functions directly. Instead, the equivalent functions on `Registry` should","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66847,"byte_end":66925,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ be used.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66926,"byte_end":66938,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66939,"byte_end":66942,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See [`Registry`] for more details.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66943,"byte_end":66981,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66982,"byte_end":66985,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Registry`]: ../struct.Registry.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":66986,"byte_end":67027,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67028,"byte_end":67031,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Implementing `event::Source`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67032,"byte_end":67066,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67067,"byte_end":67070,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Event sources are always backed by system handles, such as sockets or other","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67071,"byte_end":67150,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ system handles. These `event::Source`s will be monitored by the system","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67151,"byte_end":67225,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ selector. An implementation of `Source` will almost always delegates to a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67226,"byte_end":67303,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ lower level handle. Examples of this are [`TcpStream`]s, or the *unix only*","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67304,"byte_end":67383,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ [`SourceFd`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67384,"byte_end":67401,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67402,"byte_end":67405,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67406,"byte_end":67453,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ [`SourceFd`]: ../unix/struct.SourceFd.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67454,"byte_end":67500,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67501,"byte_end":67504,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Dropping `event::Source`s","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67505,"byte_end":67536,"line_start":27,"line_end":27,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67537,"byte_end":67540,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All `event::Source`s, unless otherwise specified, need to be [deregistered]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67541,"byte_end":67620,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ before being dropped for them to not leak resources. This goes against the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67621,"byte_end":67699,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ normal drop behaviour of types in Rust which cleanup after themselves, e.g.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67700,"byte_end":67779,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ a `File` will close itself. However since deregistering needs access to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67780,"byte_end":67855,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ [`Registry`] this cannot be done while being dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67856,"byte_end":67913,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67914,"byte_end":67917,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [deregistered]: ../struct.Registry.html#method.deregister","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67918,"byte_end":67979,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67980,"byte_end":67983,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67984,"byte_end":67998,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":67999,"byte_end":68002,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Implementing `Source` on a struct containing a socket:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68003,"byte_end":68061,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68062,"byte_end":68065,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ use mio::{Interest, Registry, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68215,"byte_end":68256,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ use mio::event::Source;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68257,"byte_end":68284,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68285,"byte_end":68313,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68314,"byte_end":68317,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68318,"byte_end":68334,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68335,"byte_end":68338,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68339,"byte_end":68364,"line_start":49,"line_end":49,"column_start":1,"column_end":26}},{"value":"/ pub struct MySource {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68365,"byte_end":68390,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     socket: TcpStream,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68391,"byte_end":68417,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68418,"byte_end":68423,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68424,"byte_end":68427,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Source for MySource {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68428,"byte_end":68458,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/     fn register(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68459,"byte_end":68545,"line_start":55,"line_end":55,"column_start":1,"column_end":87}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68546,"byte_end":68575,"line_start":56,"line_end":56,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68576,"byte_end":68585,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `register` call to `socket`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68586,"byte_end":68641,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/         self.socket.register(registry, token, interests)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68642,"byte_end":68702,"line_start":59,"line_end":59,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68703,"byte_end":68712,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68713,"byte_end":68716,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     fn reregister(&mut self, registry: &Registry, token: Token, interests: Interest)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68717,"byte_end":68805,"line_start":62,"line_end":62,"column_start":1,"column_end":89}},{"value":"/         -> io::Result<()>","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68806,"byte_end":68835,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/     {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68836,"byte_end":68845,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/         // Delegate the `reregister` call to `socket`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68846,"byte_end":68903,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         self.socket.reregister(registry, token, interests)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68904,"byte_end":68966,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68967,"byte_end":68976,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68977,"byte_end":68980,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     fn deregister(&mut self, registry: &Registry) -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":68981,"byte_end":69054,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/         // Delegate the `deregister` call to `socket`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69055,"byte_end":69112,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/         self.socket.deregister(registry)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69113,"byte_end":69157,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69158,"byte_end":69167,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69168,"byte_end":69173,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69174,"byte_end":69181,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69550,"byte_end":69558,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"register","qualname":"::event::source::Source::register","value":"pub fn register(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Register `self` with the given `Registry` instance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69205,"byte_end":69260,"line_start":76,"line_end":76,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69265,"byte_end":69268,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use [`Registry::register`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69273,"byte_end":69348,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ instead. Implementors should handle registration by delegating the call","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69353,"byte_end":69428,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to another `Source` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69433,"byte_end":69462,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69467,"byte_end":69470,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Registry::register`]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69475,"byte_end":69542,"line_start":82,"line_end":82,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70053,"byte_end":70063,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"reregister","qualname":"::event::source::Source::reregister","value":"pub fn reregister(&mut Self, &Registry, Token, Interest) -> io::Result<()>","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Re-register `self` with the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Re-register `self` with the given `Registry` instance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69689,"byte_end":69747,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69752,"byte_end":69755,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69760,"byte_end":69812,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ [`Registry::reregister`] instead. Implementors should handle","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69817,"byte_end":69881,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/ re-registration by either delegating the call to another `Source` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69886,"byte_end":69961,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69966,"byte_end":69969,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ [`Registry::reregister`]: ../struct.Registry.html#method.reregister","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":69974,"byte_end":70045,"line_start":96,"line_end":96,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70549,"byte_end":70559,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"deregister","qualname":"::event::source::Source::deregister","value":"pub fn deregister(&mut Self, &Registry) -> io::Result<()>","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Deregister `self` from the given `Registry` instance.","sig":null,"attributes":[{"value":"/ Deregister `self` from the given `Registry` instance.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70194,"byte_end":70251,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70256,"byte_end":70259,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This function should not be called directly. Use","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70264,"byte_end":70316,"line_start":106,"line_end":106,"column_start":5,"column_end":57}},{"value":"/ [`Registry::deregister`] instead. Implementors should handle","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70321,"byte_end":70385,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ deregistration by delegating the call to another `Source` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70390,"byte_end":70457,"line_start":108,"line_end":108,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70462,"byte_end":70465,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`Registry::deregister`]: ../struct.Registry.html#method.deregister","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70470,"byte_end":70541,"line_start":110,"line_end":110,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857}],"decl_id":null,"docs":" Networking primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/macros.rs","byte_start":10431,"byte_end":10454,"line_start":42,"line_end":42,"column_start":13,"column_end":36}},{"value":"/ Networking primitives.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921378,"byte_end":8921404,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921405,"byte_end":8921408,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The types provided in this module are non-blocking by default and are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921409,"byte_end":8921482,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ designed to be portable across all supported Mio platforms. As long as the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921483,"byte_end":8921561,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ [portability guidelines] are followed, the behavior should be identical no","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921562,"byte_end":8921640,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ matter the target platform.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921641,"byte_end":8921672,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921673,"byte_end":8921676,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [portability guidelines]: ../struct.Poll.html#portability","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/mod.rs","byte_start":8921677,"byte_end":8921738,"line_start":8,"line_end":8,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923277,"byte_end":8923288,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":1224}],"decl_id":null,"docs":" A structure representing a socket server","sig":null,"attributes":[{"value":"/ A structure representing a socket server","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922478,"byte_end":8922522,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922523,"byte_end":8922526,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922527,"byte_end":8922541,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922542,"byte_end":8922545,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922649,"byte_end":8922677,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922678,"byte_end":8922725,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922726,"byte_end":8922771,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922772,"byte_end":8922802,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922803,"byte_end":8922831,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922832,"byte_end":8922835,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut listener = TcpListener::bind(\"127.0.0.1:34255\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922836,"byte_end":8922906,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922907,"byte_end":8922910,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922911,"byte_end":8922943,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922944,"byte_end":8922992,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922993,"byte_end":8922996,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8922997,"byte_end":8923035,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut listener, Token(0), Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923036,"byte_end":8923111,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923112,"byte_end":8923115,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923116,"byte_end":8923178,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923179,"byte_end":8923182,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // There may be a socket ready to be accepted","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923183,"byte_end":8923232,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923233,"byte_end":8923249,"line_start":35,"line_end":35,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923250,"byte_end":8923257,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923258,"byte_end":8923265,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923782,"byte_end":8923786,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpListener>::bind","value":"pub fn bind(SocketAddr) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to bind a new TCP listener to the specified address\n to receive new connections.","sig":null,"attributes":[{"value":"/ Convenience method to bind a new TCP listener to the specified address","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923356,"byte_end":8923430,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ to receive new connections.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923435,"byte_end":8923466,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923471,"byte_end":8923474,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function will take the following steps:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923479,"byte_end":8923527,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923532,"byte_end":8923535,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ 1. Create a new TCP socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923540,"byte_end":8923571,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/ 2. Set the `SO_REUSEADDR` option on the socket on Unix.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923576,"byte_end":8923635,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/ 3. Bind the socket to the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923640,"byte_end":8923688,"line_start":50,"line_end":50,"column_start":5,"column_end":53}},{"value":"/ 4. Calls `listen` on the socket to prepare it to receive new connections.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923693,"byte_end":8923770,"line_start":51,"line_end":51,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8924838,"byte_end":8924846,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> TcpListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` from a standard `net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` from a standard `net::TcpListener`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8924488,"byte_end":8924555,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8924560,"byte_end":8924563,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8924568,"byte_end":8924640,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8924645,"byte_end":8924719,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; ; it is left up to the user to set it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8924724,"byte_end":8924796,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8924801,"byte_end":8924826,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925361,"byte_end":8925367,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"accept","qualname":"<TcpListener>::accept","value":"pub fn accept(&Self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new `TcpStream`.","sig":null,"attributes":[{"value":"/ Accepts a new `TcpStream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8924979,"byte_end":8925009,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925014,"byte_end":8925017,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This may return an `Err(e)` where `e.kind()` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925022,"byte_end":8925073,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ `io::ErrorKind::WouldBlock`. This means a stream may be ready at a later","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925078,"byte_end":8925154,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ point and one should wait for an event before calling `accept` again.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925159,"byte_end":8925232,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925237,"byte_end":8925240,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If an accepted stream is returned, the remote address of the peer is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925245,"byte_end":8925317,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned along with it.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925322,"byte_end":8925349,"line_start":88,"line_end":88,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925633,"byte_end":8925643,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925567,"byte_end":8925621,"line_start":95,"line_end":95,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925907,"byte_end":8925914,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925722,"byte_end":8925780,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925785,"byte_end":8925788,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925793,"byte_end":8925869,"line_start":102,"line_end":102,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925874,"byte_end":8925895,"line_start":103,"line_end":103,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926184,"byte_end":8926187,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8925995,"byte_end":8926053,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926058,"byte_end":8926061,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926066,"byte_end":8926132,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926137,"byte_end":8926140,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926145,"byte_end":8926172,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926505,"byte_end":8926515,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926252,"byte_end":8926310,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926315,"byte_end":8926318,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926323,"byte_end":8926397,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926402,"byte_end":8926478,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926483,"byte_end":8926493,"line_start":121,"line_end":121,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929241,"byte_end":8929250,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":1861}],"decl_id":null,"docs":" A non-blocking TCP socket used to configure a stream or listener.","sig":null,"attributes":[{"value":"/ A non-blocking TCP socket used to configure a stream or listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8928882,"byte_end":8928951,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8928952,"byte_end":8928955,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `TcpSocket` type wraps the operating-system's socket handle. This type","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8928956,"byte_end":8929034,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ is used to configure the socket before establishing a connection or start","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929035,"byte_end":8929112,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ listening for inbound connections.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929113,"byte_end":8929151,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929152,"byte_end":8929155,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929156,"byte_end":8929212,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929382,"byte_end":8929394,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"TcpKeepalive","qualname":"::net::tcp::socket::TcpKeepalive","value":"TcpKeepalive {  }","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867}],"decl_id":null,"docs":" Configures a socket's TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Configures a socket's TCP keepalive parameters.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929286,"byte_end":8929337,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929994,"byte_end":8930000,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv4 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv4 TCP socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929909,"byte_end":8929942,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929947,"byte_end":8929950,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929955,"byte_end":8929982,"line_start":51,"line_end":51,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930189,"byte_end":8930195,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new IPv6 TCP socket.","sig":null,"attributes":[{"value":"/ Create a new IPv6 TCP socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930104,"byte_end":8930137,"line_start":56,"line_end":56,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930142,"byte_end":8930145,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This calls `socket(2)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930150,"byte_end":8930177,"line_start":58,"line_end":58,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930547,"byte_end":8930551,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind `addr` to the TCP socket.\n","sig":null,"attributes":[{"value":"/ Bind `addr` to the TCP socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930501,"byte_end":8930535,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930886,"byte_end":8930893,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub fn connect(Self, SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Connect the socket to `addr`.","sig":null,"attributes":[{"value":"/ Connect the socket to `addr`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930647,"byte_end":8930680,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930685,"byte_end":8930688,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This consumes the socket and performs the connect operation. Once the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930693,"byte_end":8930766,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ connection completes, the socket is now a non-blocking `TcpStream` and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930771,"byte_end":8930845,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ can be used as such.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8930850,"byte_end":8930874,"line_start":80,"line_end":80,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931212,"byte_end":8931218,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Listen for inbound connections, converting the socket to a\n `TcpListener`.\n","sig":null,"attributes":[{"value":"/ Listen for inbound connections, converting the socket to a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931115,"byte_end":8931177,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/ `TcpListener`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931182,"byte_end":8931200,"line_start":90,"line_end":90,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931510,"byte_end":8931523,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_REUSEADDR` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_REUSEADDR` on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931446,"byte_end":8931498,"line_start":99,"line_end":99,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931699,"byte_end":8931712,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"get_reuseaddr","qualname":"<TcpSocket>::get_reuseaddr","value":"pub fn get_reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_REUSEADDR` set on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of `SO_REUSEADDR` set on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931632,"byte_end":8931687,"line_start":104,"line_end":104,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931978,"byte_end":8931991,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"set_reuseport","qualname":"<TcpSocket>::set_reuseport","value":"pub fn set_reuseport(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_REUSEPORT` on this socket.\n Only supported available in unix\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_REUSEPORT` on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931795,"byte_end":8931847,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/ Only supported available in unix","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931852,"byte_end":8931888,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"cfg(all(unix, not(any(target_os = \"solaris\", target_os = \"illumos\"))))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8931893,"byte_end":8931966,"line_start":111,"line_end":111,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932286,"byte_end":8932299,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"get_reuseport","qualname":"<TcpSocket>::get_reuseport","value":"pub fn get_reuseport(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_REUSEPORT` set on this socket.\n Only supported available in unix\n","sig":null,"attributes":[{"value":"/ Get the value of `SO_REUSEPORT` set on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932100,"byte_end":8932155,"line_start":116,"line_end":116,"column_start":5,"column_end":60}},{"value":"/ Only supported available in unix","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932160,"byte_end":8932196,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"cfg(all(unix, not(any(target_os = \"solaris\", target_os = \"illumos\"))))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932201,"byte_end":8932274,"line_start":118,"line_end":118,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932443,"byte_end":8932453,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpSocket>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_LINGER` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_LINGER` on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932382,"byte_end":8932431,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932619,"byte_end":8932629,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"get_linger","qualname":"<TcpSocket>::get_linger","value":"pub fn get_linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of `SO_LINGER` on this socket\n","sig":null,"attributes":[{"value":"/ Gets the value of `SO_LINGER` on this socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932559,"byte_end":8932607,"line_start":128,"line_end":128,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932782,"byte_end":8932802,"line_start":134,"line_end":134,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_RCVBUF` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_RCVBUF` on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932721,"byte_end":8932770,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934029,"byte_end":8934049,"line_start":158,"line_end":158,"column_start":12,"column_end":32},"name":"get_recv_buffer_size","qualname":"<TcpSocket>::get_recv_buffer_size","value":"pub fn get_recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_RCVBUF` set on this socket.","sig":null,"attributes":[{"value":"/ Get the value of `SO_RCVBUF` set on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932907,"byte_end":8932959,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932964,"byte_end":8932967,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8932972,"byte_end":8933044,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933049,"byte_end":8933123,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_recv_buffer_size`. This is for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933128,"byte_end":8933196,"line_start":142,"line_end":142,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933201,"byte_end":8933223,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933228,"byte_end":8933231,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933236,"byte_end":8933311,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933316,"byte_end":8933390,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933395,"byte_end":8933471,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933476,"byte_end":8933495,"line_start":148,"line_end":148,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933500,"byte_end":8933575,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933580,"byte_end":8933655,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933660,"byte_end":8933676,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket receive buffer in bytes. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933681,"byte_end":8933749,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933754,"byte_end":8933819,"line_start":153,"line_end":153,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933824,"byte_end":8933896,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933901,"byte_end":8933946,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933951,"byte_end":8933954,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8933959,"byte_end":8934017,"line_start":157,"line_end":157,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934199,"byte_end":8934219,"line_start":163,"line_end":163,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of `SO_SNDBUF` on this socket.\n","sig":null,"attributes":[{"value":"/ Sets the value of `SO_SNDBUF` on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934138,"byte_end":8934187,"line_start":162,"line_end":162,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935443,"byte_end":8935463,"line_start":187,"line_end":187,"column_start":12,"column_end":32},"name":"get_send_buffer_size","qualname":"<TcpSocket>::get_send_buffer_size","value":"pub fn get_send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of `SO_SNDBUF` set on this socket.","sig":null,"attributes":[{"value":"/ Get the value of `SO_SNDBUF` set on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934324,"byte_end":8934376,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934381,"byte_end":8934384,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934389,"byte_end":8934461,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934466,"byte_end":8934540,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934545,"byte_end":8934613,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934618,"byte_end":8934640,"line_start":172,"line_end":172,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934645,"byte_end":8934648,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934653,"byte_end":8934728,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934733,"byte_end":8934807,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934812,"byte_end":8934888,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934893,"byte_end":8934912,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934917,"byte_end":8934992,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8934997,"byte_end":8935072,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935077,"byte_end":8935093,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935098,"byte_end":8935163,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935168,"byte_end":8935233,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935238,"byte_end":8935310,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935315,"byte_end":8935360,"line_start":184,"line_end":184,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935365,"byte_end":8935368,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935373,"byte_end":8935431,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935710,"byte_end":8935723,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpSocket>::set_keepalive","value":"pub fn set_keepalive(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935552,"byte_end":8935626,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935631,"byte_end":8935634,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This will set the `SO_KEEPALIVE` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935639,"byte_end":8935698,"line_start":193,"line_end":193,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935920,"byte_end":8935933,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"get_keepalive","qualname":"<TcpSocket>::get_keepalive","value":"pub fn get_keepalive(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not TCP keepalive probes will be sent by this socket.\n","sig":null,"attributes":[{"value":"/ Returns whether or not TCP keepalive probes will be sent by this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8935832,"byte_end":8935908,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937729,"byte_end":8937749,"line_start":240,"line_end":240,"column_start":12,"column_end":32},"name":"set_keepalive_params","qualname":"<TcpSocket>::set_keepalive_params","value":"pub fn set_keepalive_params(&Self, TcpKeepalive) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets parameters configuring TCP keepalive probes for this socket.","sig":null,"attributes":[{"value":"/ Sets parameters configuring TCP keepalive probes for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936016,"byte_end":8936085,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936090,"byte_end":8936093,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The supported parameters depend on the operating system, and are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936098,"byte_end":8936166,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ configured using the [`TcpKeepalive`] struct. At a minimum, all systems","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936171,"byte_end":8936246,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ support configuring the [keepalive time]: the time after which the OS","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936251,"byte_end":8936324,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ will start sending keepalive messages on an idle connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936329,"byte_end":8936393,"line_start":208,"line_end":208,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936398,"byte_end":8936401,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936406,"byte_end":8936417,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936422,"byte_end":8936425,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ * This will enable TCP keepalive on this socket, if it is not already","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936430,"byte_end":8936503,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/   enabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936508,"byte_end":8936522,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/ * On some platforms, such as Windows, any keepalive parameters *not*","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936527,"byte_end":8936599,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/   configured by the `TcpKeepalive` struct passed to this function may be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936604,"byte_end":8936680,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/   overwritten with their default values. Therefore, this function should","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936685,"byte_end":8936761,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/   either only be called once per socket, or the same parameters should","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936766,"byte_end":8936840,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/   be passed every time it is called.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936845,"byte_end":8936885,"line_start":218,"line_end":218,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936890,"byte_end":8936893,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8936898,"byte_end":8936912,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/ use mio::net::{TcpSocket, TcpKeepalive};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937028,"byte_end":8937072,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937077,"byte_end":8937105,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937110,"byte_end":8937113,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937118,"byte_end":8937165,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/ let socket = TcpSocket::new_v6()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937170,"byte_end":8937208,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/ let keepalive = TcpKeepalive::default()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937213,"byte_end":8937256,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     .with_time(Duration::from_secs(4));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937261,"byte_end":8937304,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/     // Depending on the target operating system, we may also be able to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937309,"byte_end":8937384,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/     // configure the keepalive probe interval and/or the number of retries","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937389,"byte_end":8937467,"line_start":231,"line_end":231,"column_start":5,"column_end":83}},{"value":"/     // here as well.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937472,"byte_end":8937496,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937501,"byte_end":8937504,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ socket.set_keepalive_params(keepalive)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937509,"byte_end":8937553,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937558,"byte_end":8937572,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937577,"byte_end":8937584,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937589,"byte_end":8937592,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`TcpKeepalive`]: ../struct.TcpKeepalive.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937597,"byte_end":8937646,"line_start":238,"line_end":238,"column_start":5,"column_end":54}},{"value":"/ [keepalive time]: ../struct.TcpKeepalive.html#method.with_time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937651,"byte_end":8937717,"line_start":239,"line_end":239,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938629,"byte_end":8938647,"line_start":259,"line_end":259,"column_start":12,"column_end":30},"name":"get_keepalive_time","qualname":"<TcpSocket>::get_keepalive_time","value":"pub fn get_keepalive_time(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time after which TCP keepalive probes will be sent\n on idle connections.","sig":null,"attributes":[{"value":"/ Returns the amount of time after which TCP keepalive probes will be sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937908,"byte_end":8937984,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ on idle connections.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8937989,"byte_end":8938013,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938018,"byte_end":8938021,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ If `None`, then keepalive messages are disabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938026,"byte_end":8938078,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938083,"byte_end":8938086,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This returns the value of `SO_KEEPALIVE` + `IPPROTO_TCP` on OpenBSD,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938091,"byte_end":8938163,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ NetBSD, and Haiku, `TCP_KEEPALIVE` on macOS and iOS, and `TCP_KEEPIDLE`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938168,"byte_end":8938243,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ on all other Unix operating systems. On Windows, it is not possible to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938248,"byte_end":8938322,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ access the value of TCP keepalive parameters after they have been set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938327,"byte_end":8938401,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938406,"byte_end":8938409,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938414,"byte_end":8938477,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938482,"byte_end":8938516,"line_start":256,"line_end":256,"column_start":5,"column_end":39}},{"value":"cfg(not(target_os = \"windows\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938583,"byte_end":8938617,"line_start":258,"line_end":258,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939674,"byte_end":8939696,"line_start":291,"line_end":291,"column_start":12,"column_end":34},"name":"get_keepalive_interval","qualname":"<TcpSocket>::get_keepalive_interval","value":"pub fn get_keepalive_interval(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the time interval between TCP keepalive probes, if TCP keepalive is\n enabled on this socket.","sig":null,"attributes":[{"value":"/ Returns the time interval between TCP keepalive probes, if TCP keepalive is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938747,"byte_end":8938826,"line_start":263,"line_end":263,"column_start":5,"column_end":84}},{"value":"/ enabled on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938831,"byte_end":8938858,"line_start":264,"line_end":264,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938863,"byte_end":8938866,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ If `None`, then keepalive messages are disabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938871,"byte_end":8938923,"line_start":266,"line_end":266,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938928,"byte_end":8938931,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This returns the value of `TCP_KEEPINTVL` on supported Unix operating","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8938936,"byte_end":8939009,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ systems. On Windows, it is not possible to access the value of TCP","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939014,"byte_end":8939084,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ keepalive parameters after they have been set..","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939089,"byte_end":8939140,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939145,"byte_end":8939148,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939153,"byte_end":8939216,"line_start":272,"line_end":272,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939221,"byte_end":8939255,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\",))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939498,"byte_end":8939662,"line_start":284,"line_end":290,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940667,"byte_end":8940688,"line_start":320,"line_end":320,"column_start":12,"column_end":33},"name":"get_keepalive_retries","qualname":"<TcpSocket>::get_keepalive_retries","value":"pub fn get_keepalive_retries(&Self) -> io::Result<Option<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of TCP keepalive probes that will be sent before\n dropping a connection, if TCP keepalive is enabled on this socket.","sig":null,"attributes":[{"value":"/ Returns the maximum number of TCP keepalive probes that will be sent before","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939800,"byte_end":8939879,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ dropping a connection, if TCP keepalive is enabled on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939884,"byte_end":8939954,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939959,"byte_end":8939962,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `None`, then keepalive messages are disabled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8939967,"byte_end":8940019,"line_start":298,"line_end":298,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940024,"byte_end":8940027,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This returns the value of `TCP_KEEPCNT` on Unix operating systems that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940032,"byte_end":8940106,"line_start":300,"line_end":300,"column_start":5,"column_end":79}},{"value":"/ support this option. On Windows, it is not possible to access the value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940111,"byte_end":8940186,"line_start":301,"line_end":301,"column_start":5,"column_end":80}},{"value":"/ of TCP keepalive parameters after they have been set.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940191,"byte_end":8940248,"line_start":302,"line_end":302,"column_start":5,"column_end":62}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\",))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940491,"byte_end":8940655,"line_start":313,"line_end":319,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940926,"byte_end":8940939,"line_start":327,"line_end":327,"column_start":12,"column_end":25},"name":"get_localaddr","qualname":"<TcpSocket>::get_localaddr","value":"pub fn get_localaddr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of this socket","sig":null,"attributes":[{"value":"/ Returns the local address of this socket","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940786,"byte_end":8940830,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940835,"byte_end":8940838,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` result in windows if called before calling `bind`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8940843,"byte_end":8940914,"line_start":326,"line_end":326,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943276,"byte_end":8943285,"line_start":417,"line_end":417,"column_start":12,"column_end":21},"name":"with_time","qualname":"<TcpKeepalive>::with_time","value":"pub fn with_time(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" on idle connections.","sig":null,"attributes":[{"value":"/ on idle connections.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8942819,"byte_end":8942843,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8942848,"byte_end":8942851,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This will set the value of `SO_KEEPALIVE` + `IPPROTO_TCP` on OpenBSD,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8942856,"byte_end":8942929,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ NetBSD, and Haiku, `TCP_KEEPALIVE` on macOS and iOS, and `TCP_KEEPIDLE`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8942934,"byte_end":8943009,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ on all other Unix operating systems. On Windows, this sets the value of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943014,"byte_end":8943089,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ the `tcp_keepalive` struct's `keepalivetime` field.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943094,"byte_end":8943149,"line_start":413,"line_end":413,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943154,"byte_end":8943157,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943162,"byte_end":8943225,"line_start":415,"line_end":415,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943230,"byte_end":8943264,"line_start":416,"line_end":416,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8944248,"byte_end":8944261,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"with_interval","qualname":"<TcpKeepalive>::with_interval","value":"pub fn with_interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the time interval between TCP keepalive probes.\n This sets the value of `TCP_KEEPINTVL` on supported Unix operating\n systems. On Windows, this sets the value of the `tcp_keepalive` struct's\n `keepaliveinterval` field.","sig":null,"attributes":[{"value":"/ Sets the time interval between TCP keepalive probes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943403,"byte_end":8943459,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/ This sets the value of `TCP_KEEPINTVL` on supported Unix operating","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943464,"byte_end":8943534,"line_start":425,"line_end":425,"column_start":5,"column_end":75}},{"value":"/ systems. On Windows, this sets the value of the `tcp_keepalive` struct's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943539,"byte_end":8943615,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ `keepaliveinterval` field.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943620,"byte_end":8943650,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943655,"byte_end":8943658,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943663,"byte_end":8943726,"line_start":429,"line_end":429,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8943731,"byte_end":8943765,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\", target_os =\n          \"windows\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8944042,"byte_end":8944236,"line_start":442,"line_end":449,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8945078,"byte_end":8945090,"line_start":479,"line_end":479,"column_start":12,"column_end":24},"name":"with_retries","qualname":"<TcpKeepalive>::with_retries","value":"pub fn with_retries(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of TCP keepalive probes that will be sent before\n dropping a connection, if TCP keepalive is enabled on this socket.","sig":null,"attributes":[{"value":"/ Sets the maximum number of TCP keepalive probes that will be sent before","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8944391,"byte_end":8944467,"line_start":457,"line_end":457,"column_start":5,"column_end":81}},{"value":"/ dropping a connection, if TCP keepalive is enabled on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8944472,"byte_end":8944542,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8944547,"byte_end":8944550,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This will set the value of `TCP_KEEPCNT` on Unix operating systems that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8944555,"byte_end":8944630,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ support this option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8944635,"byte_end":8944659,"line_start":461,"line_end":461,"column_start":5,"column_end":29}},{"value":"cfg(any(target_os = \"linux\", target_os = \"macos\", target_os = \"ios\",\n          target_os = \"freebsd\", target_os = \"netbsd\",))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8944902,"byte_end":8945066,"line_start":472,"line_end":478,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8945281,"byte_end":8945284,"line_start":487,"line_end":487,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpKeepalive>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new, empty set of TCP keepalive parameters.\n","sig":null,"attributes":[{"value":"/ Returns a new, empty set of TCP keepalive parameters.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8945212,"byte_end":8945269,"line_start":486,"line_end":486,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946757,"byte_end":8946766,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1395}],"decl_id":null,"docs":" A non-blocking TCP stream between a local socket and a remote socket.","sig":null,"attributes":[{"value":"/ A non-blocking TCP stream between a local socket and a remote socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8945725,"byte_end":8945798,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8945799,"byte_end":8945802,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8945803,"byte_end":8945859,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8945860,"byte_end":8945863,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8945864,"byte_end":8945878,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8945879,"byte_end":8945882,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # use std::net::{TcpListener, SocketAddr};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8945986,"byte_end":8946032,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946033,"byte_end":8946061,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946062,"byte_end":8946067,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946068,"byte_end":8946115,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/ let address: SocketAddr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946116,"byte_end":8946169,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/ let listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946170,"byte_end":8946217,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946218,"byte_end":8946263,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ use mio::net::TcpStream;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946264,"byte_end":8946292,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946293,"byte_end":8946321,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946322,"byte_end":8946325,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(listener.local_addr()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946326,"byte_end":8946391,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946392,"byte_end":8946395,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946396,"byte_end":8946428,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946429,"byte_end":8946477,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946478,"byte_end":8946481,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Register the socket with `Poll`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946482,"byte_end":8946520,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ poll.registry().register(&mut stream, Token(0), Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946521,"byte_end":8946594,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946595,"byte_end":8946598,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946599,"byte_end":8946661,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946662,"byte_end":8946665,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // The socket might be ready at this point","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946666,"byte_end":8946712,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ #     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946713,"byte_end":8946729,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946730,"byte_end":8946737,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946738,"byte_end":8946745,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946936,"byte_end":8946943,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpStream>::connect","value":"pub fn connect(SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TCP stream and issue a non-blocking connect to the\n specified address.\n","sig":null,"attributes":[{"value":"/ Create a new TCP stream and issue a non-blocking connect to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946830,"byte_end":8946897,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946902,"byte_end":8946924,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947633,"byte_end":8947641,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> TcpStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpStream` from a standard `net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates a new `TcpStream` from a standard `net::TcpStream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947082,"byte_end":8947145,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947150,"byte_end":8947153,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947158,"byte_end":8947228,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947233,"byte_end":8947307,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947312,"byte_end":8947383,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947388,"byte_end":8947410,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947415,"byte_end":8947418,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947423,"byte_end":8947433,"line_start":64,"line_end":64,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947438,"byte_end":8947441,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The TCP stream here will not have `connect` called on it, so it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947446,"byte_end":8947513,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947518,"byte_end":8947590,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947595,"byte_end":8947621,"line_start":68,"line_end":68,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947849,"byte_end":8947858,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote peer of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote peer of this TCP connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947764,"byte_end":8947837,"line_start":75,"line_end":75,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948020,"byte_end":8948030,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this TCP connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this TCP connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8947936,"byte_end":8948008,"line_start":80,"line_end":80,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948384,"byte_end":8948392,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948109,"byte_end":8948175,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948180,"byte_end":8948183,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948188,"byte_end":8948260,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948265,"byte_end":8948334,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948339,"byte_end":8948372,"line_start":89,"line_end":89,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949134,"byte_end":8949145,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948479,"byte_end":8948541,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948546,"byte_end":8948549,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948554,"byte_end":8948623,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948628,"byte_end":8948701,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948706,"byte_end":8948779,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948784,"byte_end":8948859,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948864,"byte_end":8948882,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948887,"byte_end":8948890,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948895,"byte_end":8948906,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948911,"byte_end":8948914,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8948919,"byte_end":8948995,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `nodelay` on an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949000,"byte_end":8949067,"line_start":105,"line_end":105,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949072,"byte_end":8949122,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949680,"byte_end":8949687,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949239,"byte_end":8949301,"line_start":111,"line_end":111,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949306,"byte_end":8949309,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949314,"byte_end":8949384,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949389,"byte_end":8949392,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_nodelay","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949397,"byte_end":8949428,"line_start":115,"line_end":115,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949433,"byte_end":8949436,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949441,"byte_end":8949452,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949457,"byte_end":8949460,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949465,"byte_end":8949541,"line_start":119,"line_end":119,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `nodelay` on an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949546,"byte_end":8949613,"line_start":120,"line_end":120,"column_start":5,"column_end":72}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949618,"byte_end":8949668,"line_start":121,"line_end":121,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950178,"byte_end":8950185,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949757,"byte_end":8949815,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949820,"byte_end":8949823,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949828,"byte_end":8949904,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949909,"byte_end":8949930,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949935,"byte_end":8949938,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949943,"byte_end":8949954,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949959,"byte_end":8949962,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8949967,"byte_end":8950043,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to set `ttl` on an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950048,"byte_end":8950111,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950116,"byte_end":8950166,"line_start":135,"line_end":135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950691,"byte_end":8950694,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950266,"byte_end":8950324,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950329,"byte_end":8950332,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950337,"byte_end":8950403,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950408,"byte_end":8950411,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950416,"byte_end":8950427,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950432,"byte_end":8950435,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ On Windows make sure the stream is connected before calling this method,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950440,"byte_end":8950516,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ by receiving an (writable) event. Trying to get `ttl` on an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950521,"byte_end":8950584,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/ unconnected `TcpStream` is undefined behavior.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950589,"byte_end":8950639,"line_start":148,"line_end":148,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950644,"byte_end":8950647,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950652,"byte_end":8950679,"line_start":150,"line_end":150,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951012,"byte_end":8951022,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950759,"byte_end":8950817,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950822,"byte_end":8950825,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950830,"byte_end":8950904,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950909,"byte_end":8950985,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8950990,"byte_end":8951000,"line_start":159,"line_end":159,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951460,"byte_end":8951464,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"peek","qualname":"<TcpStream>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951108,"byte_end":8951178,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951183,"byte_end":8951252,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951257,"byte_end":8951296,"line_start":166,"line_end":166,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951301,"byte_end":8951304,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951309,"byte_end":8951383,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951388,"byte_end":8951448,"line_start":169,"line_end":169,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1514},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958285,"byte_end":8958294,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":1515}],"decl_id":null,"docs":" A User Datagram Protocol socket.","sig":null,"attributes":[{"value":"/ A User Datagram Protocol socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8955647,"byte_end":8955683,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8955684,"byte_end":8955687,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is an implementation of a bound UDP socket. This supports both IPv4 and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8955688,"byte_end":8955768,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ IPv6 addresses, and there is no corresponding notion of a server because UDP","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8955769,"byte_end":8955849,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ is a datagram protocol.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8955850,"byte_end":8955877,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8955878,"byte_end":8955881,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8955882,"byte_end":8955896,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8955897,"byte_end":8955900,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956004,"byte_end":8956032,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956033,"byte_end":8956038,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956039,"byte_end":8956086,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ // An Echo program:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956087,"byte_end":8956110,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ // SENDER -> sends a message.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956111,"byte_end":8956144,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ // ECHOER -> listens and prints the message received.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956145,"byte_end":8956202,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956203,"byte_end":8956206,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956207,"byte_end":8956235,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ use mio::{Events, Interest, Poll, Token};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956236,"byte_end":8956281,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956282,"byte_end":8956310,"line_start":41,"line_end":41,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956311,"byte_end":8956314,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const SENDER: Token = Token(0);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956315,"byte_end":8956350,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ const ECHOER: Token = Token(1);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956351,"byte_end":8956386,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956387,"byte_end":8956390,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This operation will fail if the address is in use, so we select different ports for each","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956391,"byte_end":8956486,"line_start":46,"line_end":46,"column_start":1,"column_end":96}},{"value":"/ // socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956487,"byte_end":8956501,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ let mut sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956502,"byte_end":8956571,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ let mut echoer_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956572,"byte_end":8956641,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956642,"byte_end":8956645,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // If we do not use connect here, SENDER and ECHOER would need to call send_to and recv_from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956646,"byte_end":8956742,"line_start":51,"line_end":51,"column_start":1,"column_end":97}},{"value":"/ // respectively.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956743,"byte_end":8956763,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/ sender_socket.connect(echoer_socket.local_addr()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956764,"byte_end":8956820,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956821,"byte_end":8956824,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // We need a Poll to check if SENDER is ready to be written into, and if ECHOER is ready to be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956825,"byte_end":8956923,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ // read from.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956924,"byte_end":8956941,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956942,"byte_end":8956974,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956975,"byte_end":8956978,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // We register our sockets here so that we can check if they are ready to be written/read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8956979,"byte_end":8957073,"line_start":59,"line_end":59,"column_start":1,"column_end":95}},{"value":"/ poll.registry().register(&mut sender_socket, SENDER, Interest::WRITABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957074,"byte_end":8957152,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ poll.registry().register(&mut echoer_socket, ECHOER, Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957153,"byte_end":8957231,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957232,"byte_end":8957235,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ let msg_to_send = [9; 9];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957236,"byte_end":8957265,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"/ let mut buffer = [0; 9];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957266,"byte_end":8957294,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957295,"byte_end":8957298,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957299,"byte_end":8957347,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957348,"byte_end":8957358,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957359,"byte_end":8957425,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957426,"byte_end":8957462,"line_start":69,"line_end":69,"column_start":1,"column_end":37}},{"value":"/         match event.token() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957463,"byte_end":8957496,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/             // Our SENDER is ready to be written into.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957497,"byte_end":8957555,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/             SENDER => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957556,"byte_end":8957583,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/                 let bytes_sent = sender_socket.send(&msg_to_send)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957584,"byte_end":8957655,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/                 assert_eq!(bytes_sent, 9);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957656,"byte_end":8957702,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/                 println!(\"sent {:?} -> {:?} bytes\", msg_to_send, bytes_sent);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957703,"byte_end":8957784,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/             },","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957785,"byte_end":8957803,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/             // Our ECHOER is ready to be read from.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957804,"byte_end":8957859,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/             ECHOER => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957860,"byte_end":8957887,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/                 let num_recv = echoer_socket.recv(&mut buffer)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957888,"byte_end":8957956,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/                 println!(\"echo {:?} -> {:?}\", buffer, num_recv);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8957957,"byte_end":8958025,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/                 buffer = [0; 9];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958026,"byte_end":8958062,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 # drop(buffer); // Silence unused assignment warning.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958063,"byte_end":8958136,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/                 # return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958137,"byte_end":8958173,"line_start":83,"line_end":83,"column_start":1,"column_end":37}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958174,"byte_end":8958191,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/             _ => unreachable!()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958192,"byte_end":8958227,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958228,"byte_end":8958241,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958242,"byte_end":8958251,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958252,"byte_end":8958257,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958258,"byte_end":8958265,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958266,"byte_end":8958273,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959268,"byte_end":8959272,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub fn bind(SocketAddr) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958358,"byte_end":8958406,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958411,"byte_end":8958414,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958419,"byte_end":8958433,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958438,"byte_end":8958441,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958557,"byte_end":8958585,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958590,"byte_end":8958595,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958600,"byte_end":8958647,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958652,"byte_end":8958680,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958685,"byte_end":8958688,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // We must bind it to an open address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958693,"byte_end":8958735,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ let socket = match UdpSocket::bind(\"127.0.0.1:0\".parse()?) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958740,"byte_end":8958804,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/     Ok(new_socket) => new_socket,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958809,"byte_end":8958846,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/     Err(fail) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958851,"byte_end":8958873,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/         // We panic! here, but you could try to bind it again on another address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958878,"byte_end":8958963,"line_start":111,"line_end":111,"column_start":5,"column_end":90}},{"value":"/         panic!(\"Failed to bind socket. {:?}\", fail);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958968,"byte_end":8959024,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959029,"byte_end":8959038,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"/ };","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959043,"byte_end":8959049,"line_start":114,"line_end":114,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959054,"byte_end":8959057,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // Our socket was created, but we should not use it before checking it's readiness.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959062,"byte_end":8959149,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ #    drop(socket); // Silence unused variable warning.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959154,"byte_end":8959212,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959217,"byte_end":8959232,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959237,"byte_end":8959244,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959249,"byte_end":8959256,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959723,"byte_end":8959731,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> UdpSocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from a standard `net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from a standard `net::UdpSocket`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959383,"byte_end":8959446,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959451,"byte_end":8959454,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959459,"byte_end":8959529,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959534,"byte_end":8959608,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959613,"byte_end":8959684,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959689,"byte_end":8959711,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960685,"byte_end":8960695,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address that this socket was created from.","sig":null,"attributes":[{"value":"/ Returns the socket address that this socket was created from.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959854,"byte_end":8959919,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959924,"byte_end":8959927,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959932,"byte_end":8959946,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8959951,"byte_end":8959954,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960352,"byte_end":8960380,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960385,"byte_end":8960390,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960395,"byte_end":8960442,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960447,"byte_end":8960475,"line_start":152,"line_end":152,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960480,"byte_end":8960483,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:0\".parse()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960488,"byte_end":8960526,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ let socket = UdpSocket::bind(addr)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960531,"byte_end":8960571,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(socket.local_addr()?.ip(), addr.ip());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960576,"byte_end":8960629,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960634,"byte_end":8960649,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960654,"byte_end":8960661,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960666,"byte_end":8960673,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961577,"byte_end":8961584,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub fn send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960774,"byte_end":8960848,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960853,"byte_end":8960881,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960886,"byte_end":8960889,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of `ToSocketAddrs` trait. See its","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960894,"byte_end":8960967,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8960972,"byte_end":8961012,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961017,"byte_end":8961020,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961025,"byte_end":8961039,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961044,"byte_end":8961047,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961052,"byte_end":8961065,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961070,"byte_end":8961098,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961103,"byte_end":8961150,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961155,"byte_end":8961183,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961188,"byte_end":8961191,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961196,"byte_end":8961254,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961259,"byte_end":8961262,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is writable before calling send_to,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961267,"byte_end":8961337,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961342,"byte_end":8961389,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961394,"byte_end":8961397,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let bytes_sent = socket.send_to(&[9; 9], \"127.0.0.1:11100\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961402,"byte_end":8961476,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(bytes_sent, 9);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961481,"byte_end":8961511,"line_start":183,"line_end":183,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961516,"byte_end":8961521,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961526,"byte_end":8961541,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961546,"byte_end":8961553,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961558,"byte_end":8961565,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962885,"byte_end":8962894,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket. On success, returns the number of bytes\n read and the address from whence the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket. On success, returns the number of bytes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961719,"byte_end":8961793,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ read and the address from whence the data came.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961798,"byte_end":8961849,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961854,"byte_end":8961857,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961862,"byte_end":8961873,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961878,"byte_end":8961881,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961886,"byte_end":8961961,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv_from returns the error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8961966,"byte_end":8962044,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962049,"byte_end":8962097,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962102,"byte_end":8962169,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962174,"byte_end":8962242,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962247,"byte_end":8962250,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962255,"byte_end":8962269,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962274,"byte_end":8962277,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962282,"byte_end":8962295,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962300,"byte_end":8962328,"line_start":206,"line_end":206,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962333,"byte_end":8962338,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962343,"byte_end":8962390,"line_start":208,"line_end":208,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962395,"byte_end":8962423,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962428,"byte_end":8962431,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962436,"byte_end":8962494,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962499,"byte_end":8962502,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962507,"byte_end":8962579,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962584,"byte_end":8962631,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962636,"byte_end":8962639,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962644,"byte_end":8962669,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.recv_from(&mut buf)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962674,"byte_end":8962734,"line_start":217,"line_end":217,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962739,"byte_end":8962819,"line_start":218,"line_end":218,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962824,"byte_end":8962829,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962834,"byte_end":8962849,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962854,"byte_end":8962861,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8962866,"byte_end":8962873,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964237,"byte_end":8964246,"line_start":259,"line_end":259,"column_start":12,"column_end":21},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub fn peek_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963021,"byte_end":8963097,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963102,"byte_end":8963178,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963183,"byte_end":8963201,"line_start":229,"line_end":229,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963206,"byte_end":8963209,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963214,"byte_end":8963225,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963230,"byte_end":8963233,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963238,"byte_end":8963313,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963318,"byte_end":8963396,"line_start":234,"line_end":234,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963401,"byte_end":8963449,"line_start":235,"line_end":235,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963454,"byte_end":8963521,"line_start":236,"line_end":236,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963526,"byte_end":8963594,"line_start":237,"line_end":237,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963599,"byte_end":8963602,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963607,"byte_end":8963621,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963626,"byte_end":8963629,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963634,"byte_end":8963647,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963652,"byte_end":8963680,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963685,"byte_end":8963690,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963695,"byte_end":8963742,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963747,"byte_end":8963775,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963780,"byte_end":8963783,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963788,"byte_end":8963846,"line_start":247,"line_end":247,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963851,"byte_end":8963854,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // We must check if the socket is readable before calling recv_from,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963859,"byte_end":8963931,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ // or we could run into a WouldBlock error.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963936,"byte_end":8963983,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963988,"byte_end":8963991,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [0; 9];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8963996,"byte_end":8964021,"line_start":252,"line_end":252,"column_start":5,"column_end":30}},{"value":"/ let (num_recv, from_addr) = socket.peek_from(&mut buf)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964026,"byte_end":8964086,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/ println!(\"Received {:?} -> {:?} bytes from {:?}\", buf, num_recv, from_addr);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964091,"byte_end":8964171,"line_start":254,"line_end":254,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964176,"byte_end":8964181,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964186,"byte_end":8964201,"line_start":256,"line_end":256,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964206,"byte_end":8964213,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964218,"byte_end":8964225,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964517,"byte_end":8964521,"line_start":265,"line_end":265,"column_start":12,"column_end":16},"name":"send","qualname":"<UdpSocket>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the address previously bound via connect(). On success,\n returns the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the address previously bound via connect(). On success,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964373,"byte_end":8964460,"line_start":263,"line_end":263,"column_start":5,"column_end":92}},{"value":"/ returns the number of bytes written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964465,"byte_end":8964505,"line_start":264,"line_end":264,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965145,"byte_end":8965149,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket previously bound with connect(). On success, returns\n the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket previously bound with connect(). On success, returns","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964625,"byte_end":8964711,"line_start":269,"line_end":269,"column_start":5,"column_end":91}},{"value":"/ the number of bytes read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964716,"byte_end":8964745,"line_start":270,"line_end":270,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964750,"byte_end":8964753,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964758,"byte_end":8964769,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964774,"byte_end":8964777,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964782,"byte_end":8964857,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and recv returns the error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964862,"byte_end":8964935,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964940,"byte_end":8964988,"line_start":276,"line_end":276,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8964993,"byte_end":8965060,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965065,"byte_end":8965133,"line_start":278,"line_end":278,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965787,"byte_end":8965791,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"peek","qualname":"<UdpSocket>::peek","value":"pub fn peek(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965257,"byte_end":8965333,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965338,"byte_end":8965387,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965392,"byte_end":8965395,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965400,"byte_end":8965411,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965416,"byte_end":8965419,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965424,"byte_end":8965499,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965504,"byte_end":8965577,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965582,"byte_end":8965630,"line_start":290,"line_end":290,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965635,"byte_end":8965702,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965707,"byte_end":8965775,"line_start":292,"line_end":292,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966083,"byte_end":8966090,"line_start":300,"line_end":300,"column_start":12,"column_end":19},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub fn connect(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for `send()`\n and limiting packets that are read via `recv` from the address specified\n in `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for `send()`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965899,"byte_end":8965971,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ and limiting packets that are read via `recv` from the address specified","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8965976,"byte_end":8966052,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ in `addr`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966057,"byte_end":8966071,"line_start":299,"line_end":299,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966944,"byte_end":8966957,"line_start":328,"line_end":328,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966180,"byte_end":8966244,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966249,"byte_end":8966252,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966257,"byte_end":8966328,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966333,"byte_end":8966345,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966350,"byte_end":8966353,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966358,"byte_end":8966372,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966377,"byte_end":8966380,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966496,"byte_end":8966524,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966529,"byte_end":8966534,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966539,"byte_end":8966586,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966591,"byte_end":8966619,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966624,"byte_end":8966627,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966632,"byte_end":8966700,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ if broadcast_socket.broadcast()? == false {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966705,"byte_end":8966752,"line_start":319,"line_end":319,"column_start":5,"column_end":52}},{"value":"/     broadcast_socket.set_broadcast(true)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966757,"byte_end":8966803,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966808,"byte_end":8966813,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966818,"byte_end":8966821,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, true);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966826,"byte_end":8966878,"line_start":323,"line_end":323,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966883,"byte_end":8966888,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966893,"byte_end":8966908,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966913,"byte_end":8966920,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8966925,"byte_end":8966932,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967725,"byte_end":8967734,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967043,"byte_end":8967107,"line_start":332,"line_end":332,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967112,"byte_end":8967115,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967120,"byte_end":8967167,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"/ [`set_broadcast`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967172,"byte_end":8967200,"line_start":335,"line_end":335,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967205,"byte_end":8967208,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_broadcast","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967213,"byte_end":8967246,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967251,"byte_end":8967254,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967259,"byte_end":8967273,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967278,"byte_end":8967281,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967397,"byte_end":8967425,"line_start":343,"line_end":343,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967430,"byte_end":8967435,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967440,"byte_end":8967487,"line_start":345,"line_end":345,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967492,"byte_end":8967520,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967525,"byte_end":8967528,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let broadcast_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967533,"byte_end":8967601,"line_start":348,"line_end":348,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(broadcast_socket.broadcast()?, false);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967606,"byte_end":8967659,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967664,"byte_end":8967669,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967674,"byte_end":8967689,"line_start":351,"line_end":351,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967694,"byte_end":8967701,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967706,"byte_end":8967713,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968038,"byte_end":8968059,"line_start":362,"line_end":362,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967806,"byte_end":8967875,"line_start":358,"line_end":358,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967880,"byte_end":8967883,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967888,"byte_end":8967962,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8967967,"byte_end":8968026,"line_start":361,"line_end":361,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968389,"byte_end":8968406,"line_start":372,"line_end":372,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968153,"byte_end":8968222,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968227,"byte_end":8968230,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968235,"byte_end":8968282,"line_start":368,"line_end":368,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v4`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968287,"byte_end":8968323,"line_start":369,"line_end":369,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968328,"byte_end":8968331,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v4","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968336,"byte_end":8968377,"line_start":371,"line_end":371,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968867,"byte_end":8968887,"line_start":383,"line_end":383,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968486,"byte_end":8968554,"line_start":376,"line_end":376,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968559,"byte_end":8968562,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968567,"byte_end":8968637,"line_start":378,"line_end":378,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968642,"byte_end":8968716,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968721,"byte_end":8968783,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968788,"byte_end":8968791,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Note that this may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968796,"byte_end":8968855,"line_start":382,"line_end":382,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969214,"byte_end":8969230,"line_start":393,"line_end":393,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8968981,"byte_end":8969049,"line_start":387,"line_end":387,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969054,"byte_end":8969057,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969062,"byte_end":8969109,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_ttl_v4`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969114,"byte_end":8969149,"line_start":390,"line_end":390,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969154,"byte_end":8969157,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_ttl_v4","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969162,"byte_end":8969202,"line_start":392,"line_end":392,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969544,"byte_end":8969565,"line_start":401,"line_end":401,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969308,"byte_end":8969379,"line_start":397,"line_end":397,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969384,"byte_end":8969387,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969392,"byte_end":8969468,"line_start":399,"line_end":399,"column_start":5,"column_end":81}},{"value":"/ Note that this may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969473,"byte_end":8969532,"line_start":400,"line_end":400,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969897,"byte_end":8969914,"line_start":411,"line_end":411,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969659,"byte_end":8969730,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969735,"byte_end":8969738,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969743,"byte_end":8969790,"line_start":407,"line_end":407,"column_start":5,"column_end":52}},{"value":"/ [`set_multicast_loop_v6`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969795,"byte_end":8969831,"line_start":408,"line_end":408,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969836,"byte_end":8969839,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_multicast_loop_v6","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969844,"byte_end":8969885,"line_start":410,"line_end":410,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970703,"byte_end":8970710,"line_start":439,"line_end":439,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8969994,"byte_end":8970052,"line_start":415,"line_end":415,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970057,"byte_end":8970060,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970065,"byte_end":8970141,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970146,"byte_end":8970167,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970172,"byte_end":8970175,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970180,"byte_end":8970194,"line_start":420,"line_end":420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970199,"byte_end":8970202,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970318,"byte_end":8970346,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970351,"byte_end":8970356,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970361,"byte_end":8970408,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970413,"byte_end":8970441,"line_start":427,"line_end":427,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970446,"byte_end":8970449,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970454,"byte_end":8970512,"line_start":429,"line_end":429,"column_start":5,"column_end":63}},{"value":"/ if socket.ttl()? < 255 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970517,"byte_end":8970545,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/     socket.set_ttl(255)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970550,"byte_end":8970579,"line_start":431,"line_end":431,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970584,"byte_end":8970589,"line_start":432,"line_end":432,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970594,"byte_end":8970597,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970602,"byte_end":8970637,"line_start":434,"line_end":434,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970642,"byte_end":8970647,"line_start":435,"line_end":435,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970652,"byte_end":8970667,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970672,"byte_end":8970679,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970684,"byte_end":8970691,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971457,"byte_end":8971460,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970791,"byte_end":8970849,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970854,"byte_end":8970857,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970862,"byte_end":8970928,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970933,"byte_end":8970936,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.set_ttl","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970941,"byte_end":8970968,"line_start":447,"line_end":447,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970973,"byte_end":8970976,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8970981,"byte_end":8970995,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971000,"byte_end":8971003,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971119,"byte_end":8971147,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971152,"byte_end":8971157,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971162,"byte_end":8971209,"line_start":455,"line_end":455,"column_start":5,"column_end":52}},{"value":"/ use mio::net::UdpSocket;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971214,"byte_end":8971242,"line_start":456,"line_end":456,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971247,"byte_end":8971250,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971255,"byte_end":8971313,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ socket.set_ttl(255)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971318,"byte_end":8971343,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971348,"byte_end":8971351,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.ttl()?, 255);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971356,"byte_end":8971391,"line_start":461,"line_end":461,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971396,"byte_end":8971401,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ #    Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971406,"byte_end":8971421,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971426,"byte_end":8971433,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971438,"byte_end":8971445,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972004,"byte_end":8972021,"line_start":478,"line_end":478,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971525,"byte_end":8971583,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971588,"byte_end":8971591,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971596,"byte_end":8971670,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971675,"byte_end":8971748,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971753,"byte_end":8971825,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971830,"byte_end":8971900,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971905,"byte_end":8971943,"line_start":476,"line_end":476,"column_start":5,"column_end":43}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8971948,"byte_end":8971992,"line_start":477,"line_end":477,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972528,"byte_end":8972545,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972163,"byte_end":8972223,"line_start":482,"line_end":482,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972228,"byte_end":8972231,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972236,"byte_end":8972310,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972315,"byte_end":8972388,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972393,"byte_end":8972467,"line_start":486,"line_end":486,"column_start":5,"column_end":79}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972472,"byte_end":8972516,"line_start":487,"line_end":487,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972948,"byte_end":8972966,"line_start":499,"line_end":499,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, &Ipv4Addr, &Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972681,"byte_end":8972740,"line_start":492,"line_end":492,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972745,"byte_end":8972748,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972753,"byte_end":8972800,"line_start":494,"line_end":494,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v4`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972805,"byte_end":8972837,"line_start":495,"line_end":495,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972842,"byte_end":8972845,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v4","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972850,"byte_end":8972887,"line_start":497,"line_end":497,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8972892,"byte_end":8972936,"line_start":498,"line_end":498,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973378,"byte_end":8973396,"line_start":510,"line_end":510,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973109,"byte_end":8973170,"line_start":503,"line_end":503,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973175,"byte_end":8973178,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973183,"byte_end":8973230,"line_start":505,"line_end":505,"column_start":5,"column_end":52}},{"value":"/ [`join_multicast_v6`][link].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973235,"byte_end":8973267,"line_start":506,"line_end":506,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973272,"byte_end":8973275,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [link]: #method.join_multicast_v6","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973280,"byte_end":8973317,"line_start":508,"line_end":508,"column_start":5,"column_end":42}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973322,"byte_end":8973366,"line_start":509,"line_end":509,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973655,"byte_end":8973662,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpSocket>::only_v6","value":"pub fn only_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `IPV6_V6ONLY` option on this socket.\n","sig":null,"attributes":[{"value":"/ Get the value of the `IPV6_V6ONLY` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973533,"byte_end":8973594,"line_start":514,"line_end":514,"column_start":5,"column_end":66}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973599,"byte_end":8973643,"line_start":515,"line_end":515,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973995,"byte_end":8974005,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[{"value":"/ Get the value of the `SO_ERROR` option on this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973742,"byte_end":8973800,"line_start":520,"line_end":520,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973805,"byte_end":8973808,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This will retrieve the stored error in the underlying socket, clearing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973813,"byte_end":8973887,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ the field in the process. This can be useful for checking errors between","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973892,"byte_end":8973968,"line_start":523,"line_end":523,"column_start":5,"column_end":81}},{"value":"/ calls.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8973973,"byte_end":8973983,"line_start":524,"line_end":524,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976495,"byte_end":8976507,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::net::uds::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":1615}],"decl_id":null,"docs":" A Unix datagram socket.\n","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976456,"byte_end":8976483,"line_start":10,"line_end":10,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976648,"byte_end":8976652,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.\n","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976577,"byte_end":8976636,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977148,"byte_end":8977156,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> UnixDatagram","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` from a standard `net::UnixDatagram`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976795,"byte_end":8976864,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976869,"byte_end":8976872,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix datagram from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976877,"byte_end":8976950,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976955,"byte_end":8977029,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying datagram; ; it is left up to the user to set it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977034,"byte_end":8977106,"line_start":25,"line_end":25,"column_start":5,"column_end":77}},{"value":"/ in non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977111,"byte_end":8977136,"line_start":26,"line_end":26,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977349,"byte_end":8977356,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977288,"byte_end":8977337,"line_start":33,"line_end":33,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977534,"byte_end":8977541,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix Datagram socket which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a Unix Datagram socket which is not bound to any address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977453,"byte_end":8977522,"line_start":38,"line_end":38,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977711,"byte_end":8977715,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Create an unnamed pair of connected sockets.\n","sig":null,"attributes":[{"value":"/ Create an unnamed pair of connected sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977651,"byte_end":8977699,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978025,"byte_end":8978035,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.\n","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8977974,"byte_end":8978013,"line_start":53,"line_end":53,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978269,"byte_end":8978278,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978139,"byte_end":8978185,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978190,"byte_end":8978193,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978198,"byte_end":8978257,"line_start":60,"line_end":60,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978539,"byte_end":8978548,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub fn recv_from(&Self, &mut [u8]) -> io::Result<(usize, sys::SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978381,"byte_end":8978415,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978420,"byte_end":8978423,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978428,"byte_end":8978497,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ whence the data came.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978502,"byte_end":8978527,"line_start":68,"line_end":68,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978822,"byte_end":8978826,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub fn recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978714,"byte_end":8978748,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978753,"byte_end":8978756,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978761,"byte_end":8978810,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979065,"byte_end":8979072,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub fn send_to<P: AsRef<Path>>(&Self, &[u8], P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978934,"byte_end":8978988,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8978993,"byte_end":8978996,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979001,"byte_end":8979053,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979497,"byte_end":8979501,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"send","qualname":"<UnixDatagram>::send","value":"pub fn send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979210,"byte_end":8979260,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979265,"byte_end":8979268,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The peer address may be set by the `connect` method, and this method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979273,"byte_end":8979345,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ will return an error if the socket has not already been connected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979350,"byte_end":8979420,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979425,"byte_end":8979428,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979433,"byte_end":8979485,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979664,"byte_end":8979674,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979605,"byte_end":8979652,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980040,"byte_end":8980048,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979760,"byte_end":8979825,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979830,"byte_end":8979833,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979838,"byte_end":8979906,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979911,"byte_end":8979981,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8979986,"byte_end":8980028,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8981715,"byte_end":8981727,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::net::uds::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":1707}],"decl_id":null,"docs":" A non-blocking Unix domain socket server.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix domain socket server.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8981658,"byte_end":8981703,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8981872,"byte_end":8981876,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P: AsRef<Path>>(P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified socket.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8981797,"byte_end":8981860,"line_start":16,"line_end":16,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982370,"byte_end":8982378,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> UnixListener","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` from a standard `net::UnixListener`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` from a standard `net::UnixListener`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982019,"byte_end":8982088,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982093,"byte_end":8982096,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix listener from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982101,"byte_end":8982174,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982179,"byte_end":8982253,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982258,"byte_end":8982331,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982336,"byte_end":8982358,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982693,"byte_end":8982699,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"accept","qualname":"<UnixListener>::accept","value":"pub fn accept(&Self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982514,"byte_end":8982569,"line_start":33,"line_end":33,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982574,"byte_end":8982577,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The call is responsible for ensuring that the listening socket is in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982582,"byte_end":8982654,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982659,"byte_end":8982681,"line_start":36,"line_end":36,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982874,"byte_end":8982884,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982808,"byte_end":8982862,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983047,"byte_end":8983057,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8982988,"byte_end":8983035,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1791},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8984747,"byte_end":8984757,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::net::uds::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":1792}],"decl_id":null,"docs":" A non-blocking Unix stream socket.\n","sig":null,"attributes":[{"value":"/ A non-blocking Unix stream socket.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8984697,"byte_end":8984735,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8984878,"byte_end":8984885,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixStream>::connect","value":"pub fn connect<P: AsRef<Path>>(P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.\n","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8984823,"byte_end":8984866,"line_start":17,"line_end":17,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985580,"byte_end":8985588,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> UnixStream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixStream` from a standard `net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates a new `UnixStream` from a standard `net::UnixStream`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985025,"byte_end":8985090,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985095,"byte_end":8985098,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a Unix stream from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985103,"byte_end":8985174,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/ standard library in the Mio equivalent. The conversion assumes nothing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985179,"byte_end":8985253,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985258,"byte_end":8985329,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985334,"byte_end":8985356,"line_start":27,"line_end":27,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985361,"byte_end":8985364,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985369,"byte_end":8985379,"line_start":29,"line_end":29,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985384,"byte_end":8985387,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The Unix stream here will not have `connect` called on it, so it","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985392,"byte_end":8985460,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"/ should already be connected via some other means (be it manually, or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985465,"byte_end":8985537,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ the standard library).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985542,"byte_end":8985568,"line_start":33,"line_end":33,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985852,"byte_end":8985856,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985714,"byte_end":8985763,"line_start":40,"line_end":40,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985768,"byte_end":8985771,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Returns two `UnixStream`s which are connected to each other.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8985776,"byte_end":8985840,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986138,"byte_end":8986148,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986058,"byte_end":8986126,"line_start":49,"line_end":49,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986331,"byte_end":8986340,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<sys::SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986250,"byte_end":8986319,"line_start":54,"line_end":54,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986500,"byte_end":8986510,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986441,"byte_end":8986488,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986877,"byte_end":8986885,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986596,"byte_end":8986662,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986667,"byte_end":8986670,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986675,"byte_end":8986743,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986748,"byte_end":8986818,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986823,"byte_end":8986865,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":249},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1706,"byte_end":1710,"line_start":73,"line_end":73,"column_start":9,"column_end":13},"name":"unix","qualname":"::unix","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Unix only extensions.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"os-ext\"))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1599,"byte_end":1636,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ Unix only extensions.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1717,"byte_end":1742,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1756,"byte_end":1760,"line_start":76,"line_end":76,"column_start":13,"column_end":17},"name":"pipe","qualname":"::unix::pipe","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258}],"decl_id":null,"docs":" Unix pipe.","sig":null,"attributes":[{"value":"/ Unix pipe.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1771,"byte_end":1785,"line_start":77,"line_end":77,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1794,"byte_end":1797,"line_start":78,"line_end":78,"column_start":9,"column_end":12}},{"value":"/ See the [`new`] function for documentation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1806,"byte_end":1853,"line_start":79,"line_end":79,"column_start":9,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":264},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2173,"byte_end":2181,"line_start":95,"line_end":95,"column_start":9,"column_end":17},"name":"features","qualname":"::features","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Mio's optional features.","sig":null,"attributes":[{"value":"/ # Mio's optional features.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2188,"byte_end":2218,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2223,"byte_end":2226,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This document describes the available features in Mio.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2231,"byte_end":2289,"line_start":98,"line_end":98,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2294,"byte_end":2297,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2448,"byte_end":2451,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Mio by default provides only a shell implementation, that `panic!`s the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2456,"byte_end":2531,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ moment it is actually run. To run it requires OS support, this is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2536,"byte_end":2605,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ enabled by activating the `os-poll` feature.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2610,"byte_end":2658,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2663,"byte_end":2666,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This makes `Poll`, `Registry` and `Waker` functional.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2671,"byte_end":2728,"line_start":107,"line_end":107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2733,"byte_end":2736,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2883,"byte_end":2886,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ `os-ext` enables additional OS specific facilities. These facilities can","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2891,"byte_end":2967,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ be found in the `unix` and `windows` module.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":2972,"byte_end":3020,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3025,"byte_end":3028,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3179,"byte_end":3182,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The `net` feature enables networking primitives in the `net` module.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3187,"byte_end":3259,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":265},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3271,"byte_end":3276,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"guide","qualname":"::guide","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" # Getting started guide.","sig":null,"attributes":[{"value":"/ # Getting started guide.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3283,"byte_end":3311,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3316,"byte_end":3319,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ In this guide we'll do the following:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3324,"byte_end":3365,"line_start":124,"line_end":124,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3370,"byte_end":3373,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ 1. Create a [`Poll`] instance (and learn what it is).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3378,"byte_end":3435,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ 2. Register an [event source].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3440,"byte_end":3474,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/ 3. Create an event loop.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3479,"byte_end":3507,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3512,"byte_end":3515,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ At the end you'll have a very small (but quick) TCP server that accepts","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3520,"byte_end":3595,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ connections and then drops (disconnects) them.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3600,"byte_end":3650,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3655,"byte_end":3658,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ## 1. Creating a `Poll` instance","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3663,"byte_end":3699,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3704,"byte_end":3707,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Using Mio starts by creating a [`Poll`] instance, which monitors events","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3712,"byte_end":3787,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ from the OS and puts them into [`Events`]. This allows us to execute I/O","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3792,"byte_end":3868,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ operations based on what operations are ready.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3873,"byte_end":3923,"line_start":137,"line_end":137,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3928,"byte_end":3931,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Poll`]: ../struct.Poll.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3936,"byte_end":3969,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/ [`Events`]: ../event/struct.Events.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":3974,"byte_end":4017,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4022,"byte_end":4025,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # use mio::{Poll, Events};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4143,"byte_end":4173,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4178,"byte_end":4218,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"/ // `Poll` allows for polling of readiness events.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4223,"byte_end":4276,"line_start":146,"line_end":146,"column_start":5,"column_end":58}},{"value":"/ let poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4281,"byte_end":4309,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ // `Events` is collection of readiness `Event`s and can be filled by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4314,"byte_end":4386,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ // calling `Poll::poll`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4391,"byte_end":4419,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/ let events = Events::with_capacity(128);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4424,"byte_end":4468,"line_start":150,"line_end":150,"column_start":5,"column_end":49}},{"value":"/ # drop((poll, events));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4473,"byte_end":4500,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4505,"byte_end":4517,"line_start":152,"line_end":152,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4522,"byte_end":4529,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4534,"byte_end":4541,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4546,"byte_end":4549,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ For example if we're using a [`TcpListener`],  we'll only want to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4554,"byte_end":4623,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/ attempt to accept an incoming connection *iff* any connections are","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4628,"byte_end":4698,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ queued and ready to be accepted. We don't want to waste our time if no","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4703,"byte_end":4777,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ connections are ready.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4782,"byte_end":4808,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4813,"byte_end":4816,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener`]: ../net/struct.TcpListener.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4821,"byte_end":4872,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4877,"byte_end":4880,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ## 2. Registering event source","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4885,"byte_end":4919,"line_start":163,"line_end":163,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4924,"byte_end":4927,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance that monitors events from the OS","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":4932,"byte_end":5008,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ for us, we need to provide it with a source of events. This is done by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5013,"byte_end":5087,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ registering an [event source]. As the name “event source” suggests it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5092,"byte_end":5172,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ a source of events which can be polled using a `Poll` instance. On Unix","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5177,"byte_end":5252,"line_start":168,"line_end":168,"column_start":5,"column_end":80}},{"value":"/ systems this is usually a file descriptor, or a socket/handle on","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5257,"byte_end":5325,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ Windows.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5330,"byte_end":5342,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5347,"byte_end":5350,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ In the example below we'll use a [`TcpListener`] for which we'll receive","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5355,"byte_end":5431,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ an event (from [`Poll`]) once a connection is ready to be accepted.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5436,"byte_end":5507,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5512,"byte_end":5515,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [event source]: ../event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5520,"byte_end":5566,"line_start":175,"line_end":175,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5571,"byte_end":5574,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5738,"byte_end":5770,"line_start":179,"line_end":179,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5775,"byte_end":5814,"line_start":180,"line_end":180,"column_start":5,"column_end":44}},{"value":"/ # fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5819,"byte_end":5859,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ # let poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5864,"byte_end":5894,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5899,"byte_end":5950,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/ // Create a `TcpListener`, binding it to `address`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":5955,"byte_end":6010,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6015,"byte_end":6066,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6071,"byte_end":6074,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ // Next we register it with `Poll` to receive events for it. The `SERVER`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6079,"byte_end":6156,"line_start":187,"line_end":187,"column_start":5,"column_end":82}},{"value":"/ // `Token` is used to determine that we received an event for the listener","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6161,"byte_end":6239,"line_start":188,"line_end":188,"column_start":5,"column_end":83}},{"value":"/ // later on.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6244,"byte_end":6260,"line_start":189,"line_end":189,"column_start":5,"column_end":21}},{"value":"/ const SERVER: Token = Token(0);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6265,"byte_end":6300,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6305,"byte_end":6378,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6383,"byte_end":6395,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6400,"byte_end":6407,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6412,"byte_end":6419,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6424,"byte_end":6427,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Multiple event sources can be [registered] (concurrently), so we can","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6432,"byte_end":6504,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ monitor multiple sources at a time.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6509,"byte_end":6548,"line_start":197,"line_end":197,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6553,"byte_end":6556,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [registered]: ../struct.Registry.html#method.register","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6561,"byte_end":6618,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6623,"byte_end":6626,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ## 3. Creating the event loop","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6631,"byte_end":6664,"line_start":201,"line_end":201,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6669,"byte_end":6672,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ After we've created a [`Poll`] instance and registered one or more","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6677,"byte_end":6747,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/ [event sources] with it, we can [poll] it for events. Polling for events","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6752,"byte_end":6828,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ is simple, we need a container to store the events: [`Events`] and need","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6833,"byte_end":6908,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ to do something based on the polled events (this part is up to you, we","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6913,"byte_end":6987,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ can't do it all!). If we do this in a loop we've got ourselves an event","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":6992,"byte_end":7067,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ loop.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7072,"byte_end":7081,"line_start":208,"line_end":208,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7086,"byte_end":7089,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The example below shows the event loop in action, completing our small","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7094,"byte_end":7168,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ TCP server.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7173,"byte_end":7188,"line_start":211,"line_end":211,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7193,"byte_end":7196,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [poll]: ../struct.Poll.html#method.poll","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7201,"byte_end":7244,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/ [event sources]: ../event/trait.Source.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7249,"byte_end":7296,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7301,"byte_end":7304,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7468,"byte_end":7486,"line_start":218,"line_end":218,"column_start":5,"column_end":23}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7491,"byte_end":7521,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/ # use mio::net::TcpListener;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7526,"byte_end":7558,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/ # use mio::{Poll, Token, Interest, Events};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7563,"byte_end":7610,"line_start":221,"line_end":221,"column_start":5,"column_end":52}},{"value":"/ # fn main() -> io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7615,"byte_end":7650,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ # let mut poll = Poll::new()?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7655,"byte_end":7689,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/ # let mut events = Events::with_capacity(128);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7694,"byte_end":7744,"line_start":224,"line_end":224,"column_start":5,"column_end":55}},{"value":"/ # let address = \"127.0.0.1:0\".parse().unwrap();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7749,"byte_end":7800,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/ # let mut listener = TcpListener::bind(address)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7805,"byte_end":7858,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ # const SERVER: Token = Token(0);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7863,"byte_end":7900,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ # poll.registry().register(&mut listener, SERVER, Interest::READABLE)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7905,"byte_end":7980,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ // Start our event loop.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":7985,"byte_end":8013,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8018,"byte_end":8028,"line_start":230,"line_end":230,"column_start":5,"column_end":15}},{"value":"/     // Poll the OS for events, waiting at most 100 milliseconds.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8033,"byte_end":8101,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/     poll.poll(&mut events, Some(Duration::from_millis(100)))?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8106,"byte_end":8172,"line_start":232,"line_end":232,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8177,"byte_end":8180,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/     // Process each event.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8185,"byte_end":8215,"line_start":234,"line_end":234,"column_start":5,"column_end":35}},{"value":"/     for event in events.iter() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8220,"byte_end":8256,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/         // We can use the token we previously provided to `register` to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8261,"byte_end":8336,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/         // determine for which type the event is.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8341,"byte_end":8394,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/         match event.token() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8399,"byte_end":8432,"line_start":238,"line_end":238,"column_start":5,"column_end":38}},{"value":"/             SERVER => loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8437,"byte_end":8469,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/                 // One or more connections are ready, so we'll attempt to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8474,"byte_end":8551,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/                 // accept them (in a loop).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8556,"byte_end":8603,"line_start":241,"line_end":241,"column_start":5,"column_end":52}},{"value":"/                 match listener.accept() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8608,"byte_end":8653,"line_start":242,"line_end":242,"column_start":5,"column_end":50}},{"value":"/                     Ok((connection, address)) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8658,"byte_end":8712,"line_start":243,"line_end":243,"column_start":5,"column_end":59}},{"value":"/                         println!(\"Got a connection from: {}\", address);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8717,"byte_end":8792,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ #                       drop(connection);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8797,"byte_end":8842,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/                     },","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8847,"byte_end":8873,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/                     // A \"would block error\" is returned if the operation","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8878,"byte_end":8955,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/                     // is not ready, so we'll stop trying to accept","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":8960,"byte_end":9031,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/                     // connections.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9036,"byte_end":9075,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/                     Err(ref err) if would_block(err) => break,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9080,"byte_end":9146,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/                     Err(err) => return Err(err),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9151,"byte_end":9203,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9208,"byte_end":9229,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9234,"byte_end":9251,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/ #           _ => unreachable!(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9256,"byte_end":9292,"line_start":254,"line_end":254,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9297,"byte_end":9310,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9315,"byte_end":9324,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ #   return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9329,"byte_end":9351,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9356,"byte_end":9361,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9366,"byte_end":9369,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ fn would_block(err: &io::Error) -> bool {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9374,"byte_end":9419,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/     err.kind() == io::ErrorKind::WouldBlock","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9424,"byte_end":9471,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9476,"byte_end":9481,"line_start":262,"line_end":262,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9486,"byte_end":9493,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":9498,"byte_end":9505,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12391,"byte_end":12399,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15330,"byte_end":15338,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15481,"byte_end":15489,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15617,"byte_end":15625,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25365,"byte_end":25369,"line_start":213,"line_end":213,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29584,"byte_end":29588,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31036,"byte_end":31040,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31141,"byte_end":31145,"line_start":368,"line_end":368,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31269,"byte_end":31277,"line_start":374,"line_end":374,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":41315,"byte_end":41323,"line_start":633,"line_end":633,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":41476,"byte_end":41484,"line_start":640,"line_end":640,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8833085,"byte_end":8833093,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8841845,"byte_end":8841853,"line_start":308,"line_end":308,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8841948,"byte_end":8841956,"line_start":315,"line_end":315,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8842033,"byte_end":8842041,"line_start":321,"line_end":321,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8842269,"byte_end":8842275,"line_start":332,"line_end":332,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8842401,"byte_end":8842407,"line_start":338,"line_end":338,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8842530,"byte_end":8842536,"line_start":346,"line_end":346,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8843008,"byte_end":8843014,"line_start":357,"line_end":357,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8843039,"byte_end":8843045,"line_start":358,"line_end":358,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856979,"byte_end":8856987,"line_start":88,"line_end":88,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/waker.rs","byte_start":8860602,"byte_end":8860607,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/net.rs","byte_start":8866362,"byte_end":8866377,"line_start":73,"line_end":73,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8891287,"byte_end":8891297,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8892226,"byte_end":8892236,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8894019,"byte_end":8894029,"line_start":106,"line_end":106,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8894409,"byte_end":8894421,"line_start":116,"line_end":116,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/mod.rs","byte_start":8829629,"byte_end":8829642,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907490,"byte_end":8907496,"line_start":214,"line_end":214,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907724,"byte_end":8907730,"line_start":221,"line_end":221,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8908281,"byte_end":8908287,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909177,"byte_end":8909183,"line_start":276,"line_end":276,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909394,"byte_end":8909400,"line_start":283,"line_end":283,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909562,"byte_end":8909568,"line_start":291,"line_end":291,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909665,"byte_end":8909671,"line_start":297,"line_end":297,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909933,"byte_end":8909941,"line_start":311,"line_end":311,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8910171,"byte_end":8910179,"line_start":318,"line_end":318,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8910729,"byte_end":8910737,"line_start":342,"line_end":342,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8911433,"byte_end":8911441,"line_start":365,"line_end":365,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8911740,"byte_end":8911748,"line_start":375,"line_end":375,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8911967,"byte_end":8911975,"line_start":382,"line_end":382,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8912141,"byte_end":8912149,"line_start":390,"line_end":390,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8912246,"byte_end":8912254,"line_start":396,"line_end":396,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":52006,"byte_end":52011,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53115,"byte_end":53120,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":59770,"byte_end":59775,"line_start":193,"line_end":193,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":60484,"byte_end":60496,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62859,"byte_end":62865,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65981,"byte_end":65985,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":66461,"byte_end":66467,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70633,"byte_end":70636,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8915023,"byte_end":8915031,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8916331,"byte_end":8916339,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8916606,"byte_end":8916614,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8916743,"byte_end":8916751,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8918583,"byte_end":8918591,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8918896,"byte_end":8918906,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8921222,"byte_end":8921232,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923338,"byte_end":8923349,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926622,"byte_end":8926633,"line_start":127,"line_end":127,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8927189,"byte_end":8927200,"line_start":151,"line_end":151,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8927333,"byte_end":8927344,"line_start":158,"line_end":158,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8927468,"byte_end":8927479,"line_start":165,"line_end":165,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8927589,"byte_end":8927600,"line_start":172,"line_end":172,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929893,"byte_end":8929902,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8941040,"byte_end":8941049,"line_start":332,"line_end":332,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8941153,"byte_end":8941162,"line_start":339,"line_end":339,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1315}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8941343,"byte_end":8941352,"line_start":349,"line_end":349,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8941448,"byte_end":8941457,"line_start":356,"line_end":356,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8942723,"byte_end":8942735,"line_start":406,"line_end":406,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946814,"byte_end":8946823,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951563,"byte_end":8951572,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8952184,"byte_end":8952193,"line_start":195,"line_end":195,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953006,"byte_end":8953015,"line_start":223,"line_end":223,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953571,"byte_end":8953580,"line_start":247,"line_end":247,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953713,"byte_end":8953722,"line_start":254,"line_end":254,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953846,"byte_end":8953855,"line_start":261,"line_end":261,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953965,"byte_end":8953974,"line_start":268,"line_end":268,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958342,"byte_end":8958351,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8974112,"byte_end":8974121,"line_start":530,"line_end":530,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8974677,"byte_end":8974686,"line_start":554,"line_end":554,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8974819,"byte_end":8974828,"line_start":561,"line_end":561,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8974952,"byte_end":8974961,"line_start":568,"line_end":568,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8975071,"byte_end":8975080,"line_start":575,"line_end":575,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976558,"byte_end":8976570,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980156,"byte_end":8980168,"line_start":113,"line_end":113,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980724,"byte_end":8980736,"line_start":137,"line_end":137,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980856,"byte_end":8980868,"line_start":143,"line_end":143,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980979,"byte_end":8980991,"line_start":149,"line_end":149,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8981088,"byte_end":8981100,"line_start":155,"line_end":155,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8981778,"byte_end":8981790,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983164,"byte_end":8983176,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983732,"byte_end":8983744,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983864,"byte_end":8983876,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983987,"byte_end":8983999,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8984096,"byte_end":8984108,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8984806,"byte_end":8984816,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986984,"byte_end":8986994,"line_start":74,"line_end":74,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8987607,"byte_end":8987617,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8988431,"byte_end":8988441,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8988997,"byte_end":8989007,"line_start":146,"line_end":146,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8989127,"byte_end":8989137,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8989248,"byte_end":8989258,"line_start":158,"line_end":158,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8989355,"byte_end":8989365,"line_start":164,"line_end":164,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1375,"byte_end":1380,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":130}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/lib.rs","byte_start":1445,"byte_end":1448,"line_start":61,"line_end":61,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1167}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":12391,"byte_end":12399,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15330,"byte_end":15338,"line_start":118,"line_end":118,"column_start":21,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":2981}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15481,"byte_end":15489,"line_start":127,"line_end":127,"column_start":27,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":3007}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/interest.rs","byte_start":15617,"byte_end":15625,"line_start":134,"line_end":134,"column_start":21,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":25365,"byte_end":25369,"line_start":213,"line_end":213,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":29584,"byte_end":29588,"line_start":319,"line_end":319,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31036,"byte_end":31040,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31141,"byte_end":31145,"line_start":368,"line_end":368,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":79},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":31269,"byte_end":31277,"line_start":374,"line_end":374,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":41315,"byte_end":41323,"line_start":633,"line_end":633,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/poll.rs","byte_start":41476,"byte_end":41484,"line_start":640,"line_end":640,"column_start":18,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":81},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8833085,"byte_end":8833093,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8841845,"byte_end":8841853,"line_start":308,"line_end":308,"column_start":10,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8841948,"byte_end":8841956,"line_start":315,"line_end":315,"column_start":18,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":504},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8842033,"byte_end":8842041,"line_start":321,"line_end":321,"column_start":15,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8842269,"byte_end":8842275,"line_start":332,"line_end":332,"column_start":6,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8842401,"byte_end":8842407,"line_start":338,"line_end":338,"column_start":16,"column_end":22},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8842530,"byte_end":8842536,"line_start":346,"line_end":346,"column_start":19,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8843008,"byte_end":8843014,"line_start":357,"line_end":357,"column_start":22,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/selector/kqueue.rs","byte_start":8843039,"byte_end":8843045,"line_start":358,"line_end":358,"column_start":22,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/sourcefd.rs","byte_start":8856979,"byte_end":8856987,"line_start":88,"line_end":88,"column_start":28,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":527},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/waker.rs","byte_start":8860602,"byte_end":8860607,"line_start":83,"line_end":83,"column_start":10,"column_end":15},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/net.rs","byte_start":8866362,"byte_end":8866377,"line_start":73,"line_end":73,"column_start":6,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8891287,"byte_end":8891297,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8892226,"byte_end":8892236,"line_start":55,"line_end":55,"column_start":10,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8894019,"byte_end":8894029,"line_start":106,"line_end":106,"column_start":21,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/uds/socketaddr.rs","byte_start":8894409,"byte_end":8894421,"line_start":116,"line_end":116,"column_start":27,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/mod.rs","byte_start":8829629,"byte_end":8829642,"line_start":41,"line_end":41,"column_start":14,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907490,"byte_end":8907496,"line_start":214,"line_end":214,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8907724,"byte_end":8907730,"line_start":221,"line_end":221,"column_start":24,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1036},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8908281,"byte_end":8908287,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1036},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909177,"byte_end":8909183,"line_start":276,"line_end":276,"column_start":27,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1036},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909394,"byte_end":8909400,"line_start":283,"line_end":283,"column_start":20,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1036},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909562,"byte_end":8909568,"line_start":291,"line_end":291,"column_start":18,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1036},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909665,"byte_end":8909671,"line_start":297,"line_end":297,"column_start":20,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1036},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8909933,"byte_end":8909941,"line_start":311,"line_end":311,"column_start":6,"column_end":14},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8910171,"byte_end":8910179,"line_start":318,"line_end":318,"column_start":24,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1040},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8910729,"byte_end":8910737,"line_start":342,"line_end":342,"column_start":15,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8911433,"byte_end":8911441,"line_start":365,"line_end":365,"column_start":28,"column_end":36},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8911740,"byte_end":8911748,"line_start":375,"line_end":375,"column_start":28,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8911967,"byte_end":8911975,"line_start":382,"line_end":382,"column_start":20,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8912141,"byte_end":8912149,"line_start":390,"line_end":390,"column_start":18,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/sys/unix/pipe.rs","byte_start":8912246,"byte_end":8912254,"line_start":396,"line_end":396,"column_start":20,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/waker.rs","byte_start":52006,"byte_end":52011,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":53115,"byte_end":53120,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":59770,"byte_end":59775,"line_start":193,"line_end":193,"column_start":21,"column_end":26},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1070},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/event.rs","byte_start":60484,"byte_end":60496,"line_start":210,"line_end":210,"column_start":37,"column_end":49},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":62859,"byte_end":62865,"line_start":81,"line_end":81,"column_start":6,"column_end":12},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":65981,"byte_end":65985,"line_start":203,"line_end":203,"column_start":23,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":7317}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/events.rs","byte_start":66461,"byte_end":66467,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":172},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/event/source.rs","byte_start":70633,"byte_end":70636,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8915023,"byte_end":8915031,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8916331,"byte_end":8916339,"line_start":114,"line_end":114,"column_start":19,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8916606,"byte_end":8916614,"line_start":126,"line_end":126,"column_start":22,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8916743,"byte_end":8916751,"line_start":133,"line_end":133,"column_start":27,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1128},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8918583,"byte_end":8918591,"line_start":201,"line_end":201,"column_start":24,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8918896,"byte_end":8918906,"line_start":218,"line_end":218,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/io_source.rs","byte_start":8921222,"byte_end":8921232,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1163},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8923338,"byte_end":8923349,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8926622,"byte_end":8926633,"line_start":127,"line_end":127,"column_start":24,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1223},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8927189,"byte_end":8927200,"line_start":151,"line_end":151,"column_start":21,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8927333,"byte_end":8927344,"line_start":158,"line_end":158,"column_start":20,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8927468,"byte_end":8927479,"line_start":165,"line_end":165,"column_start":18,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/listener.rs","byte_start":8927589,"byte_end":8927600,"line_start":172,"line_end":172,"column_start":20,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1223},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8929893,"byte_end":8929902,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8941040,"byte_end":8941049,"line_start":332,"line_end":332,"column_start":15,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1860},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8941153,"byte_end":8941162,"line_start":339,"line_end":339,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1860},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8941343,"byte_end":8941352,"line_start":349,"line_end":349,"column_start":18,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1860},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8941448,"byte_end":8941457,"line_start":356,"line_end":356,"column_start":20,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1860},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/socket.rs","byte_start":8942723,"byte_end":8942735,"line_start":406,"line_end":406,"column_start":6,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8946814,"byte_end":8946823,"line_start":49,"line_end":49,"column_start":6,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8951563,"byte_end":8951572,"line_start":175,"line_end":175,"column_start":15,"column_end":24},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1394},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8952184,"byte_end":8952193,"line_start":195,"line_end":195,"column_start":16,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1394},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953006,"byte_end":8953015,"line_start":223,"line_end":223,"column_start":24,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1394},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953571,"byte_end":8953580,"line_start":247,"line_end":247,"column_start":21,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1394},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953713,"byte_end":8953722,"line_start":254,"line_end":254,"column_start":20,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1394},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953846,"byte_end":8953855,"line_start":261,"line_end":261,"column_start":18,"column_end":27},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1394},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/tcp/stream.rs","byte_start":8953965,"byte_end":8953974,"line_start":268,"line_end":268,"column_start":20,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1394},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8958342,"byte_end":8958351,"line_start":95,"line_end":95,"column_start":6,"column_end":15},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8974112,"byte_end":8974121,"line_start":530,"line_end":530,"column_start":24,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1514},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8974677,"byte_end":8974686,"line_start":554,"line_end":554,"column_start":21,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1514},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8974819,"byte_end":8974828,"line_start":561,"line_end":561,"column_start":20,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1514},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8974952,"byte_end":8974961,"line_start":568,"line_end":568,"column_start":18,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1514},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/udp.rs","byte_start":8975071,"byte_end":8975080,"line_start":575,"line_end":575,"column_start":20,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1514},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8976558,"byte_end":8976570,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980156,"byte_end":8980168,"line_start":113,"line_end":113,"column_start":24,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1614},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980724,"byte_end":8980736,"line_start":137,"line_end":137,"column_start":21,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1614},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980856,"byte_end":8980868,"line_start":143,"line_end":143,"column_start":20,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1614},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8980979,"byte_end":8980991,"line_start":149,"line_end":149,"column_start":18,"column_end":30},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1614},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/datagram.rs","byte_start":8981088,"byte_end":8981100,"line_start":155,"line_end":155,"column_start":20,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1614},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8981778,"byte_end":8981790,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983164,"byte_end":8983176,"line_start":52,"line_end":52,"column_start":24,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1706},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983732,"byte_end":8983744,"line_start":76,"line_end":76,"column_start":21,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983864,"byte_end":8983876,"line_start":82,"line_end":82,"column_start":20,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1706},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8983987,"byte_end":8983999,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1706},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/listener.rs","byte_start":8984096,"byte_end":8984108,"line_start":94,"line_end":94,"column_start":20,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1706},"to":{"krate":1,"index":5478}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8984806,"byte_end":8984816,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8986984,"byte_end":8986994,"line_start":74,"line_end":74,"column_start":15,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1791},"to":{"krate":1,"index":4271}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8987607,"byte_end":8987617,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1791},"to":{"krate":1,"index":4332}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8988431,"byte_end":8988441,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1791},"to":{"krate":0,"index":208}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8988997,"byte_end":8989007,"line_start":146,"line_end":146,"column_start":21,"column_end":31},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1791},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8989127,"byte_end":8989137,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1791},"to":{"krate":1,"index":5480}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8989248,"byte_end":8989258,"line_start":158,"line_end":158,"column_start":18,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1791},"to":{"krate":1,"index":5476}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/mio-0.7.7/src/net/uds/stream.rs","byte_start":8989355,"byte_end":8989365,"line_start":164,"line_end":164,"column_start":20,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1791},"to":{"krate":1,"index":5478}}]}