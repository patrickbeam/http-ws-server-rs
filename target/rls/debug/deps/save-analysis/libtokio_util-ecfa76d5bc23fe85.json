{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1","program":"/Users/patrickbeam/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=ecfa76d5bc23fe85","-C","extra-filename=-ecfa76d5bc23fe85","--out-dir","/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps","-L","dependency=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps","--extern","bytes=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libbytes-344cb08e618e1106.rmeta","--extern","futures_core=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libfutures_core-a7b61638b20cb8e2.rmeta","--extern","futures_sink=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libfutures_sink-f362dbd997d3c087.rmeta","--extern","log=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/liblog-cf633ca55f8ad2b1.rmeta","--extern","pin_project_lite=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libpin_project_lite-bc1ff2ea7b4db878.rmeta","--extern","tokio=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libtokio-7746e5b71761bf74.rmeta","--extern","tokio_stream=/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libtokio_stream-13e793d9dd730c72.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/patrickbeam/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/patrickbeam/workspace/http-ws-server-rs/target/rls/debug/deps/libtokio_util-ecfa76d5bc23fe85.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[4152113062100579240,6361249176983308658]},"crate_root":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src","external_crates":[{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[2450264148744425324,10050667756610945632]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5216882650067454300,803391174261596525]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5321725740897068604,14247691274753233016]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15008236376303079999,8121662539630509915]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12920482519877858869,7783732174216732460]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12220061461292827086,10995062625150216334]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4557698817887729143,15105021759844686565]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9270263569388356812,1031064821649785583]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17403927150379973007,17129611224880441426]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8342530726152111216,8633669874212043972]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16317838093811012662,7640540080182738814]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11516351311229957058,6496694232360362766]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15319259245696541708,12758538875610414082]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13027830824513170433,9319164864677654917]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6239108798947591245,16929767405147073453]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[9689407603164028381,5815853528255048552]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","num":17,"id":{"name":"tokio","disambiguator":[952489692440155859,2330417612879591522]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","num":18,"id":{"name":"mio","disambiguator":[9039263132287479554,1461210656635789179]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","num":19,"id":{"name":"log","disambiguator":[1163638369942623445,8155073636483162634]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3936438787002371380,599542047436953948]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","num":21,"id":{"name":"libc","disambiguator":[14115450235977407651,3558586755545689048]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[11419914542991029966,10992764037491816547]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":23,"id":{"name":"bytes","disambiguator":[10273698356506573899,13202361368699560444]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","num":24,"id":{"name":"tokio_macros","disambiguator":[18416363850595630674,10314091483129165857]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","num":25,"id":{"name":"memchr","disambiguator":[18396972643416731249,3984552347758791776]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","num":26,"id":{"name":"futures_core","disambiguator":[5457586302754074877,4435923209842654624]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","num":27,"id":{"name":"tokio_stream","disambiguator":[12510745359438740545,8417583956941865327]}},{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","num":28,"id":{"name":"futures_sink","disambiguator":[11649277193723613284,1616707430999838320]}}],"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":0,"byte_end":5436,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":917},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263993,"byte_end":10264003,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264042,"byte_end":10264049,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264088,"byte_end":10264095,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":1186},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264257,"byte_end":10264263,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":946},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264265,"byte_end":10264276,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264324,"byte_end":10264334,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":1104},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264383,"byte_end":10264394,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":970},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264456,"byte_end":10264476,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":801},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264478,"byte_end":10264503,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":986},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264552,"byte_end":10264562,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":1008},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264564,"byte_end":10264579,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":303}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/mod.rs","byte_start":6572,"byte_end":6589,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/mod.rs","byte_start":6591,"byte_end":6616,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":13}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":0,"byte_end":5436,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":9},{"krate":0,"index":303},{"krate":0,"index":13},{"krate":0,"index":185},{"krate":0,"index":254}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":416,"byte_end":453,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":454,"byte_end":457,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":458,"byte_end":515,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":516,"byte_end":580,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":581,"byte_end":656,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":657,"byte_end":660,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":661,"byte_end":697,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":303},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":914}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/cfg.rs","byte_start":5512,"byte_end":5537,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10253721,"byte_end":10253774,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10253775,"byte_end":10253778,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10253779,"byte_end":10253854,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10253855,"byte_end":10253920,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10253921,"byte_end":10253924,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10253925,"byte_end":10254005,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254006,"byte_end":10254081,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254082,"byte_end":10254130,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254131,"byte_end":10254134,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254135,"byte_end":10254158,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254159,"byte_end":10254162,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254163,"byte_end":10254242,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254243,"byte_end":10254322,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254323,"byte_end":10254394,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254395,"byte_end":10254465,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254466,"byte_end":10254544,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254545,"byte_end":10254621,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254622,"byte_end":10254655,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254656,"byte_end":10254659,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254660,"byte_end":10254740,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254741,"byte_end":10254821,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254822,"byte_end":10254872,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254873,"byte_end":10254876,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254877,"byte_end":10254928,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254929,"byte_end":10254978,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10254979,"byte_end":10255030,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255031,"byte_end":10255034,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255035,"byte_end":10255100,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255101,"byte_end":10255104,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255105,"byte_end":10255182,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255183,"byte_end":10255224,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255225,"byte_end":10255228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255229,"byte_end":10255309,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255310,"byte_end":10255389,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255390,"byte_end":10255468,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255469,"byte_end":10255548,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255549,"byte_end":10255563,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255564,"byte_end":10255567,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255568,"byte_end":10255647,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255648,"byte_end":10255727,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255728,"byte_end":10255745,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255746,"byte_end":10255749,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255750,"byte_end":10255827,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255828,"byte_end":10255907,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255908,"byte_end":10255985,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10255986,"byte_end":10256056,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256057,"byte_end":10256106,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256107,"byte_end":10256110,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256111,"byte_end":10256124,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256125,"byte_end":10256157,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256158,"byte_end":10256225,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256226,"byte_end":10256340,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256341,"byte_end":10256378,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256379,"byte_end":10256440,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256441,"byte_end":10256490,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256491,"byte_end":10256494,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256495,"byte_end":10256536,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256537,"byte_end":10256547,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256548,"byte_end":10256632,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256633,"byte_end":10256689,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256690,"byte_end":10256693,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256694,"byte_end":10256715,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256716,"byte_end":10256783,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256784,"byte_end":10256812,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256813,"byte_end":10256826,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256827,"byte_end":10256845,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256846,"byte_end":10256855,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256856,"byte_end":10256859,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256860,"byte_end":10256919,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256920,"byte_end":10256944,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256945,"byte_end":10256954,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256955,"byte_end":10256960,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256961,"byte_end":10256969,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256970,"byte_end":10256977,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10256978,"byte_end":10257052,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257053,"byte_end":10257056,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257057,"byte_end":10257079,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257080,"byte_end":10257083,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257084,"byte_end":10257161,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257162,"byte_end":10257238,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257239,"byte_end":10257318,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257319,"byte_end":10257373,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257374,"byte_end":10257377,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257378,"byte_end":10257422,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257423,"byte_end":10257430,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257431,"byte_end":10257466,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257467,"byte_end":10257498,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257499,"byte_end":10257502,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257503,"byte_end":10257532,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257533,"byte_end":10257536,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257537,"byte_end":10257576,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257577,"byte_end":10257580,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257581,"byte_end":10257619,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257620,"byte_end":10257647,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257648,"byte_end":10257684,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257685,"byte_end":10257688,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257689,"byte_end":10257707,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257708,"byte_end":10257730,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257731,"byte_end":10257761,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257762,"byte_end":10257816,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257817,"byte_end":10257847,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257848,"byte_end":10257905,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257906,"byte_end":10257938,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257939,"byte_end":10257952,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257953,"byte_end":10257956,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257957,"byte_end":10257991,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10257992,"byte_end":10258036,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258037,"byte_end":10258089,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258090,"byte_end":10258157,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258158,"byte_end":10258161,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258162,"byte_end":10258236,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258237,"byte_end":10258303,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258304,"byte_end":10258333,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258334,"byte_end":10258381,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258382,"byte_end":10258434,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258435,"byte_end":10258506,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258507,"byte_end":10258526,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258527,"byte_end":10258540,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258541,"byte_end":10258544,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258545,"byte_end":10258584,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258585,"byte_end":10258640,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258641,"byte_end":10258659,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258660,"byte_end":10258736,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258737,"byte_end":10258803,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258804,"byte_end":10258856,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258857,"byte_end":10258860,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258861,"byte_end":10258941,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258942,"byte_end":10258967,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10258968,"byte_end":10259000,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259001,"byte_end":10259014,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259015,"byte_end":10259018,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259019,"byte_end":10259091,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259092,"byte_end":10259118,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259119,"byte_end":10259170,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259171,"byte_end":10259207,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259208,"byte_end":10259211,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259212,"byte_end":10259290,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259291,"byte_end":10259334,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259335,"byte_end":10259382,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259383,"byte_end":10259419,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259420,"byte_end":10259464,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259465,"byte_end":10259521,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259522,"byte_end":10259570,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259571,"byte_end":10259593,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259594,"byte_end":10259612,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259613,"byte_end":10259626,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259627,"byte_end":10259636,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259637,"byte_end":10259642,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259643,"byte_end":10259650,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259651,"byte_end":10259654,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259655,"byte_end":10259678,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259679,"byte_end":10259682,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259683,"byte_end":10259761,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259762,"byte_end":10259835,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259836,"byte_end":10259912,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259913,"byte_end":10259993,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10259994,"byte_end":10260010,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260011,"byte_end":10260014,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260015,"byte_end":10260095,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260096,"byte_end":10260175,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260176,"byte_end":10260256,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260257,"byte_end":10260329,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260330,"byte_end":10260333,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260334,"byte_end":10260411,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260412,"byte_end":10260490,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260491,"byte_end":10260564,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260565,"byte_end":10260631,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260632,"byte_end":10260635,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260636,"byte_end":10260649,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260650,"byte_end":10260683,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260684,"byte_end":10260718,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260719,"byte_end":10260756,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260757,"byte_end":10260824,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260825,"byte_end":10260860,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260861,"byte_end":10260922,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260923,"byte_end":10260969,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10260970,"byte_end":10261031,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261032,"byte_end":10261035,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261036,"byte_end":10261064,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261065,"byte_end":10261068,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261069,"byte_end":10261110,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261111,"byte_end":10261121,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261122,"byte_end":10261146,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261147,"byte_end":10261221,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261222,"byte_end":10261264,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261265,"byte_end":10261279,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261280,"byte_end":10261337,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261338,"byte_end":10261387,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261388,"byte_end":10261402,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261403,"byte_end":10261440,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261441,"byte_end":10261492,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261493,"byte_end":10261539,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261540,"byte_end":10261570,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261571,"byte_end":10261585,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261586,"byte_end":10261595,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261596,"byte_end":10261601,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261602,"byte_end":10261609,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261610,"byte_end":10261617,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261618,"byte_end":10261693,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261694,"byte_end":10261767,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261768,"byte_end":10261810,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261811,"byte_end":10261814,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261815,"byte_end":10261837,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261838,"byte_end":10261841,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261842,"byte_end":10261919,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261920,"byte_end":10261996,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10261997,"byte_end":10262073,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262074,"byte_end":10262097,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262098,"byte_end":10262101,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262102,"byte_end":10262147,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262148,"byte_end":10262155,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262156,"byte_end":10262191,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262192,"byte_end":10262216,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262217,"byte_end":10262220,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262221,"byte_end":10262250,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262251,"byte_end":10262254,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262255,"byte_end":10262294,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262295,"byte_end":10262298,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262299,"byte_end":10262345,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262346,"byte_end":10262382,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262383,"byte_end":10262386,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262387,"byte_end":10262478,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262479,"byte_end":10262553,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262554,"byte_end":10262576,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262577,"byte_end":10262610,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262611,"byte_end":10262658,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262659,"byte_end":10262711,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262712,"byte_end":10262787,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262788,"byte_end":10262807,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262808,"byte_end":10262821,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262822,"byte_end":10262825,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262826,"byte_end":10262878,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262879,"byte_end":10262956,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10262957,"byte_end":10263021,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263022,"byte_end":10263025,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263026,"byte_end":10263069,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263070,"byte_end":10263110,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263111,"byte_end":10263114,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263115,"byte_end":10263172,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263173,"byte_end":10263219,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263220,"byte_end":10263271,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263272,"byte_end":10263290,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263291,"byte_end":10263300,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263301,"byte_end":10263306,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263307,"byte_end":10263314,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263315,"byte_end":10263318,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263319,"byte_end":10263358,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263359,"byte_end":10263400,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263401,"byte_end":10263437,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263438,"byte_end":10263470,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263471,"byte_end":10263567,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263568,"byte_end":10263619,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263620,"byte_end":10263673,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263674,"byte_end":10263717,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263718,"byte_end":10263762,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263763,"byte_end":10263811,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263812,"byte_end":10263860,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263861,"byte_end":10263907,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10263908,"byte_end":10263947,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":917},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265865,"byte_end":10265875,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264708,"byte_end":10264793,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264794,"byte_end":10264797,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264798,"byte_end":10264836,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264837,"byte_end":10264875,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264876,"byte_end":10264879,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264880,"byte_end":10264893,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264894,"byte_end":10264897,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264898,"byte_end":10264979,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264980,"byte_end":10264983,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10264984,"byte_end":10265023,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265024,"byte_end":10265057,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265058,"byte_end":10265087,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265088,"byte_end":10265091,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265092,"byte_end":10265099,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265100,"byte_end":10265118,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265119,"byte_end":10265149,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265150,"byte_end":10265174,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265175,"byte_end":10265182,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265183,"byte_end":10265212,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265213,"byte_end":10265265,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265266,"byte_end":10265269,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265270,"byte_end":10265288,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265289,"byte_end":10265306,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265307,"byte_end":10265387,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265388,"byte_end":10265422,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265423,"byte_end":10265476,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265477,"byte_end":10265488,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265489,"byte_end":10265496,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265497,"byte_end":10265502,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265503,"byte_end":10265550,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265551,"byte_end":10265604,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265605,"byte_end":10265663,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265664,"byte_end":10265743,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265744,"byte_end":10265756,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265757,"byte_end":10265764,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265765,"byte_end":10265772,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265773,"byte_end":10265776,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265977,"byte_end":10265980,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265904,"byte_end":10265965,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":353},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267292,"byte_end":10267299,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10266695,"byte_end":10266730,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10266731,"byte_end":10266734,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10266735,"byte_end":10266804,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10266805,"byte_end":10266884,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10266885,"byte_end":10266957,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10266958,"byte_end":10266982,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10266983,"byte_end":10266986,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10266987,"byte_end":10267055,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267056,"byte_end":10267133,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267134,"byte_end":10267195,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267196,"byte_end":10267199,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267200,"byte_end":10267236,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267237,"byte_end":10267281,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":354},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267347,"byte_end":10267351,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267306,"byte_end":10267337,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":355},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268117,"byte_end":10268122,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267358,"byte_end":10267410,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267415,"byte_end":10267418,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267423,"byte_end":10267492,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267497,"byte_end":10267567,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267572,"byte_end":10267618,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267623,"byte_end":10267626,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267631,"byte_end":10267707,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267712,"byte_end":10267787,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267792,"byte_end":10267867,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267872,"byte_end":10267912,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267917,"byte_end":10267920,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10267925,"byte_end":10267999,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268004,"byte_end":10268050,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268055,"byte_end":10268058,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268063,"byte_end":10268107,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271058,"byte_end":10271064,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268146,"byte_end":10268211,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268216,"byte_end":10268219,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268224,"byte_end":10268298,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268303,"byte_end":10268375,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268380,"byte_end":10268453,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268458,"byte_end":10268501,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268506,"byte_end":10268509,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268514,"byte_end":10268587,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268592,"byte_end":10268655,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268660,"byte_end":10268735,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268740,"byte_end":10268815,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268820,"byte_end":10268843,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268848,"byte_end":10268851,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268856,"byte_end":10268928,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10268933,"byte_end":10269007,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269012,"byte_end":10269082,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269087,"byte_end":10269090,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269095,"byte_end":10269163,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269168,"byte_end":10269239,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269244,"byte_end":10269324,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269329,"byte_end":10269341,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269346,"byte_end":10269349,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269354,"byte_end":10269424,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269429,"byte_end":10269504,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269509,"byte_end":10269546,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269551,"byte_end":10269554,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269559,"byte_end":10269595,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269600,"byte_end":10269644,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269649,"byte_end":10269652,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269657,"byte_end":10269680,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269685,"byte_end":10269688,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269693,"byte_end":10269767,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269772,"byte_end":10269846,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269851,"byte_end":10269904,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269909,"byte_end":10269912,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269917,"byte_end":10269988,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10269993,"byte_end":10270063,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270068,"byte_end":10270084,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270089,"byte_end":10270092,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270097,"byte_end":10270110,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270115,"byte_end":10270133,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270138,"byte_end":10270143,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270148,"byte_end":10270174,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270179,"byte_end":10270216,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270221,"byte_end":10270226,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270231,"byte_end":10270252,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270257,"byte_end":10270262,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270267,"byte_end":10270297,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270302,"byte_end":10270316,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270321,"byte_end":10270352,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270357,"byte_end":10270390,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270395,"byte_end":10270398,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270403,"byte_end":10270496,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270501,"byte_end":10270519,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270524,"byte_end":10270527,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270532,"byte_end":10270604,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270609,"byte_end":10270669,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270674,"byte_end":10270726,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270731,"byte_end":10270793,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270798,"byte_end":10270865,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270870,"byte_end":10270873,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270878,"byte_end":10270906,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270911,"byte_end":10270920,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270925,"byte_end":10270930,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270935,"byte_end":10270942,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270947,"byte_end":10270950,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10270955,"byte_end":10271024,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271029,"byte_end":10271050,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271923,"byte_end":10271933,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271145,"byte_end":10271217,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271222,"byte_end":10271271,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271276,"byte_end":10271279,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271284,"byte_end":10271352,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271357,"byte_end":10271424,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271429,"byte_end":10271497,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271502,"byte_end":10271550,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271555,"byte_end":10271558,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271563,"byte_end":10271631,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271636,"byte_end":10271711,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271716,"byte_end":10271791,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271796,"byte_end":10271868,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10271873,"byte_end":10271915,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273541,"byte_end":10273547,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":353},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272351,"byte_end":10272431,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272436,"byte_end":10272512,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272517,"byte_end":10272520,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272525,"byte_end":10272600,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272605,"byte_end":10272675,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272680,"byte_end":10272751,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272756,"byte_end":10272828,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272833,"byte_end":10272891,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272896,"byte_end":10272899,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272904,"byte_end":10272973,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10272978,"byte_end":10273053,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273058,"byte_end":10273134,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273139,"byte_end":10273161,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273166,"byte_end":10273169,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273174,"byte_end":10273247,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273252,"byte_end":10273325,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273330,"byte_end":10273406,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273411,"byte_end":10273414,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273419,"byte_end":10273455,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273460,"byte_end":10273492,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/decoder.rs","byte_start":10273497,"byte_end":10273533,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":370},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10273881,"byte_end":10273888,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10273726,"byte_end":10273798,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10273799,"byte_end":10273819,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10273820,"byte_end":10273823,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10273824,"byte_end":10273870,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":372},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274153,"byte_end":10274158,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10273901,"byte_end":10273933,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10273938,"byte_end":10273941,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10273946,"byte_end":10274023,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274028,"byte_end":10274084,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274089,"byte_end":10274092,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274097,"byte_end":10274143,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274509,"byte_end":10274515,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274182,"byte_end":10274227,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274232,"byte_end":10274235,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274240,"byte_end":10274314,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274319,"byte_end":10274399,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274404,"byte_end":10274442,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274447,"byte_end":10274450,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/encoder.rs","byte_start":10274455,"byte_end":10274501,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10281696,"byte_end":10281702,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1189}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283185,"byte_end":10283188,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10281844,"byte_end":10281924,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10281929,"byte_end":10282010,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282015,"byte_end":10282018,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282023,"byte_end":10282098,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282103,"byte_end":10282173,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282178,"byte_end":10282247,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282252,"byte_end":10282324,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282329,"byte_end":10282387,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282392,"byte_end":10282395,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282400,"byte_end":10282471,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282476,"byte_end":10282553,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282558,"byte_end":10282634,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282639,"byte_end":10282661,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282666,"byte_end":10282669,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282674,"byte_end":10282747,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282752,"byte_end":10282825,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282830,"byte_end":10282906,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282911,"byte_end":10282914,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282919,"byte_end":10282955,"line_start":55,"line_end":55,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282960,"byte_end":10282992,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10282997,"byte_end":10283034,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283039,"byte_end":10283077,"line_start":58,"line_end":58,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283082,"byte_end":10283173,"line_start":59,"line_end":59,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284796,"byte_end":10284809,"line_start":94,"line_end":94,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283401,"byte_end":10283481,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283486,"byte_end":10283567,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283572,"byte_end":10283621,"line_start":72,"line_end":72,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283626,"byte_end":10283629,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283634,"byte_end":10283709,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283714,"byte_end":10283784,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283789,"byte_end":10283858,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283863,"byte_end":10283935,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10283940,"byte_end":10283998,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284003,"byte_end":10284006,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284011,"byte_end":10284082,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284087,"byte_end":10284164,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284169,"byte_end":10284245,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284250,"byte_end":10284272,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284277,"byte_end":10284280,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284285,"byte_end":10284358,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284363,"byte_end":10284436,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284441,"byte_end":10284517,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284522,"byte_end":10284525,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284530,"byte_end":10284566,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284571,"byte_end":10284603,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284608,"byte_end":10284645,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284650,"byte_end":10284688,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10284693,"byte_end":10284784,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286912,"byte_end":10286922,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285335,"byte_end":10285415,"line_start":113,"line_end":113,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285420,"byte_end":10285501,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285506,"byte_end":10285509,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285514,"byte_end":10285589,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285594,"byte_end":10285664,"line_start":117,"line_end":117,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285669,"byte_end":10285740,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285745,"byte_end":10285817,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285822,"byte_end":10285880,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285885,"byte_end":10285888,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285893,"byte_end":10285964,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285969,"byte_end":10286046,"line_start":123,"line_end":123,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286051,"byte_end":10286127,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286132,"byte_end":10286154,"line_start":125,"line_end":125,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286159,"byte_end":10286162,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286167,"byte_end":10286246,"line_start":127,"line_end":127,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286251,"byte_end":10286328,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286333,"byte_end":10286336,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286341,"byte_end":10286414,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286419,"byte_end":10286492,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286497,"byte_end":10286573,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286578,"byte_end":10286581,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio_stream::Stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286586,"byte_end":10286622,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286627,"byte_end":10286659,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286664,"byte_end":10286702,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286707,"byte_end":10286745,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286750,"byte_end":10286804,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10286809,"byte_end":10286900,"line_start":139,"line_end":139,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287557,"byte_end":10287564,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287274,"byte_end":10287337,"line_start":153,"line_end":153,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287342,"byte_end":10287355,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287360,"byte_end":10287363,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287368,"byte_end":10287443,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287448,"byte_end":10287518,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287523,"byte_end":10287545,"line_start":158,"line_end":158,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287908,"byte_end":10287915,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287617,"byte_end":10287688,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287693,"byte_end":10287706,"line_start":164,"line_end":164,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287711,"byte_end":10287714,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287719,"byte_end":10287794,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287799,"byte_end":10287869,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287874,"byte_end":10287896,"line_start":168,"line_end":168,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288278,"byte_end":10288289,"line_start":179,"line_end":179,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10287980,"byte_end":10288058,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288063,"byte_end":10288076,"line_start":174,"line_end":174,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288081,"byte_end":10288084,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288089,"byte_end":10288164,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288169,"byte_end":10288239,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288244,"byte_end":10288266,"line_start":178,"line_end":178,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288636,"byte_end":10288641,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288385,"byte_end":10288443,"line_start":183,"line_end":183,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288448,"byte_end":10288461,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288466,"byte_end":10288469,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288474,"byte_end":10288548,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288553,"byte_end":10288624,"line_start":187,"line_end":187,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288953,"byte_end":10288962,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288694,"byte_end":10288760,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288765,"byte_end":10288778,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288783,"byte_end":10288786,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288791,"byte_end":10288865,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10288870,"byte_end":10288941,"line_start":196,"line_end":196,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289082,"byte_end":10289093,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289027,"byte_end":10289070,"line_start":201,"line_end":201,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289228,"byte_end":10289243,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289165,"byte_end":10289216,"line_start":206,"line_end":206,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289383,"byte_end":10289395,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289327,"byte_end":10289371,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289532,"byte_end":10289548,"line_start":217,"line_end":217,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289468,"byte_end":10289520,"line_start":216,"line_end":216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289898,"byte_end":10289908,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289633,"byte_end":10289696,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289701,"byte_end":10289704,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289709,"byte_end":10289784,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289789,"byte_end":10289859,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289864,"byte_end":10289886,"line_start":225,"line_end":225,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290280,"byte_end":10290290,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10289958,"byte_end":10290032,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290037,"byte_end":10290078,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290083,"byte_end":10290086,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290091,"byte_end":10290166,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290171,"byte_end":10290241,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290246,"byte_end":10290268,"line_start":235,"line_end":235,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":946},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292264,"byte_end":10292275,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10291949,"byte_end":10292020,"line_start":299,"line_end":299,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292021,"byte_end":10292093,"line_start":300,"line_end":300,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292094,"byte_end":10292154,"line_start":301,"line_end":301,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292155,"byte_end":10292158,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292159,"byte_end":10292195,"line_start":303,"line_end":303,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292213,"byte_end":10292252,"line_start":305,"line_end":305,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":949},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292361,"byte_end":10292363,"line_start":308,"line_end":308,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292288,"byte_end":10292352,"line_start":307,"line_end":307,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":950},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292395,"byte_end":10292400,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292373,"byte_end":10292386,"line_start":310,"line_end":310,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":951},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292465,"byte_end":10292473,"line_start":314,"line_end":314,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292410,"byte_end":10292456,"line_start":313,"line_end":313,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":952},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292560,"byte_end":10292569,"line_start":317,"line_end":317,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":946},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292490,"byte_end":10292551,"line_start":316,"line_end":316,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292802,"byte_end":10292805,"line_start":326,"line_end":326,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292750,"byte_end":10292790,"line_start":325,"line_end":325,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10293534,"byte_end":10293544,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1148}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10293795,"byte_end":10293798,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10293727,"byte_end":10293783,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294146,"byte_end":10294159,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294030,"byte_end":10294112,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294117,"byte_end":10294134,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294873,"byte_end":10294880,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294586,"byte_end":10294649,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294654,"byte_end":10294671,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294676,"byte_end":10294679,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294684,"byte_end":10294759,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294764,"byte_end":10294834,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294839,"byte_end":10294861,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295228,"byte_end":10295235,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294933,"byte_end":10295004,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295009,"byte_end":10295026,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295031,"byte_end":10295034,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295039,"byte_end":10295114,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295119,"byte_end":10295189,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295194,"byte_end":10295216,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295602,"byte_end":10295613,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295300,"byte_end":10295378,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295383,"byte_end":10295400,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295405,"byte_end":10295408,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295413,"byte_end":10295488,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295493,"byte_end":10295563,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295568,"byte_end":10295590,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295978,"byte_end":10295988,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295709,"byte_end":10295776,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295781,"byte_end":10295784,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295789,"byte_end":10295864,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295869,"byte_end":10295939,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10295944,"byte_end":10295966,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296100,"byte_end":10296107,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296038,"byte_end":10296088,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296230,"byte_end":10296241,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296160,"byte_end":10296218,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296361,"byte_end":10296372,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296306,"byte_end":10296349,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296502,"byte_end":10296517,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296439,"byte_end":10296490,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10298618,"byte_end":10298629,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1107}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10298836,"byte_end":10298839,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10298767,"byte_end":10298824,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299397,"byte_end":10299404,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299109,"byte_end":10299172,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299177,"byte_end":10299195,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299200,"byte_end":10299203,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299208,"byte_end":10299283,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299288,"byte_end":10299358,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299363,"byte_end":10299385,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299753,"byte_end":10299760,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299457,"byte_end":10299528,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299533,"byte_end":10299551,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299556,"byte_end":10299559,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299564,"byte_end":10299639,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299644,"byte_end":10299714,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299719,"byte_end":10299741,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300128,"byte_end":10300139,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299825,"byte_end":10299903,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299908,"byte_end":10299926,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299931,"byte_end":10299934,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299939,"byte_end":10300014,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300019,"byte_end":10300089,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300094,"byte_end":10300116,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300505,"byte_end":10300515,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300235,"byte_end":10300303,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300308,"byte_end":10300311,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300316,"byte_end":10300391,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300396,"byte_end":10300466,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300471,"byte_end":10300493,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300627,"byte_end":10300634,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300565,"byte_end":10300615,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300757,"byte_end":10300768,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300687,"byte_end":10300745,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300889,"byte_end":10300901,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300833,"byte_end":10300877,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10301032,"byte_end":10301048,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10300968,"byte_end":10301020,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":747},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":958},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":801},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":803},{"krate":0,"index":810},{"krate":0,"index":814},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":845}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302575,"byte_end":10302627,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302628,"byte_end":10302631,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302632,"byte_end":10302702,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302703,"byte_end":10302761,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302762,"byte_end":10302834,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302835,"byte_end":10302905,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302906,"byte_end":10302973,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302974,"byte_end":10302977,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10302978,"byte_end":10302999,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303000,"byte_end":10303003,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303004,"byte_end":10303079,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303080,"byte_end":10303151,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303152,"byte_end":10303223,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303224,"byte_end":10303294,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303295,"byte_end":10303335,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303336,"byte_end":10303339,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303340,"byte_end":10303347,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303348,"byte_end":10303391,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303392,"byte_end":10303450,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303451,"byte_end":10303454,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303455,"byte_end":10303510,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303511,"byte_end":10303553,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303554,"byte_end":10303559,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303560,"byte_end":10303612,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303613,"byte_end":10303618,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303619,"byte_end":10303641,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303642,"byte_end":10303649,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303650,"byte_end":10303653,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303654,"byte_end":10303726,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303727,"byte_end":10303798,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303799,"byte_end":10303818,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303819,"byte_end":10303822,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303823,"byte_end":10303834,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303835,"byte_end":10303884,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303885,"byte_end":10303934,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303935,"byte_end":10303984,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303985,"byte_end":10303992,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303993,"byte_end":10303996,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10303997,"byte_end":10304035,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304036,"byte_end":10304039,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304040,"byte_end":10304047,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304048,"byte_end":10304091,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304092,"byte_end":10304150,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304151,"byte_end":10304154,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304155,"byte_end":10304180,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304181,"byte_end":10304202,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304203,"byte_end":10304206,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304207,"byte_end":10304283,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304284,"byte_end":10304293,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304294,"byte_end":10304336,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304337,"byte_end":10304342,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304343,"byte_end":10304416,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304417,"byte_end":10304464,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304465,"byte_end":10304468,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304469,"byte_end":10304506,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304507,"byte_end":10304521,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304522,"byte_end":10304527,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304528,"byte_end":10304535,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304536,"byte_end":10304539,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304540,"byte_end":10304582,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304583,"byte_end":10304586,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304587,"byte_end":10304598,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304599,"byte_end":10304638,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304639,"byte_end":10304678,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304679,"byte_end":10304718,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304719,"byte_end":10304726,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304727,"byte_end":10304730,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304731,"byte_end":10304745,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304746,"byte_end":10304749,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304750,"byte_end":10304825,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304826,"byte_end":10304899,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304900,"byte_end":10304966,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10304967,"byte_end":10305036,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305037,"byte_end":10305102,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305103,"byte_end":10305106,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305107,"byte_end":10305123,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305124,"byte_end":10305127,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305128,"byte_end":10305204,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305205,"byte_end":10305246,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305247,"byte_end":10305250,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305251,"byte_end":10305258,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305259,"byte_end":10305290,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305291,"byte_end":10305341,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305342,"byte_end":10305383,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305384,"byte_end":10305419,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305420,"byte_end":10305468,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305469,"byte_end":10305500,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305501,"byte_end":10305549,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305550,"byte_end":10305599,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305600,"byte_end":10305622,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305623,"byte_end":10305630,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305631,"byte_end":10305653,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305654,"byte_end":10305661,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305662,"byte_end":10305665,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305666,"byte_end":10305714,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305715,"byte_end":10305718,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305719,"byte_end":10305730,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305731,"byte_end":10305783,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305784,"byte_end":10305849,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305850,"byte_end":10305915,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305916,"byte_end":10305981,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305982,"byte_end":10305989,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305990,"byte_end":10305993,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10305994,"byte_end":10306070,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306071,"byte_end":10306145,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306146,"byte_end":10306218,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306219,"byte_end":10306295,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306296,"byte_end":10306338,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306339,"byte_end":10306342,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306343,"byte_end":10306359,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306360,"byte_end":10306363,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306364,"byte_end":10306439,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306440,"byte_end":10306481,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306482,"byte_end":10306485,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306486,"byte_end":10306493,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306494,"byte_end":10306525,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306526,"byte_end":10306576,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306577,"byte_end":10306618,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306619,"byte_end":10306654,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306655,"byte_end":10306703,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306704,"byte_end":10306735,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306736,"byte_end":10306784,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306785,"byte_end":10306844,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306845,"byte_end":10306867,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306868,"byte_end":10306875,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306876,"byte_end":10306898,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306899,"byte_end":10306906,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306907,"byte_end":10306910,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306911,"byte_end":10306959,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306960,"byte_end":10306963,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306964,"byte_end":10306975,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10306976,"byte_end":10307025,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307026,"byte_end":10307080,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307081,"byte_end":10307135,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307136,"byte_end":10307190,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307191,"byte_end":10307198,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307199,"byte_end":10307202,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307203,"byte_end":10307276,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307277,"byte_end":10307344,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307345,"byte_end":10307348,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307349,"byte_end":10307365,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307366,"byte_end":10307369,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307370,"byte_end":10307446,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307447,"byte_end":10307519,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307520,"byte_end":10307559,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307560,"byte_end":10307563,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307564,"byte_end":10307571,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307572,"byte_end":10307603,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307604,"byte_end":10307654,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307655,"byte_end":10307696,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307697,"byte_end":10307732,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307733,"byte_end":10307781,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307782,"byte_end":10307813,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307814,"byte_end":10307861,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307862,"byte_end":10307882,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307883,"byte_end":10307905,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307906,"byte_end":10307913,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307914,"byte_end":10307936,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307937,"byte_end":10307944,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307945,"byte_end":10307948,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307949,"byte_end":10307997,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10307998,"byte_end":10308001,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308002,"byte_end":10308013,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308014,"byte_end":10308066,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308067,"byte_end":10308132,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308133,"byte_end":10308198,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308199,"byte_end":10308264,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308265,"byte_end":10308272,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308273,"byte_end":10308276,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308277,"byte_end":10308349,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308350,"byte_end":10308425,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308426,"byte_end":10308498,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308499,"byte_end":10308575,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308576,"byte_end":10308649,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308650,"byte_end":10308653,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308654,"byte_end":10308670,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308671,"byte_end":10308674,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308675,"byte_end":10308749,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308750,"byte_end":10308817,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308818,"byte_end":10308821,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308822,"byte_end":10308829,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308830,"byte_end":10308861,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308862,"byte_end":10308912,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308913,"byte_end":10308954,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308955,"byte_end":10308990,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10308991,"byte_end":10309039,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309040,"byte_end":10309071,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309072,"byte_end":10309120,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309121,"byte_end":10309141,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309142,"byte_end":10309164,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309165,"byte_end":10309172,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309173,"byte_end":10309195,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309196,"byte_end":10309203,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309204,"byte_end":10309207,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309208,"byte_end":10309256,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309257,"byte_end":10309260,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309261,"byte_end":10309272,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309273,"byte_end":10309299,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309300,"byte_end":10309345,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309346,"byte_end":10309391,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309392,"byte_end":10309437,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309438,"byte_end":10309441,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309442,"byte_end":10309470,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309471,"byte_end":10309516,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309517,"byte_end":10309562,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309563,"byte_end":10309608,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309609,"byte_end":10309616,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309617,"byte_end":10309620,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309621,"byte_end":10309693,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309694,"byte_end":10309770,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309771,"byte_end":10309841,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309842,"byte_end":10309911,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309912,"byte_end":10309949,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309950,"byte_end":10309953,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10309954,"byte_end":10310028,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310029,"byte_end":10310083,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310084,"byte_end":10310087,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310088,"byte_end":10310104,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310105,"byte_end":10310108,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310109,"byte_end":10310182,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310183,"byte_end":10310259,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310260,"byte_end":10310334,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310335,"byte_end":10310348,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310349,"byte_end":10310352,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310353,"byte_end":10310360,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310361,"byte_end":10310392,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310393,"byte_end":10310443,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310444,"byte_end":10310485,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310486,"byte_end":10310521,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310522,"byte_end":10310571,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310572,"byte_end":10310603,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310604,"byte_end":10310652,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310653,"byte_end":10310697,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310698,"byte_end":10310720,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310721,"byte_end":10310728,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310729,"byte_end":10310751,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310752,"byte_end":10310759,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310760,"byte_end":10310763,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310764,"byte_end":10310812,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310813,"byte_end":10310816,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310817,"byte_end":10310828,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310829,"byte_end":10310855,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310856,"byte_end":10310906,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310907,"byte_end":10310957,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10310958,"byte_end":10311008,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311009,"byte_end":10311012,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311013,"byte_end":10311033,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311034,"byte_end":10311064,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311065,"byte_end":10311095,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311096,"byte_end":10311126,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311127,"byte_end":10311134,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311135,"byte_end":10311138,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311139,"byte_end":10311212,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311213,"byte_end":10311288,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311289,"byte_end":10311361,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311362,"byte_end":10311400,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311401,"byte_end":10311404,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311405,"byte_end":10311479,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311480,"byte_end":10311556,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311557,"byte_end":10311630,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311631,"byte_end":10311659,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311660,"byte_end":10311663,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311664,"byte_end":10311680,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311681,"byte_end":10311684,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311685,"byte_end":10311758,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311759,"byte_end":10311835,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311836,"byte_end":10311910,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311911,"byte_end":10311983,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311984,"byte_end":10311995,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10311996,"byte_end":10311999,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312000,"byte_end":10312007,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312008,"byte_end":10312039,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312040,"byte_end":10312090,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312091,"byte_end":10312132,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312133,"byte_end":10312168,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312169,"byte_end":10312218,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312219,"byte_end":10312250,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312251,"byte_end":10312316,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312317,"byte_end":10312337,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312338,"byte_end":10312360,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312361,"byte_end":10312368,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312369,"byte_end":10312376,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312377,"byte_end":10312380,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312381,"byte_end":10312429,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312430,"byte_end":10312433,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312434,"byte_end":10312445,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312446,"byte_end":10312472,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312473,"byte_end":10312523,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312524,"byte_end":10312574,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312575,"byte_end":10312625,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312626,"byte_end":10312629,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312630,"byte_end":10312650,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312651,"byte_end":10312681,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312682,"byte_end":10312712,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312713,"byte_end":10312743,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312744,"byte_end":10312751,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312752,"byte_end":10312755,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312756,"byte_end":10312829,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312830,"byte_end":10312904,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312905,"byte_end":10312979,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10312980,"byte_end":10313053,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313054,"byte_end":10313130,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313131,"byte_end":10313164,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313165,"byte_end":10313168,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313169,"byte_end":10313185,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313186,"byte_end":10313189,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313190,"byte_end":10313264,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313265,"byte_end":10313332,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313333,"byte_end":10313336,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313337,"byte_end":10313344,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313345,"byte_end":10313376,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313377,"byte_end":10313427,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313428,"byte_end":10313469,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313470,"byte_end":10313505,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313506,"byte_end":10313554,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313555,"byte_end":10313586,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313587,"byte_end":10313634,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313635,"byte_end":10313681,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313682,"byte_end":10313704,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313705,"byte_end":10313712,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313713,"byte_end":10313735,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313736,"byte_end":10313743,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313744,"byte_end":10313747,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313748,"byte_end":10313796,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313797,"byte_end":10313800,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313801,"byte_end":10313812,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313813,"byte_end":10313869,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313870,"byte_end":10313931,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313932,"byte_end":10313993,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10313994,"byte_end":10314055,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314056,"byte_end":10314063,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314064,"byte_end":10314067,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314068,"byte_end":10314142,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314143,"byte_end":10314163,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314164,"byte_end":10314167,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314168,"byte_end":10314182,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314183,"byte_end":10314186,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314187,"byte_end":10314262,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314263,"byte_end":10314335,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314336,"byte_end":10314404,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314405,"byte_end":10314481,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314482,"byte_end":10314523,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314524,"byte_end":10314527,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314528,"byte_end":10314598,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314599,"byte_end":10314617,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314618,"byte_end":10314621,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314622,"byte_end":10314629,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314630,"byte_end":10314662,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314663,"byte_end":10314713,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314714,"byte_end":10314758,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314759,"byte_end":10314772,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314773,"byte_end":10314808,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314809,"byte_end":10314840,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314841,"byte_end":10314864,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314865,"byte_end":10314872,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314873,"byte_end":10314895,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314896,"byte_end":10314903,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314904,"byte_end":10314907,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314908,"byte_end":10314958,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314959,"byte_end":10314962,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314963,"byte_end":10314974,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10314975,"byte_end":10315008,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315009,"byte_end":10315042,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315043,"byte_end":10315076,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315077,"byte_end":10315084,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315085,"byte_end":10315088,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315089,"byte_end":10315158,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315159,"byte_end":10315196,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315197,"byte_end":10315236,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315237,"byte_end":10315282,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315283,"byte_end":10315330,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315331,"byte_end":10315361,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315362,"byte_end":10315395,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315957,"byte_end":10315964,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315639,"byte_end":10315694,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315695,"byte_end":10315698,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315699,"byte_end":10315774,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315775,"byte_end":10315855,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10315856,"byte_end":10315915,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316635,"byte_end":10316660,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":802}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316550,"byte_end":10316623,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":970},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317005,"byte_end":10317025,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316681,"byte_end":10316755,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316756,"byte_end":10316759,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316760,"byte_end":10316839,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316840,"byte_end":10316883,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316884,"byte_end":10316887,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316888,"byte_end":10316941,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316942,"byte_end":10316945,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10316946,"byte_end":10316976,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317369,"byte_end":10317372,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317278,"byte_end":10317357,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317599,"byte_end":10317606,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317496,"byte_end":10317571,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317576,"byte_end":10317587,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317828,"byte_end":10317844,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317656,"byte_end":10317697,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317702,"byte_end":10317705,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317710,"byte_end":10317783,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317788,"byte_end":10317816,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10318265,"byte_end":10318285,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317909,"byte_end":10317943,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317948,"byte_end":10317951,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317956,"byte_end":10318026,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10318031,"byte_end":10318106,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10318111,"byte_end":10318183,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10318188,"byte_end":10318253,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323561,"byte_end":10323564,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323019,"byte_end":10323094,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323099,"byte_end":10323110,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323115,"byte_end":10323118,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323123,"byte_end":10323137,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323142,"byte_end":10323145,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323150,"byte_end":10323157,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323162,"byte_end":10323193,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323198,"byte_end":10323246,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323251,"byte_end":10323254,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323259,"byte_end":10323300,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323305,"byte_end":10323340,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323345,"byte_end":10323376,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323381,"byte_end":10323412,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323417,"byte_end":10323446,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323451,"byte_end":10323471,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323476,"byte_end":10323498,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323503,"byte_end":10323510,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323515,"byte_end":10323537,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323542,"byte_end":10323549,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324749,"byte_end":10324759,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324228,"byte_end":10324277,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324282,"byte_end":10324285,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324290,"byte_end":10324322,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324327,"byte_end":10324330,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324335,"byte_end":10324403,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324408,"byte_end":10324411,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324416,"byte_end":10324430,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324435,"byte_end":10324438,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324443,"byte_end":10324450,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324455,"byte_end":10324486,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324491,"byte_end":10324539,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324544,"byte_end":10324547,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324552,"byte_end":10324593,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324598,"byte_end":10324633,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324638,"byte_end":10324659,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324664,"byte_end":10324686,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324691,"byte_end":10324698,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324703,"byte_end":10324725,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324730,"byte_end":10324737,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325391,"byte_end":10325404,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324858,"byte_end":10324910,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324915,"byte_end":10324918,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324923,"byte_end":10324961,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324966,"byte_end":10324969,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10324974,"byte_end":10325042,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325047,"byte_end":10325050,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325055,"byte_end":10325069,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325074,"byte_end":10325077,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325082,"byte_end":10325089,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325094,"byte_end":10325125,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325130,"byte_end":10325178,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325183,"byte_end":10325186,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325191,"byte_end":10325232,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325237,"byte_end":10325272,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325277,"byte_end":10325301,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325306,"byte_end":10325328,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325333,"byte_end":10325340,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325345,"byte_end":10325367,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325372,"byte_end":10325379,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326037,"byte_end":10326050,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325504,"byte_end":10325556,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325561,"byte_end":10325564,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325569,"byte_end":10325607,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325612,"byte_end":10325615,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325620,"byte_end":10325688,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325693,"byte_end":10325696,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325701,"byte_end":10325715,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325720,"byte_end":10325723,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325728,"byte_end":10325735,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325740,"byte_end":10325771,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325776,"byte_end":10325824,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325829,"byte_end":10325832,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325837,"byte_end":10325878,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325883,"byte_end":10325918,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325923,"byte_end":10325947,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325952,"byte_end":10325974,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325979,"byte_end":10325986,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10325991,"byte_end":10326013,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326018,"byte_end":10326025,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327131,"byte_end":10327147,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326219,"byte_end":10326248,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326253,"byte_end":10326256,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326261,"byte_end":10326333,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326338,"byte_end":10326363,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326368,"byte_end":10326371,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326376,"byte_end":10326448,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326453,"byte_end":10326522,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326527,"byte_end":10326600,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326605,"byte_end":10326617,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326622,"byte_end":10326625,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326630,"byte_end":10326705,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326710,"byte_end":10326771,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326776,"byte_end":10326779,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326784,"byte_end":10326798,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326803,"byte_end":10326806,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326811,"byte_end":10326818,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326823,"byte_end":10326854,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326859,"byte_end":10326907,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326912,"byte_end":10326915,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326920,"byte_end":10326961,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10326966,"byte_end":10327001,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327006,"byte_end":10327041,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327046,"byte_end":10327068,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327073,"byte_end":10327080,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327085,"byte_end":10327107,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327112,"byte_end":10327119,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327808,"byte_end":10327827,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327244,"byte_end":10327307,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327312,"byte_end":10327315,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327320,"byte_end":10327371,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327376,"byte_end":10327379,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327384,"byte_end":10327452,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327457,"byte_end":10327460,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327465,"byte_end":10327479,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327484,"byte_end":10327487,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327492,"byte_end":10327499,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327504,"byte_end":10327535,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327540,"byte_end":10327588,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327593,"byte_end":10327596,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327601,"byte_end":10327642,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327647,"byte_end":10327682,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327687,"byte_end":10327718,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327723,"byte_end":10327745,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327750,"byte_end":10327757,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327762,"byte_end":10327784,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327789,"byte_end":10327796,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328486,"byte_end":10328505,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10327996,"byte_end":10328062,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328067,"byte_end":10328070,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328075,"byte_end":10328130,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328135,"byte_end":10328138,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328143,"byte_end":10328157,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328162,"byte_end":10328165,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328170,"byte_end":10328177,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328182,"byte_end":10328213,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328218,"byte_end":10328266,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328271,"byte_end":10328274,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328279,"byte_end":10328320,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328325,"byte_end":10328360,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328365,"byte_end":10328396,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328401,"byte_end":10328423,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328428,"byte_end":10328435,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328440,"byte_end":10328462,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328467,"byte_end":10328474,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329059,"byte_end":10329076,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328608,"byte_end":10328681,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328686,"byte_end":10328704,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328709,"byte_end":10328712,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328717,"byte_end":10328731,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328736,"byte_end":10328739,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328744,"byte_end":10328751,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328756,"byte_end":10328787,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328792,"byte_end":10328840,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328845,"byte_end":10328848,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328853,"byte_end":10328894,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328899,"byte_end":10328934,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328939,"byte_end":10328969,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10328974,"byte_end":10328996,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329001,"byte_end":10329008,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329013,"byte_end":10329035,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329040,"byte_end":10329047,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329726,"byte_end":10329734,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329177,"byte_end":10329240,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329245,"byte_end":10329248,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329253,"byte_end":10329314,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329319,"byte_end":10329322,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329327,"byte_end":10329381,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329386,"byte_end":10329389,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329394,"byte_end":10329408,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329413,"byte_end":10329416,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329421,"byte_end":10329428,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329433,"byte_end":10329464,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329469,"byte_end":10329517,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329522,"byte_end":10329525,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329530,"byte_end":10329571,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329576,"byte_end":10329611,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329616,"byte_end":10329636,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329641,"byte_end":10329663,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329668,"byte_end":10329675,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329680,"byte_end":10329702,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329707,"byte_end":10329714,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330254,"byte_end":10330263,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329832,"byte_end":10329895,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329900,"byte_end":10329903,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329908,"byte_end":10329922,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329927,"byte_end":10329930,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329935,"byte_end":10329942,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10329947,"byte_end":10329995,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330000,"byte_end":10330021,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330026,"byte_end":10330061,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330066,"byte_end":10330097,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330102,"byte_end":10330133,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330138,"byte_end":10330167,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330172,"byte_end":10330192,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330197,"byte_end":10330218,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330223,"byte_end":10330230,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330235,"byte_end":10330242,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330919,"byte_end":10330927,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330415,"byte_end":10330468,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330473,"byte_end":10330476,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330481,"byte_end":10330495,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330500,"byte_end":10330503,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330508,"byte_end":10330515,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330520,"byte_end":10330551,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330556,"byte_end":10330604,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330609,"byte_end":10330612,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330617,"byte_end":10330658,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330663,"byte_end":10330698,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330703,"byte_end":10330734,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330739,"byte_end":10330770,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330775,"byte_end":10330804,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330809,"byte_end":10330829,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330834,"byte_end":10330856,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330861,"byte_end":10330868,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330873,"byte_end":10330895,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10330900,"byte_end":10330907,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331500,"byte_end":10331509,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331091,"byte_end":10331145,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331150,"byte_end":10331153,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331158,"byte_end":10331172,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331177,"byte_end":10331180,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331185,"byte_end":10331192,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331197,"byte_end":10331229,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331234,"byte_end":10331284,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331289,"byte_end":10331333,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331338,"byte_end":10331373,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331378,"byte_end":10331409,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331414,"byte_end":10331437,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331442,"byte_end":10331449,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331454,"byte_end":10331476,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331481,"byte_end":10331488,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332118,"byte_end":10332128,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331670,"byte_end":10331719,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331724,"byte_end":10331727,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331732,"byte_end":10331746,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331751,"byte_end":10331754,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331759,"byte_end":10331766,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331771,"byte_end":10331816,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331821,"byte_end":10331871,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331876,"byte_end":10331932,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331937,"byte_end":10331950,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331955,"byte_end":10331990,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10331995,"byte_end":10332026,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332031,"byte_end":10332055,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332060,"byte_end":10332067,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332072,"byte_end":10332094,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332099,"byte_end":10332106,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":986},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10333507,"byte_end":10333517,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10333264,"byte_end":10333351,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10333352,"byte_end":10333355,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10333356,"byte_end":10333394,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10333395,"byte_end":10333433,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334617,"byte_end":10334620,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334198,"byte_end":10334258,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334263,"byte_end":10334266,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334271,"byte_end":10334281,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334286,"byte_end":10334289,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334294,"byte_end":10334366,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334371,"byte_end":10334444,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334449,"byte_end":10334516,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334521,"byte_end":10334524,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334529,"byte_end":10334605,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335751,"byte_end":10335770,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334778,"byte_end":10334838,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334843,"byte_end":10334846,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334851,"byte_end":10334914,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334919,"byte_end":10334997,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335002,"byte_end":10335069,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335074,"byte_end":10335146,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335151,"byte_end":10335221,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335226,"byte_end":10335249,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335254,"byte_end":10335257,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335262,"byte_end":10335272,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335277,"byte_end":10335280,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335285,"byte_end":10335360,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335365,"byte_end":10335438,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335443,"byte_end":10335519,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335524,"byte_end":10335597,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335602,"byte_end":10335672,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335677,"byte_end":10335680,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335685,"byte_end":10335739,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336336,"byte_end":10336346,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335898,"byte_end":10335948,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335953,"byte_end":10335956,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335961,"byte_end":10335968,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335973,"byte_end":10335992,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10335997,"byte_end":10336035,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336040,"byte_end":10336043,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336048,"byte_end":10336082,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336087,"byte_end":10336134,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336139,"byte_end":10336146,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336151,"byte_end":10336158,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336163,"byte_end":10336201,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336206,"byte_end":10336209,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336214,"byte_end":10336267,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336272,"byte_end":10336312,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336317,"byte_end":10336324,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340706,"byte_end":10340727,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340660,"byte_end":10340701,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340762,"byte_end":10340764,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340733,"byte_end":10340757,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340638,"byte_end":10340653,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1011}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340556,"byte_end":10340611,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/mod.rs","byte_start":6487,"byte_end":6517,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8294,"byte_end":8311,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7076,"byte_end":7153,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7154,"byte_end":7164,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7165,"byte_end":7168,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7169,"byte_end":7234,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7235,"byte_end":7309,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7310,"byte_end":7313,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7314,"byte_end":7397,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7398,"byte_end":7401,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7402,"byte_end":7416,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7417,"byte_end":7420,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7421,"byte_end":7434,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7435,"byte_end":7457,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7458,"byte_end":7498,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7499,"byte_end":7502,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7503,"byte_end":7521,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7522,"byte_end":7543,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7544,"byte_end":7589,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7590,"byte_end":7631,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7632,"byte_end":7635,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7636,"byte_end":7687,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7688,"byte_end":7751,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7752,"byte_end":7773,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7774,"byte_end":7823,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7824,"byte_end":7870,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7871,"byte_end":7892,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7893,"byte_end":7910,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7911,"byte_end":7992,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":7993,"byte_end":8015,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8016,"byte_end":8033,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8034,"byte_end":8047,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8048,"byte_end":8059,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8060,"byte_end":8063,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8064,"byte_end":8097,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8098,"byte_end":8173,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8174,"byte_end":8201,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8202,"byte_end":8213,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8214,"byte_end":8217,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8218,"byte_end":8268,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8269,"byte_end":8274,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8275,"byte_end":8282,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8731,"byte_end":8756,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8578,"byte_end":8652,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8653,"byte_end":8670,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8671,"byte_end":8719,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":11264,"byte_end":11267,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":11189,"byte_end":11252,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13320,"byte_end":13331,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12057,"byte_end":12128,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12133,"byte_end":12166,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12171,"byte_end":12174,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12179,"byte_end":12250,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12255,"byte_end":12287,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12292,"byte_end":12295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12300,"byte_end":12314,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12319,"byte_end":12322,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12327,"byte_end":12340,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12345,"byte_end":12367,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12372,"byte_end":12412,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12417,"byte_end":12420,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12425,"byte_end":12443,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12448,"byte_end":12469,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12474,"byte_end":12519,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12524,"byte_end":12570,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12575,"byte_end":12578,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12583,"byte_end":12634,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12639,"byte_end":12702,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12707,"byte_end":12728,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12733,"byte_end":12781,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12786,"byte_end":12832,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12837,"byte_end":12858,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12863,"byte_end":12880,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12885,"byte_end":12966,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12971,"byte_end":12993,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":12998,"byte_end":13015,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13020,"byte_end":13033,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13038,"byte_end":13049,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13054,"byte_end":13057,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13062,"byte_end":13095,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13100,"byte_end":13175,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13180,"byte_end":13207,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13212,"byte_end":13223,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13228,"byte_end":13231,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13236,"byte_end":13286,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13291,"byte_end":13296,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":13301,"byte_end":13308,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":15906,"byte_end":15912,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":15717,"byte_end":15789,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":15794,"byte_end":15814,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":15819,"byte_end":15822,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":15827,"byte_end":15894,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":16040,"byte_end":16052,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":15964,"byte_end":16028,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":16203,"byte_end":16212,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":16117,"byte_end":16191,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":185},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":1087},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":223},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":238},{"krate":0,"index":243},{"krate":0,"index":249}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69212,"byte_end":69247,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":71194,"byte_end":71198,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":71207,"byte_end":71212,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1087},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":71175,"byte_end":71181,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1093}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69424,"byte_end":69530,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69531,"byte_end":69534,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69535,"byte_end":69625,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69626,"byte_end":69629,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69630,"byte_end":69665,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69666,"byte_end":69669,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69670,"byte_end":69683,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69684,"byte_end":69687,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69688,"byte_end":69725,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69726,"byte_end":69729,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69730,"byte_end":69749,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69750,"byte_end":69792,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69793,"byte_end":69843,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69844,"byte_end":69895,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69896,"byte_end":69914,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69915,"byte_end":69936,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69937,"byte_end":69979,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":69980,"byte_end":70013,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70014,"byte_end":70030,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70031,"byte_end":70125,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70126,"byte_end":70136,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70137,"byte_end":70140,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70141,"byte_end":70188,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70189,"byte_end":70194,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70195,"byte_end":70202,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70203,"byte_end":70206,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70407,"byte_end":70410,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70411,"byte_end":70497,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70498,"byte_end":70508,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70509,"byte_end":70512,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70513,"byte_end":70520,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70521,"byte_end":70556,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70557,"byte_end":70599,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70600,"byte_end":70650,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70651,"byte_end":70702,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70703,"byte_end":70706,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70707,"byte_end":70725,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70726,"byte_end":70747,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70748,"byte_end":70790,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70791,"byte_end":70838,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70839,"byte_end":70855,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70856,"byte_end":70905,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70906,"byte_end":70916,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70917,"byte_end":70920,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70921,"byte_end":70954,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70955,"byte_end":70995,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":70996,"byte_end":71028,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":71029,"byte_end":71034,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":71035,"byte_end":71042,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":71043,"byte_end":71065,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265887,"byte_end":10265897,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10266048,"byte_end":10266058,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10266385,"byte_end":10266395,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10275578,"byte_end":10275587,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10275787,"byte_end":10275797,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10275948,"byte_end":10275957,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276280,"byte_end":10276290,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276536,"byte_end":10276544,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276641,"byte_end":10276649,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276760,"byte_end":10276768,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276868,"byte_end":10276876,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276986,"byte_end":10276996,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10278942,"byte_end":10278952,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10281788,"byte_end":10281794,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285316,"byte_end":10285322,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290637,"byte_end":10290643,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290959,"byte_end":10290965,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10291680,"byte_end":10291686,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292726,"byte_end":10292737,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10293664,"byte_end":10293674,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294563,"byte_end":10294573,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296670,"byte_end":10296680,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296993,"byte_end":10297003,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10297729,"byte_end":10297739,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10298718,"byte_end":10298729,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299085,"byte_end":10299096,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10301205,"byte_end":10301216,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10301980,"byte_end":10301991,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10302232,"byte_end":10302243,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317251,"byte_end":10317271,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10320624,"byte_end":10320644,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10321531,"byte_end":10321551,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10322892,"byte_end":10322912,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323005,"byte_end":10323012,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332611,"byte_end":10332618,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332744,"byte_end":10332769,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332927,"byte_end":10332952,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10333087,"byte_end":10333112,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334181,"byte_end":10334191,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336733,"byte_end":10336743,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340154,"byte_end":10340164,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340487,"byte_end":10340497,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340802,"byte_end":10340817,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10341099,"byte_end":10341114,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10341231,"byte_end":10341246,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8514,"byte_end":8531,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8556,"byte_end":8573,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":9307,"byte_end":9332,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":9406,"byte_end":9423,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":9648,"byte_end":9665,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":10071,"byte_end":10088,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":11058,"byte_end":11075,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":11165,"byte_end":11182,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":17048,"byte_end":17073,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":17245,"byte_end":17270,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":18705,"byte_end":18730,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":19918,"byte_end":19932,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":20266,"byte_end":20283,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":20883,"byte_end":20900,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":21758,"byte_end":21771,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":22956,"byte_end":22978,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/intrusive_double_linked_list.rs","byte_start":40497,"byte_end":40505,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/intrusive_double_linked_list.rs","byte_start":40755,"byte_end":40763,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/intrusive_double_linked_list.rs","byte_start":40868,"byte_end":40876,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/intrusive_double_linked_list.rs","byte_start":41185,"byte_end":41195,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":71818,"byte_end":71824,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":72067,"byte_end":72073,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":72346,"byte_end":72352,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":72680,"byte_end":72686,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":73040,"byte_end":73046,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":73598,"byte_end":73604,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":758,"byte_end":763,"line_start":30,"line_end":30,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":303}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/mod.rs","byte_start":10264405,"byte_end":10264421,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":747}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":907,"byte_end":911,"line_start":49,"line_end":49,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/lib.rs","byte_start":922,"byte_end":928,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":185}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10265887,"byte_end":10265897,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10266048,"byte_end":10266058,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":917},"to":{"krate":0,"index":353}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/bytes_codec.rs","byte_start":10266385,"byte_end":10266395,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":917},"to":{"krate":0,"index":370}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10275578,"byte_end":10275587,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10275787,"byte_end":10275797,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10275948,"byte_end":10275957,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":431},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276280,"byte_end":10276290,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276536,"byte_end":10276544,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2452}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276641,"byte_end":10276649,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2455}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276760,"byte_end":10276768,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2452}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276868,"byte_end":10276876,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2455}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10276986,"byte_end":10276996,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1236},"to":{"krate":26,"index":96}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_impl.rs","byte_start":10278942,"byte_end":10278952,"line_start":164,"line_end":164,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1236},"to":{"krate":28,"index":17}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10281788,"byte_end":10281794,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10285316,"byte_end":10285322,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290637,"byte_end":10290643,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1186},"to":{"krate":26,"index":96}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10290959,"byte_end":10290965,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1186},"to":{"krate":28,"index":17}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10291680,"byte_end":10291686,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1186},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed.rs","byte_start":10292726,"byte_end":10292737,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":946},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10293664,"byte_end":10293674,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10294563,"byte_end":10294573,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296670,"byte_end":10296680,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1145},"to":{"krate":26,"index":96}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10296993,"byte_end":10297003,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1145},"to":{"krate":28,"index":17}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_read.rs","byte_start":10297729,"byte_end":10297739,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10298718,"byte_end":10298729,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10299085,"byte_end":10299096,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10301205,"byte_end":10301216,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1104},"to":{"krate":28,"index":17}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10301980,"byte_end":10301991,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1104},"to":{"krate":26,"index":96}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/framed_write.rs","byte_start":10302232,"byte_end":10302243,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10317251,"byte_end":10317271,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10320624,"byte_end":10320644,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":970},"to":{"krate":0,"index":353}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10321531,"byte_end":10321551,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":970},"to":{"krate":0,"index":370}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10322892,"byte_end":10322912,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":970},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10323005,"byte_end":10323012,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332611,"byte_end":10332618,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":958},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332744,"byte_end":10332769,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10332927,"byte_end":10332952,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/length_delimited.rs","byte_start":10333087,"byte_end":10333112,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10334181,"byte_end":10334191,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10336733,"byte_end":10336743,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":986},"to":{"krate":0,"index":353}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340154,"byte_end":10340164,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":986},"to":{"krate":0,"index":370}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340487,"byte_end":10340497,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10340802,"byte_end":10340817,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":8901}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10341099,"byte_end":10341114,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/codec/lines_codec.rs","byte_start":10341231,"byte_end":10341246,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1008},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8514,"byte_end":8531,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":50},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":8556,"byte_end":8573,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":50},"to":{"krate":2,"index":2865}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":9307,"byte_end":9332,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":2853}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":9406,"byte_end":9423,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":50},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":9648,"byte_end":9665,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":50},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":10071,"byte_end":10088,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":50},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":11058,"byte_end":11075,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":50},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":11165,"byte_end":11182,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":17048,"byte_end":17073,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":17245,"byte_end":17270,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":18705,"byte_end":18730,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":19918,"byte_end":19932,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":20266,"byte_end":20283,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":20883,"byte_end":20900,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":21758,"byte_end":21771,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/cancellation_token.rs","byte_start":22956,"byte_end":22978,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/intrusive_double_linked_list.rs","byte_start":40497,"byte_end":40505,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/intrusive_double_linked_list.rs","byte_start":40755,"byte_end":40763,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1071},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/intrusive_double_linked_list.rs","byte_start":40868,"byte_end":40876,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1071},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/sync/intrusive_double_linked_list.rs","byte_start":41185,"byte_end":41195,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":71818,"byte_end":71824,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1087},"to":{"krate":2,"index":12108}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":72067,"byte_end":72073,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1087},"to":{"krate":17,"index":220}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":72346,"byte_end":72352,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1087},"to":{"krate":17,"index":178}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":72680,"byte_end":72686,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1087},"to":{"krate":17,"index":259}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":73040,"byte_end":73046,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1087},"to":{"krate":17,"index":299}},{"span":{"file_name":"/Users/patrickbeam/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.1/src/either.rs","byte_start":73598,"byte_end":73604,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1087},"to":{"krate":26,"index":96}}]}